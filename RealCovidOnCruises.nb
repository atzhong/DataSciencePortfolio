(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1524087,      30402]
NotebookOptionsPosition[   1508301,      30157]
NotebookOutlinePosition[   1508823,      30176]
CellTagsIndexPosition[   1508780,      30173]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Covid - 19 on Cruise Lines", "Title",
 CellChangeTimes->{{3.8157970482296705`*^9, 
  3.815797058851326*^9}},ExpressionUUID->"e4c27b7a-0fe9-4c4c-bc40-\
4653be60ccf8"],

Cell["\<\
Math 9 Final Project
Fall 2020
By Austin Zhong\
\>", "Text",
 CellChangeTimes->{{3.8157970792100697`*^9, 3.815797087393482*^9}, {
  3.8169632568761272`*^9, 
  3.816963295894482*^9}},ExpressionUUID->"d39b64a5-9f06-4e24-8fcd-\
23d50fbcb809"],

Cell["\<\
I\[CloseCurlyQuote]d like to give a little preface on why I chose my topic to \
be about Covid-19\[CloseCurlyQuote]s affect on cruise lines. As we all know, \
traveling puts people at a high risk for contracting and spreading the virus. \
Airplane travel was the first to come to my mind, but there was an industry \
that was hit even harder than airlines. Cruises, a perfect storm for mass \
incubation and spread of Covid-19. Imagine an isolated ship, filled with \
thousands of people, with limited space, supplies, and professionals battling \
the highly contagious virus. It\[CloseCurlyQuote]s with reasonable intuition \
that the CDC issued a No Sail Order and Conditional Sailing Order effective \
from March 2020 to November 2021. I\[CloseCurlyQuote]d like to explore the \
effects of Covid-19 on cruise stocks and create a model simulating the spread \
of Covid-19 on a full capacity cruise liner.\
\>", "Text",
 CellChangeTimes->{{3.8160535668147326`*^9, 3.8160536928718348`*^9}, {
  3.816053809142334*^9, 3.816053821352686*^9}, {3.8160538713480864`*^9, 
  3.81605387197766*^9}, {3.8160540870241165`*^9, 3.8160541455400486`*^9}, {
  3.8160541946236916`*^9, 3.816054379205162*^9}, {3.8160544151627836`*^9, 
  3.816054420837155*^9}, {3.8160545282369585`*^9, 3.816054535088296*^9}, {
  3.8160545666551466`*^9, 3.816054573716942*^9}, {3.816054663740055*^9, 
  3.8160546742879624`*^9}, {3.8160547659836426`*^9, 3.816054805555764*^9}, {
  3.8160548418399906`*^9, 3.8160548903606997`*^9}, {3.81605492175669*^9, 
  3.8160550172978992`*^9}, {3.8164848684483776`*^9, 
  3.8164848724784865`*^9}},ExpressionUUID->"67e5898a-23d1-4267-b122-\
79ad00887edf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"https", ":"}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "cdc", ".", "gov"}], "/", "quarantine"}], "/", 
     "cruise"}], "/", 
    RowBox[{"index", ".", "html"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8160540320553493`*^9, 3.8160540354574757`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"cef2e524-2b46-4053-b6be-c4fa660c69ec"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "I", " ", "started", " ", "working", " ", "on", " ", "cruise", " ", "line", 
   " ", "stocks", " ", "because", " ", "that", " ", "seemed", " ", "like", 
   " ", "the", " ", "most", " ", "tangable", " ", "thing", " ", "I", " ", 
   "could", " ", "display", " ", "and", " ", 
   RowBox[{"analyze", ".", " ", "Thankfully"}], " ", "Mathmatica", " ", 
   "makes", " ", "it", " ", "easy", " ", "to", " ", "access", " ", "stock", 
   " ", 
   RowBox[{"data", ".", " ", "It"}], " ", "took", " ", "me", " ", "a", " ", 
   "little", " ", "bit", " ", "to", " ", "get", " ", "used", " ", "to", " ", 
   "working", " ", "with", " ", 
   RowBox[{"entities", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.815797143733553*^9, 3.8157972238618555`*^9}, {
  3.81587443333504*^9, 3.815874513399363*^9}, {3.8160550346555133`*^9, 
  3.8160550375423565`*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"827cdd42-20c8-4d86-a259-6902c5fe67de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
      "/", "ref"}], "/", 
     RowBox[{"FinancialData", ".", "html"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"clStocks", "[", "x_", "]"}], ":=", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"FinancialData", "[", 
      RowBox[{"x", ",", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "November 1, 2019", 
         Typeset`boxes$$ = RowBox[{"DateObject", "[", 
           RowBox[{"{", 
             RowBox[{"2019", ",", " ", "11", ",", " ", "1"}], "}"}], "]"}], 
         Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
         Typeset`open$$ = {1}, Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.6603113`7.271293722975031, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{156., {8., 21.}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "140"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RandomColor", "[", "1", "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", "x", "}"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.815789011818757*^9, 3.8157890266159563`*^9}, {
   3.815789069013897*^9, 3.8157890709383135`*^9}, {3.815789147600382*^9, 
   3.8157891557731876`*^9}, {3.8157893074506645`*^9, 3.815789309549657*^9}, {
   3.8157955423954268`*^9, 3.8157956755657253`*^9}, {3.8157963280582733`*^9, 
   3.8157963926736245`*^9}, {3.8157964258820615`*^9, 3.815796440694109*^9}, {
   3.8157968387943625`*^9, 3.815796853751642*^9}, {3.815796887588482*^9, 
   3.8157968913715057`*^9}, {3.8158746262912145`*^9, 
   3.8158746670651875`*^9}, {3.8158747261517506`*^9, 
   3.8158748079566083`*^9}, {3.816104588670788*^9, 3.8161045965178814`*^9}, 
   3.816799803456852*^9},
 CellLabel->
  "In[295]:=",ExpressionUUID->"5ca91c5b-9a1f-4ae0-994d-d871bfd233a9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8167200333447165`*^9, 3.8167200352446957`*^9}, {
  3.816720187554099*^9, 3.816720194330265*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"aa082176-ff94-4a92-adc9-d94f976928ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"clStocks", "[", 
   TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
     "\"financial entity\""},
    "Entity"], "]"}]}]], "Input",
 CellChangeTimes->{{3.8157956915414057`*^9, 3.815795694881716*^9}, {
  3.8157965072808113`*^9, 3.8157965091446605`*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"3c03fec5-e39c-4e42-b296-79a33c287e21"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09177765608768662, 0.4974449204380902, 0.4072148599971448]], 
        LineBox[CompressedData["
1:eJxVl3mMVFUWxh8gMrYaaxxGBFEfUbDZuh90s3T19qoXuumFfr2vQPW+0DSV
uCNqiSG4IDzF0ZAg85AZYJiEqQg9MDiaijOKC2IRjYiiFqCJEdRSBJdoFL5z
PpLqfyq/nPvu/e53lpue1LGipnukYRjjRxjGxd8Lf+GXZ5wJXPzN3bXQvvDr
y50Jjt40uewi273Cwf154NCTwubuMWDvRWFj6kRw7HP9/twX2C/YlSb7v3IO
7K4X9kq2gqP7hc22a/B94qRwfGUm2Lw6Xc9bC448nq56XgbHh9N1/XtgX1zY
ONop+lMsPX9Y9Gdaev6I8ots7LFU/y+IWx8L2yk/gINjZsn3p6uxPtpKPoK4
86GwnbERHL5stsTHDoneNPJh0dskfOFG2M/3sLB9ogXsjcjg9+DY9AzeR/Q2
ZOh994KtsPI2XwX07uL6U4gnUjP1fpvBZq1wcMPzYOf+TM3/ADi8Q9hc809w
5Ijy7oPY33bmqH+BSvi5co6eb4Fjh+eo/vVg46dkdu+eq/uXg6Nb5zLfYPP8
XOoBO+Y8qadDh3B+fItwsKcH7Htjnt5vleg7q+vPvQ4O3Tif9Yr9vJL56vfP
iFuvaXzNafEvofGMs2B3Qpb2w6vgaFGW6ivDfomhLF3/Ljgyzi/+bPpJ9Ab8
6k9M9A762S9Ybz/j5/mS77HZ6sdYyXd+ttZLWPLdn635Gyl6N2bTD8Tdl7LV
rzPSPzk5sl/19ZLvnhzdLyj5dnOYH8n3gRz9fh04/lmO+tcr/dOZSz3oX++J
3KT5ENuXq/5OEP0nlVP2SX9dladxv/T73jzV9wH2Mz/N4/2kv67IZ72VQm9G
PvNdAj9fyGc+iuHn8XzVu6MQei+3qacAei1b9S4JQG+LzXmEePCYrfl4C3F3
VEDn0zs28j8zwPuDE40Bvd+zOdC/OqD5H58NP40Cfp8BP6cV8PtM6K9n/Jo0
6H+wQP2vuAX6/1Gg9ZUxBX6mFqreE5PhZ00hv78V+lcVsn5uhv7thTr/7jSh
P6bxbaFJ8LeqSPU34rzwvUXUNx36txVxflvQ/3aR+rMsHfp/1HhuSir8vatY
89MGfTGvmPUNNt4qpj84zzpXzP6GvuDNC7genHhugfbfaNzPfP0Sww/nuwW8
z23QP7FE62n+NPj5Knk/1oe+KVE/94je8aU6L1LBscJSxsXvoVKtx1cQd8+U
cn4gHr1uofplgBO2sBd6Cfc1ly1UfQnR+5eF1IN4/E9lzCfivrwy7cc00d9X
pvr64H/oqTL2O9j7L9fvRr6s7HLuNwN+dpczH9jf3aDxUK7o/0859eN+iVNc
fxwc7qhg/cDfyLoK6sP38X9XaD9tQX58Jyo0P2twP/vKSq2vo1IPj1bSz6nw
d29l0nnWJ5VazxsQD/5hEesb93FnL2K94L7OR4s43+FHeHQV+3EW9KZX6Xv9
R6nfZnI16jf0QRXnB9Z7Ix2+t+DYDIf5BhuNDvdHP1sPOXyv58LP3xzexw8/
p1ZrPibNRz3UVWv+tqP/nQeq1X8b+4d3knU+3Faj+foV59nVNexHxEP31XA+
IO79vUb9qgLH3qlhP8yGn4tqVf84nOfeU0v/EI8+X6v9uQn+JA7Vcp7AP/OH
WuYH8ypyZx1Z/P1rHf0A+96s47wA29/XsR+wv/FcPf1B3DpYr/l4DPsHv62n
/1jv3tDA+kc8WnyJ8b3z/wb6gfXhrxu0f3aK3usb6S/uGy9opD8yz5Y3Jp3v
nW5Ufw7OhJ9/bqL/YMNuYj2BrQHyEem/p5tY7+DEtc1k9LeZ28z5hbjT28x+
BoefbOZ8BkdebFY9Jah/29+i/XcT9gt1XWLEvfUt3B8c29+ifq7EfsYp8s+I
u+2tqq9A/H28ledJPQy3ch4gbsZbqRfspLTRX6yPP9JG/xD37WlLyp/9cRvn
k/TjmMWcx2Bv1mLeB2xFFnO+It/BDxfreVGwe9kS3hfro2lL2G+IJ5oYj0i/
HV2i50+UeTFiKetT6nn6Uvaf1HODcslWrLfDS1nfqCdjalDvuxZs1QbVn6+x
Pnh/Mrs7gur3arA5pV3r702w47Rrff4o821lO/0VvX9rZ77A8cOM2/JeVHYw
v6hP7+6OpH6Ibe1gfYGNQx3cT+r5fAfvi/2id3Qy3+Lnls6k/jff6Ezy0znb
yf3F7xu79H0oBvs2dyX5a7/WpXr9iIcSXapnJPz0JnSzv8GxIuUTB2S+/a+b
8wrsftXNeS36x/Ww/kV/oEfn3XjRP9jD/cGRL8m3Sz2M7eX+oj+/N1l/f6/2
x7Do36jxTc1SH9f28f2SeZfTx3qReu7p43uHfLhuH+eR1POBvqR8OFn9Wn/T
pT46+3X/daL/iX72k+jf15/03vhO9ifVlxccYD3Ogb+PDbD/8N4YwwN83+X9
+3RA73dM/L9iGfVjfWItuQr7mS9ciuO9dI4v4zzB+vDlg7r/aKyPWIPJ79+/
BvV9PiXv37FB3hf7eaOWM3/zoLdpOesV7L6/XO/zibzXxhD7HZyYNsT5hPVm
/RD7Owt6HxzS8yrwvsd/HWI/gn2pK/T7Kfh/wK5ZwX7C/wOhVSs4n8DedsZX
++3fAeVxplc=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06118510405845775, 0.33162994695872683`, 
                    0.2714765733314299], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09177765608768662`", ",", "0.4974449204380902`", ",", 
                    "0.4072148599971448`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.09177765608768662, 0.4974449204380902, 
                   0.4072148599971448], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8157957000121965`*^9, 3.8157957451277795`*^9, {3.815796374913967*^9, 
   3.815796397248989*^9}, {3.8157964297971973`*^9, 3.81579644416673*^9}, 
   3.8157965113750935`*^9, 3.815796895732264*^9, 3.815874680642255*^9, {
   3.8158747300270305`*^9, 3.815874741721885*^9}, {3.815874775192045*^9, 
   3.815874812749662*^9}, 3.8160421132460775`*^9, 3.816044918825244*^9, 
   3.816052314426181*^9, 3.8160950489468484`*^9, 3.816106976140388*^9, 
   3.8161071513256836`*^9, 3.8161094204089775`*^9, 3.816109523527821*^9, 
   3.8164849344246845`*^9, 3.816527660159713*^9, 3.816798579482385*^9, 
   3.816801260289802*^9, 3.8168013140561523`*^9, 3.8168879633736944`*^9, 
   3.816888756120324*^9, 3.816894072809094*^9, 3.816958504309534*^9, 
   3.8169623595160427`*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"96baf215-7690-414f-afa1-507044969e5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"clStocks", "[", 
   TemplateBox[{"\"Royal Caribbean\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], "]"}]}]], "Input",
 CellChangeTimes->{{3.815796636425619*^9, 3.81579665101027*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"ff05fdb2-d976-4a53-9cdd-e26ee6a9ccc3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2530057584292913, 0.7156441775358953, 0.9051520091654262]], 
        LineBox[CompressedData["
1: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
HN44NGH+6P4hns+CWvP/b5/QJw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Royal Caribbean\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.16867050561952754`, 0.4770961183572635, 
                    0.6034346727769508], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2530057584292913`", ",", "0.7156441775358953`", ",", 
                    "0.9051520091654262`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.2530057584292913, 0.7156441775358953, 0.9051520091654262],
                   Editable -> False, Selectable -> False]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.815796655642434*^9, 3.8157968980182915`*^9, 
  3.815874693812849*^9, 3.8158748159182158`*^9, 3.8160421143640547`*^9, 
  3.816044919021247*^9, 3.816052314619014*^9, 3.816095050318138*^9, 
  3.8161069778695383`*^9, 3.8161071515443544`*^9, 3.8161094206139693`*^9, 
  3.8161095238846664`*^9, 3.8164849354770975`*^9, 3.8165276610401125`*^9, 
  3.816798579902299*^9, 3.816801260491395*^9, 3.8168013142992964`*^9, 
  3.8168879643230686`*^9, 3.8168887563196898`*^9, 3.8168940730536404`*^9, 
  3.816958505268691*^9, 3.816962359765963*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"90b77918-f012-4063-8144-9a6ec67bbe1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", "=", 
  RowBox[{"clStocks", "[", 
   TemplateBox[{"\"Carnival\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], "]"}]}]], "Input",
 CellChangeTimes->{{3.815796680743575*^9, 3.815796694405503*^9}, {
  3.8157967742564125`*^9, 3.815796822455336*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"50e4ac53-e52b-405e-b8fa-9d5a040ecfe2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7178820633800869, 0.8458312866488202, 0.17217606232519223`]], 
        LineBox[CompressedData["
1:eJxVlXlsVFUUxh+bCGIcEUVQ8KEGWpb20QVKaenrRmlp6etCd8rrNl0pkyAC
VfCpQRQEBkENCeAACogGJyxSQMwEBERRx0QtIMsAkhhBHURwSYzid85pcvvP
5Ndz733f+e45546onVvY0FPTtCE9NO3/3zt/zsdjr6fe+fWtX5Rp3vl1JY8D
m5eGTv2fzUZiZ1A72LOGWK+KBvsOEdvul8DBqyrb9VF0Xv9SsHcVsc+TDA50
Euu7+oLDl4lDBQlg/d5ocOBUG9i/Ipr1loND+4jtzilgV4jYOfIt8jH7GxRf
/QLYE2ewni6wtof4zn+w3zhvKHrtvuMpHrmB9FYSO8nLwdbZ8cr3nd4xpHf4
MZzvjyIObQ2DQ2UxrH8I6X0xhvXVkp89Yml9x17ycwxx4NYOsFbCPPwq6XWI
zdh5WdC7M5bPPwAOR8SxviVgvSiO4+vB1uI4zicH7GyP4/OKwP6v46QesuGn
FU/7szaDPR3xfF8LwcEv4/m8nWDtL5W9CybIfYADmydwvAWs357A9bAdbOkT
KX7txjT4t2ki+2mAXSeJta50sHlzIuurAXuGJUi+YF9WgtQT2DiewPW9C2yH
E5R8vUMnST2S3oxJvP99cLh9Evt1E+wfnMjry8Ch1ES5f9Lblij3Q3rfSGQ/
jsDv4KDJzFvovlMmS30ibjSrbK8Vtqm/DjN3HUW96UlJEgdb7iT29wTY8Sax
v/dTfx3k9V1XqF5/SJJ6pf6pS5Z4BvxcmazMj+D+ZKWftcsSX4+4MWAK+5cL
Du+dwv06n/ReJNaXvkd6+6VIvqQ3NoX9PY3vu3an8H1fSoOf51J4/7VU6L3L
5PzWmNBrmKznTAr0Vph83wcRt8+YrH8Z2NsrlfvxG6wPjEvl9YmIh0tTub8u
TIb+F5jdI8F+LY3n3eF4+Dk6jfu3TwL0z0zj/AKIm8+lSb2Mg/53mTvWjYef
Eens/xOIG4XpnG9rJPQ/my5+Pw7923i9pj0J/cFujoC/+RkKO4uYI6vGQP/W
DLn/aOj/IoP9/Bp6XH9281j4+3SmfB96gr5Mmaejof/z7vgI6L+VKff3GPQ/
NpX9/VuHvxunSn7Qr386VfaPhP7futePgv5Hs2S+Ix/zWJbkh7jn1yzxH/p8
Q6ZJ/2F9MH0a9/MerNfaOd45HOu916fx/XiwPvBQtswPrA+b2Vw/WWC9NVvy
J79fzxa/EA89kMP1fwvnu6bkSP3CT7Mph7/nN6D/tRzun1O4D99HOXxf53Bf
xuTpogf77QbhKPjvXT2d62crvhc4MJ3f8/uwP3xluviN/U5trvhB9fBqrsxX
nBf6MJf9XIr8XJdy5X0k/+/J4/NXUz28kif+oX61vXkyX/E940KezAfSf/cM
/n4s1ntjZij+WN/PEL/hj9Mnn/stGfXpj84Xf6h+y/O5XjrAntP54if2+3pa
0s/g4FhL5g/1X6kl+2Og93lL3jP0b+Bfi9/rH9Hf4cgC9qP/RNRDcQHXw5tx
0L+kQPzA+c6OAqnnWPg5qlDiYLOgUO4H+z3PFPJ5gxH3vVMo9QV9wa8KZX7h
fHtGkcwvsHdhkfQH1ge2dDPyD59SWf+jSO4T/vnnF8t7gnjorWLRB3Z9Vizz
BGz+Xiz9hv3axply/2DjxExlvtk3hLdGQe8jJexvBOKBzG7G+dYnJaIP651f
Sjj/QWD/w6Vyf8g/lFaq5OOaUyrzF+t910olf3DwwTKpf7Bmlkn9gY2WMplP
pH+dyuGB5Xyeg37Sk8tZ/w6q58ZyqX+sd9aUK/3sP1Qu/mG/mVghfqEfPfUV
kh/ivlUVUn/YH+yskHwR165USH0h7q2plHmMfAIrKsV/+BPeV6nkr4cqZT/Y
6l+l+Bd6uUruH/m49lQp74V5vkrpb0/fWXJfYN/4WYofhn+W5Iv7ts/OkvqD
Pm/vauX+A1HVMr+pnsuqed7GU791VYtfiPt7zJZ+pnoeM5vX76N6LpmtvMem
M5u/vwz9o0Xa7HcOzYciW+6X+m+xLf5S/223Zb6D9ZE1XC9nwJZVo8wvp6OG
9cwnvW/XyLwjvV/WcL6bkL8nr1b00vu8oFbxP7i5lvNNA2unapX6MW7Xit/k
51N1yvnhTXVKXD9ZJ/dN9XCzTt4X6sdh9fz9ArBrQ73Mc9yvebxeqS9PuF7m
Ib13QxuUeRHMaJD1YPtog8wfmhc/N8j3kV9gsFvqk967VLfSH3qbW+YJ9dtP
buU9Cg1qlO9TPac0yvtN9dzcqOpfK+s7aV4MbFL0GElN8n5Cj+1uknmB99Pr
bZLz6b0+2CT5Yb01qZnXDwE7dc1K3L+yWeYHvdf7m+V+8H3X5Wbpb5oXdou8
d3hPgstb2P+DqC9tX4v0D9i42CL1SfOuXyvXU0/qt2WtfN9rqL53t7KfA9Af
1rlWeQ+pH+9q4/sxEPcbbVxv1dRvH7RxPlGIe860yXuG99DXaw6td28Da2Vz
pP7xPnu/m6O8rwGtndePxPrw6Ha5f6zXZ7ZLv06A3ufaeV7Nw3se+kc4FuyK
mCv5gs3CudLf2O95VuIFYN+2bo43/wOejbls
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Carnival\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47858804225339124`, 0.5638875244325469, 
                    0.11478404155012815`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7178820633800869`", ",", "0.8458312866488202`", ",", 
                    "0.17217606232519223`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.7178820633800869, 0.8458312866488202, 
                   0.17217606232519223`], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8157968051809163`*^9, 3.815796903146772*^9, 
  3.815874699383541*^9, 3.815874818955753*^9, 3.8160421153521805`*^9, 
  3.816044919253409*^9, 3.8160523148348417`*^9, 3.8160950516141806`*^9, 
  3.816106979373563*^9, 3.8161071517578535`*^9, 3.8161094208154593`*^9, 
  3.816109524087968*^9, 3.816484936407243*^9, 3.8165276618183365`*^9, 
  3.816798580207323*^9, 3.8168012607021403`*^9, 3.8168013145257397`*^9, 
  3.8168879650990887`*^9, 3.8168887565180173`*^9, 3.816894073301013*^9, 
  3.8169585074597573`*^9, 3.816962359990569*^9},
 CellLabel->
  "Out[299]=",ExpressionUUID->"dbef971c-e2fd-49ce-bcbd-aca223e05717"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Closing Values\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.815796703707111*^9, 3.815796764623865*^9}, {
  3.815878065359908*^9, 3.815878074357106*^9}, {3.815878154432361*^9, 
  3.8158781559263825`*^9}, {3.815878190110919*^9, 3.8158781905730896`*^9}, {
  3.8160447895455627`*^9, 3.816044804150261*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"688063de-20ea-4d7a-852e-506611233b3d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.09177765608768662, 0.4974449204380902, 0.4072148599971448]], 
         LineBox[CompressedData["
1:eJxVl3mMVFUWxh8gMrYaaxxGBFEfUbDZuh90s3T19qoXuumFfr2vQPW+0DSV
uCNqiSG4IDzF0ZAg85AZYJiEqQg9MDiaijOKC2IRjYiiFqCJEdRSBJdoFL5z
PpLqfyq/nPvu/e53lpue1LGipnukYRjjRxjGxd8Lf+GXZ5wJXPzN3bXQvvDr
y50Jjt40uewi273Cwf154NCTwubuMWDvRWFj6kRw7HP9/twX2C/YlSb7v3IO
7K4X9kq2gqP7hc22a/B94qRwfGUm2Lw6Xc9bC448nq56XgbHh9N1/XtgX1zY
ONop+lMsPX9Y9Gdaev6I8ots7LFU/y+IWx8L2yk/gINjZsn3p6uxPtpKPoK4
86GwnbERHL5stsTHDoneNPJh0dskfOFG2M/3sLB9ogXsjcjg9+DY9AzeR/Q2
ZOh994KtsPI2XwX07uL6U4gnUjP1fpvBZq1wcMPzYOf+TM3/ADi8Q9hc809w
5Ijy7oPY33bmqH+BSvi5co6eb4Fjh+eo/vVg46dkdu+eq/uXg6Nb5zLfYPP8
XOoBO+Y8qadDh3B+fItwsKcH7Htjnt5vleg7q+vPvQ4O3Tif9Yr9vJL56vfP
iFuvaXzNafEvofGMs2B3Qpb2w6vgaFGW6ivDfomhLF3/Ljgyzi/+bPpJ9Ab8
6k9M9A762S9Ybz/j5/mS77HZ6sdYyXd+ttZLWPLdn635Gyl6N2bTD8Tdl7LV
rzPSPzk5sl/19ZLvnhzdLyj5dnOYH8n3gRz9fh04/lmO+tcr/dOZSz3oX++J
3KT5ENuXq/5OEP0nlVP2SX9dladxv/T73jzV9wH2Mz/N4/2kv67IZ72VQm9G
PvNdAj9fyGc+iuHn8XzVu6MQei+3qacAei1b9S4JQG+LzXmEePCYrfl4C3F3
VEDn0zs28j8zwPuDE40Bvd+zOdC/OqD5H58NP40Cfp8BP6cV8PtM6K9n/Jo0
6H+wQP2vuAX6/1Gg9ZUxBX6mFqreE5PhZ00hv78V+lcVsn5uhv7thTr/7jSh
P6bxbaFJ8LeqSPU34rzwvUXUNx36txVxflvQ/3aR+rMsHfp/1HhuSir8vatY
89MGfTGvmPUNNt4qpj84zzpXzP6GvuDNC7genHhugfbfaNzPfP0Sww/nuwW8
z23QP7FE62n+NPj5Knk/1oe+KVE/94je8aU6L1LBscJSxsXvoVKtx1cQd8+U
cn4gHr1uofplgBO2sBd6Cfc1ly1UfQnR+5eF1IN4/E9lzCfivrwy7cc00d9X
pvr64H/oqTL2O9j7L9fvRr6s7HLuNwN+dpczH9jf3aDxUK7o/0859eN+iVNc
fxwc7qhg/cDfyLoK6sP38X9XaD9tQX58Jyo0P2twP/vKSq2vo1IPj1bSz6nw
d29l0nnWJ5VazxsQD/5hEesb93FnL2K94L7OR4s43+FHeHQV+3EW9KZX6Xv9
R6nfZnI16jf0QRXnB9Z7Ix2+t+DYDIf5BhuNDvdHP1sPOXyv58LP3xzexw8/
p1ZrPibNRz3UVWv+tqP/nQeq1X8b+4d3knU+3Faj+foV59nVNexHxEP31XA+
IO79vUb9qgLH3qlhP8yGn4tqVf84nOfeU0v/EI8+X6v9uQn+JA7Vcp7AP/OH
WuYH8ypyZx1Z/P1rHf0A+96s47wA29/XsR+wv/FcPf1B3DpYr/l4DPsHv62n
/1jv3tDA+kc8WnyJ8b3z/wb6gfXhrxu0f3aK3usb6S/uGy9opD8yz5Y3Jp3v
nW5Ufw7OhJ9/bqL/YMNuYj2BrQHyEem/p5tY7+DEtc1k9LeZ28z5hbjT28x+
BoefbOZ8BkdebFY9Jah/29+i/XcT9gt1XWLEvfUt3B8c29+ifq7EfsYp8s+I
u+2tqq9A/H28ledJPQy3ch4gbsZbqRfspLTRX6yPP9JG/xD37WlLyp/9cRvn
k/TjmMWcx2Bv1mLeB2xFFnO+It/BDxfreVGwe9kS3hfro2lL2G+IJ5oYj0i/
HV2i50+UeTFiKetT6nn6Uvaf1HODcslWrLfDS1nfqCdjalDvuxZs1QbVn6+x
Pnh/Mrs7gur3arA5pV3r702w47Rrff4o821lO/0VvX9rZ77A8cOM2/JeVHYw
v6hP7+6OpH6Ibe1gfYGNQx3cT+r5fAfvi/2id3Qy3+Lnls6k/jff6Ezy0znb
yf3F7xu79H0oBvs2dyX5a7/WpXr9iIcSXapnJPz0JnSzv8GxIuUTB2S+/a+b
8wrsftXNeS36x/Ww/kV/oEfn3XjRP9jD/cGRL8m3Sz2M7eX+oj+/N1l/f6/2
x7Do36jxTc1SH9f28f2SeZfTx3qReu7p43uHfLhuH+eR1POBvqR8OFn9Wn/T
pT46+3X/daL/iX72k+jf15/03vhO9ifVlxccYD3Ogb+PDbD/8N4YwwN83+X9
+3RA73dM/L9iGfVjfWItuQr7mS9ciuO9dI4v4zzB+vDlg7r/aKyPWIPJ79+/
BvV9PiXv37FB3hf7eaOWM3/zoLdpOesV7L6/XO/zibzXxhD7HZyYNsT5hPVm
/RD7Owt6HxzS8yrwvsd/HWI/gn2pK/T7Kfh/wK5ZwX7C/wOhVSs4n8DedsZX
++3fAeVxplc=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.2530057584292913, 0.7156441775358953, 0.9051520091654262]], 
         LineBox[CompressedData["
1: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
HN44NGH+6P4hns+CWvP/b5/QJw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.7178820633800869, 0.8458312866488202, 0.17217606232519223`]], 
         LineBox[CompressedData["
1:eJxVlXlsVFUUxh+bCGIcEUVQ8KEGWpb20QVKaenrRmlp6etCd8rrNl0pkyAC
VfCpQRQEBkENCeAACogGJyxSQMwEBERRx0QtIMsAkhhBHURwSYzid85pcvvP
5Ndz733f+e45546onVvY0FPTtCE9NO3/3zt/zsdjr6fe+fWtX5Rp3vl1JY8D
m5eGTv2fzUZiZ1A72LOGWK+KBvsOEdvul8DBqyrb9VF0Xv9SsHcVsc+TDA50
Euu7+oLDl4lDBQlg/d5ocOBUG9i/Ipr1loND+4jtzilgV4jYOfIt8jH7GxRf
/QLYE2ewni6wtof4zn+w3zhvKHrtvuMpHrmB9FYSO8nLwdbZ8cr3nd4xpHf4
MZzvjyIObQ2DQ2UxrH8I6X0xhvXVkp89Yml9x17ycwxx4NYOsFbCPPwq6XWI
zdh5WdC7M5bPPwAOR8SxviVgvSiO4+vB1uI4zicH7GyP4/OKwP6v46QesuGn
FU/7szaDPR3xfF8LwcEv4/m8nWDtL5W9CybIfYADmydwvAWs357A9bAdbOkT
KX7txjT4t2ki+2mAXSeJta50sHlzIuurAXuGJUi+YF9WgtQT2DiewPW9C2yH
E5R8vUMnST2S3oxJvP99cLh9Evt1E+wfnMjry8Ch1ES5f9Lblij3Q3rfSGQ/
jsDv4KDJzFvovlMmS30ibjSrbK8Vtqm/DjN3HUW96UlJEgdb7iT29wTY8Sax
v/dTfx3k9V1XqF5/SJJ6pf6pS5Z4BvxcmazMj+D+ZKWftcsSX4+4MWAK+5cL
Du+dwv06n/ReJNaXvkd6+6VIvqQ3NoX9PY3vu3an8H1fSoOf51J4/7VU6L3L
5PzWmNBrmKznTAr0Vph83wcRt8+YrH8Z2NsrlfvxG6wPjEvl9YmIh0tTub8u
TIb+F5jdI8F+LY3n3eF4+Dk6jfu3TwL0z0zj/AKIm8+lSb2Mg/53mTvWjYef
Eens/xOIG4XpnG9rJPQ/my5+Pw7923i9pj0J/cFujoC/+RkKO4uYI6vGQP/W
DLn/aOj/IoP9/Bp6XH9281j4+3SmfB96gr5Mmaejof/z7vgI6L+VKff3GPQ/
NpX9/VuHvxunSn7Qr386VfaPhP7futePgv5Hs2S+Ix/zWJbkh7jn1yzxH/p8
Q6ZJ/2F9MH0a9/MerNfaOd45HOu916fx/XiwPvBQtswPrA+b2Vw/WWC9NVvy
J79fzxa/EA89kMP1fwvnu6bkSP3CT7Mph7/nN6D/tRzun1O4D99HOXxf53Bf
xuTpogf77QbhKPjvXT2d62crvhc4MJ3f8/uwP3xluviN/U5trvhB9fBqrsxX
nBf6MJf9XIr8XJdy5X0k/+/J4/NXUz28kif+oX61vXkyX/E940KezAfSf/cM
/n4s1ntjZij+WN/PEL/hj9Mnn/stGfXpj84Xf6h+y/O5XjrAntP54if2+3pa
0s/g4FhL5g/1X6kl+2Og93lL3jP0b+Bfi9/rH9Hf4cgC9qP/RNRDcQHXw5tx
0L+kQPzA+c6OAqnnWPg5qlDiYLOgUO4H+z3PFPJ5gxH3vVMo9QV9wa8KZX7h
fHtGkcwvsHdhkfQH1ge2dDPyD59SWf+jSO4T/vnnF8t7gnjorWLRB3Z9Vizz
BGz+Xiz9hv3axply/2DjxExlvtk3hLdGQe8jJexvBOKBzG7G+dYnJaIP651f
Sjj/QWD/w6Vyf8g/lFaq5OOaUyrzF+t910olf3DwwTKpf7Bmlkn9gY2WMplP
pH+dyuGB5Xyeg37Sk8tZ/w6q58ZyqX+sd9aUK/3sP1Qu/mG/mVghfqEfPfUV
kh/ivlUVUn/YH+yskHwR165USH0h7q2plHmMfAIrKsV/+BPeV6nkr4cqZT/Y
6l+l+Bd6uUruH/m49lQp74V5vkrpb0/fWXJfYN/4WYofhn+W5Iv7ts/OkvqD
Pm/vauX+A1HVMr+pnsuqed7GU791VYtfiPt7zJZ+pnoeM5vX76N6LpmtvMem
M5u/vwz9o0Xa7HcOzYciW+6X+m+xLf5S/223Zb6D9ZE1XC9nwJZVo8wvp6OG
9cwnvW/XyLwjvV/WcL6bkL8nr1b00vu8oFbxP7i5lvNNA2unapX6MW7Xit/k
51N1yvnhTXVKXD9ZJ/dN9XCzTt4X6sdh9fz9ArBrQ73Mc9yvebxeqS9PuF7m
Ib13QxuUeRHMaJD1YPtog8wfmhc/N8j3kV9gsFvqk967VLfSH3qbW+YJ9dtP
buU9Cg1qlO9TPac0yvtN9dzcqOpfK+s7aV4MbFL0GElN8n5Cj+1uknmB99Pr
bZLz6b0+2CT5Yb01qZnXDwE7dc1K3L+yWeYHvdf7m+V+8H3X5Wbpb5oXdou8
d3hPgstb2P+DqC9tX4v0D9i42CL1SfOuXyvXU0/qt2WtfN9rqL53t7KfA9Af
1rlWeQ+pH+9q4/sxEPcbbVxv1dRvH7RxPlGIe860yXuG99DXaw6td28Da2Vz
pP7xPnu/m6O8rwGtndePxPrw6Ha5f6zXZ7ZLv06A3ufaeV7Nw3se+kc4FuyK
mCv5gs3CudLf2O95VuIFYN+2bo43/wOejbls
          "]]}}}, {{}, {}}}}, {
    PlotLabel -> FormBox["\"Closing Values\"", TraditionalForm], 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.7815552*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06118510405845775, 0.33162994695872683`, 
                    0.2714765733314299], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09177765608768662`", ",", "0.4974449204380902`", ",", 
                    "0.4072148599971448`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09177765608768662, 0.4974449204380902, 
                    0.4072148599971448], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Royal Caribbean\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.16867050561952754`, 0.4770961183572635, 
                    0.6034346727769508], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2530057584292913`", ",", "0.7156441775358953`", ",", 
                    "0.9051520091654262`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Carnival\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47858804225339124`, 0.5638875244325469, 
                    0.11478404155012815`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7178820633800869`", ",", "0.8458312866488202`", ",", 
                    "0.17217606232519223`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7178820633800869, 0.8458312866488202, 
                    0.17217606232519223`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8157967152636175`*^9, 3.8157967558601685`*^9, 3.815796906990528*^9, 
   3.815874826171294*^9, {3.8158780680080624`*^9, 3.815878076528792*^9}, 
   3.8158781586210413`*^9, 3.815878192768257*^9, 3.8160421154907913`*^9, 
   3.816044805951043*^9, 3.8160449194284096`*^9, 3.8160523149947753`*^9, 
   3.816095051767309*^9, 3.8161069795868425`*^9, 3.8161071519196987`*^9, 
   3.816109420965706*^9, 3.8161095242416935`*^9, 3.816484936566248*^9, 
   3.8165276620008636`*^9, 3.8167985804115524`*^9, 3.816801260851441*^9, 
   3.8168013146779804`*^9, 3.816887965297676*^9, 3.8168887566672907`*^9, 
   3.8168940735023155`*^9, 3.816958507761342*^9, 3.816962360162902*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"f1460ff5-db17-4304-9dbd-4f4c39f47df9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "DONE", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Graph", " ", "looks", " ", "okay"}], ",", " ", 
    RowBox[{
    "but", " ", "I", " ", "want", " ", "there", " ", "to", " ", "be", " ", 
     "a", " ", "legend", " ", "for", " ", "each", " ", "stock"}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8157972719057055`*^9, 3.815797333544368*^9}, {
  3.815875644995615*^9, 3.8158756499307275`*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"13232d0a-cfd9-4c22-bbaf-3a4d88375d5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "DONE", "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "Figure", " ", "out", " ", "way", " ", "to", " ", "find", " ", "closing", 
    " ", "values", " ", "at", " ", "specific", " ", "dates", " ", "to", " ", 
    "find", " ", "percentage", " ", "loss", " ", "and", " ", "compare"}], 
   "*)"}], 
  RowBox[{"(*", 
   RowBox[{"Something", " ", "new", " ", "I", " ", "learned", " ", "was", " ", 
    RowBox[{"TimeSeries", ".", " ", "TimeSeries"}], " ", "made", " ", "it", 
    " ", "nice", " ", "to", " ", "find", " ", "stock", " ", "values", " ", 
    "at", " ", "any", " ", "given", " ", "date"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8157973861881547`*^9, 3.81579742969322*^9}, {
   3.8158757643819923`*^9, 3.8158758236635084`*^9}, {3.8158758536824055`*^9, 
   3.815875931862629*^9}, {3.8158759702676945`*^9, 3.815875990223963*^9}, {
   3.8158760955187707`*^9, 3.815876103900167*^9}, {3.815876136623673*^9, 
   3.8158761888073483`*^9}, {3.8158762608685064`*^9, 3.8158762756441*^9}, {
   3.815876638177918*^9, 3.8158766831606297`*^9}, 3.81587731681388*^9, {
   3.815877510126117*^9, 3.8158775132807484`*^9}, 3.8158776343266406`*^9, 
   3.8158776803728933`*^9, {3.815878619835141*^9, 3.8158786514659348`*^9}, 
   3.815878765117614*^9, {3.816104607893679*^9, 3.8161046109710903`*^9}, {
   3.8164849448746004`*^9, 3.816484946846222*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"5584c2a5-9260-4457-8688-6d961fc0e66d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "tried", " ", "making", " ", "a", " ", "function", " ", "that", 
     " ", "could", " ", "automate", " ", "this", " ", "process", " ", "of", 
     " ", "finding", " ", "stock", " ", "values", " ", "of", " ", "two", " ", 
     "given", " ", "dates", " ", "for", " ", "3", " ", "of", " ", "the", " ", 
     "Cruise", " ", 
     RowBox[{"Lines", ".", " ", "Might"}], " ", "need", " ", "to", " ", 
     "look", " ", "into", " ", "it", " ", "again"}], ",", " ", 
    RowBox[{"for", " ", "now", " ", "this", " ", "will", " ", 
     RowBox[{"do", "."}]}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.815876307844085*^9, 3.8158764308150234`*^9}, {
   3.815876482258504*^9, 3.8158764947146015`*^9}, {3.8158765938881035`*^9, 
   3.8158766048897266`*^9}, {3.8158767686653256`*^9, 3.815876797915906*^9}, {
   3.8158769191154056`*^9, 3.815877115969365*^9}, {3.8158771590782385`*^9, 
   3.8158772869286737`*^9}, {3.815877442590329*^9, 3.815877460011641*^9}, {
   3.815877658649763*^9, 3.8158776694349008`*^9}, {3.815877703120278*^9, 
   3.8158777206399355`*^9}, {3.8158785570637627`*^9, 
   3.8158785609422207`*^9}, {3.815878694124399*^9, 3.815878925912813*^9}, {
   3.8160421350910373`*^9, 3.8160421481339254`*^9}, 3.816042306239506*^9, 
   3.8160424508526244`*^9, 3.816043037951297*^9, 3.8161046235980873`*^9},
 CellLabel->
  "In[303]:=",ExpressionUUID->"fc24549f-9559-4e47-a564-912d0c1be197"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "clPrice", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "ts", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clPrice", "[", "x_", "]"}], ":=", 
  RowBox[{"ts", ":=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"x", ",", 
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "November 1, 2019", 
       Typeset`boxes$$ = RowBox[{"DateObject", "[", 
         RowBox[{"{", 
           RowBox[{"2019", ",", " ", "11", ",", " ", "1"}], "}"}], "]"}], 
       Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
       Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.4760301`7.129179408087492, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{280., {10., 20.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"clPrice", "[", 
  TemplateBox[{"\"Royal Caribbean\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
    "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", "\"financial entity\""},
   "Entity"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"precov", "=", 
  RowBox[{
  "ts", "[", "\"\<January 1, 2020\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"postcov", "=", 
  RowBox[{"ts", "[", "\"\<April 1, 2020\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"percent1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"precov", "-", "postcov"}], ")"}], "/", "precov"}]}]}], "Input",
 CellChangeTimes->{
  3.816042466425829*^9, {3.8160430678922744`*^9, 3.816043068021139*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"558a2770-1304-490b-ae76-83570b1506bc"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"134.08\"", ShowStringCharacters -> False], 
      134.07999420166016`, AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 134.07999420166016`, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.8160423235994883`*^9, 3.816042469339422*^9, 
  3.8160430826705465`*^9, 3.8160449195729675`*^9, 3.8160523151363297`*^9, 
  3.8160950519035907`*^9, 3.816106979780879*^9, 3.8161071520812073`*^9, 
  3.8161094211196775`*^9, 3.816109524402133*^9, 3.8164849367547555`*^9, 
  3.8165276621427193`*^9, 3.816798580593785*^9, 3.816801260972433*^9, 
  3.8168013148323507`*^9, 3.8168879656008434`*^9, 3.816888756844164*^9, 
  3.816894073726087*^9, 3.816958508010436*^9, 3.8169623603051906`*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"ccbb1dd7-f853-49e4-81b9-bcd1f6502a10"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"25.77\"", ShowStringCharacters -> False], 
      25.770000457763672`, AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 25.770000457763672`, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.8160423235994883`*^9, 3.816042469339422*^9, 
  3.8160430826705465`*^9, 3.8160449195729675`*^9, 3.8160523151363297`*^9, 
  3.8160950519035907`*^9, 3.816106979780879*^9, 3.8161071520812073`*^9, 
  3.8161094211196775`*^9, 3.816109524402133*^9, 3.8164849367547555`*^9, 
  3.8165276621427193`*^9, 3.816798580593785*^9, 3.816801260972433*^9, 
  3.8168013148323507`*^9, 3.8168879656008434`*^9, 3.816888756844164*^9, 
  3.816894073726087*^9, 3.816958508010436*^9, 3.8169623603126297`*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"5146e284-e76f-412a-9e79-927136539ece"],

Cell[BoxData["0.8078013009233515`"], "Output",
 CellChangeTimes->{3.8160423235994883`*^9, 3.816042469339422*^9, 
  3.8160430826705465`*^9, 3.8160449195729675`*^9, 3.8160523151363297`*^9, 
  3.8160950519035907`*^9, 3.816106979780879*^9, 3.8161071520812073`*^9, 
  3.8161094211196775`*^9, 3.816109524402133*^9, 3.8164849367547555`*^9, 
  3.8165276621427193`*^9, 3.816798580593785*^9, 3.816801260972433*^9, 
  3.8168013148323507`*^9, 3.8168879656008434`*^9, 3.816888756844164*^9, 
  3.816894073726087*^9, 3.816958508010436*^9, 3.816962360317853*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"75d4e9dc-42f3-4e96-8f4b-4dfafe34cd44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "clPrice", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "ts", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clPrice", "[", "x_", "]"}], ":=", 
  RowBox[{"ts", ":=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"x", ",", 
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "November 1, 2019", 
       Typeset`boxes$$ = RowBox[{"DateObject", "[", 
         RowBox[{"{", 
           RowBox[{"2019", ",", " ", "11", ",", " ", "1"}], "}"}], "]"}], 
       Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
       Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.4760301`7.129179408087492, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{280., {10., 20.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"clPrice", "[", 
  TemplateBox[{"\"Carnival\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
    "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", "\"financial entity\""},
   "Entity"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"precov", "=", 
  RowBox[{
  "ts", "[", "\"\<January 1, 2020\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"postcov", "=", 
  RowBox[{"ts", "[", "\"\<April 1, 2020\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"percent2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"precov", "-", "postcov"}], ")"}], "/", "precov"}]}]}], "Input",
 CellChangeTimes->{
  3.816042353976506*^9, 3.8160425084920225`*^9, {3.8160430614190383`*^9, 
   3.816043061574725*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"11a5a5fc-8a3e-42a7-bee7-c2bd3b4f4e8c"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"51.07\"", ShowStringCharacters -> False], 51.07000160217285,
       AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 51.07000160217285, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.816042356868246*^9, 3.8160425136912293`*^9, 
  3.8160430859491777`*^9, 3.816044919632413*^9, 3.816052315166278*^9, 
  3.816095051975525*^9, 3.8161069799046383`*^9, 3.816107152143207*^9, 
  3.816109421172776*^9, 3.816109524499838*^9, 3.8164849368024254`*^9, 
  3.816527662204224*^9, 3.816798580735689*^9, 3.8168012610576367`*^9, 
  3.8168013149382453`*^9, 3.8168879657206616`*^9, 3.816888756897564*^9, 
  3.8168940737958574`*^9, 3.8169585081167693`*^9, 3.8169623603848515`*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"af0c5a88-c623-469a-8e5e-258f2e42660f"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"8.80\"", ShowStringCharacters -> False], 8.800000190734863, 
      AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 8.800000190734863, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.816042356868246*^9, 3.8160425136912293`*^9, 
  3.8160430859491777`*^9, 3.816044919632413*^9, 3.816052315166278*^9, 
  3.816095051975525*^9, 3.8161069799046383`*^9, 3.816107152143207*^9, 
  3.816109421172776*^9, 3.816109524499838*^9, 3.8164849368024254`*^9, 
  3.816527662204224*^9, 3.816798580735689*^9, 3.8168012610576367`*^9, 
  3.8168013149382453`*^9, 3.8168879657206616`*^9, 3.816888756897564*^9, 
  3.8168940737958574`*^9, 3.8169585081167693`*^9, 3.816962360400255*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"303baa8c-0cb5-4c76-aab7-b963b0a6549c"],

Cell[BoxData["0.8276874894329267`"], "Output",
 CellChangeTimes->{3.816042356868246*^9, 3.8160425136912293`*^9, 
  3.8160430859491777`*^9, 3.816044919632413*^9, 3.816052315166278*^9, 
  3.816095051975525*^9, 3.8161069799046383`*^9, 3.816107152143207*^9, 
  3.816109421172776*^9, 3.816109524499838*^9, 3.8164849368024254`*^9, 
  3.816527662204224*^9, 3.816798580735689*^9, 3.8168012610576367`*^9, 
  3.8168013149382453`*^9, 3.8168879657206616`*^9, 3.816888756897564*^9, 
  3.8168940737958574`*^9, 3.8169585081167693`*^9, 3.816962360403205*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"036f988a-7ce2-4804-92b8-280531e3f4dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "clPrice", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "ts", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clPrice", "[", "x_", "]"}], ":=", 
  RowBox[{"ts", ":=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"x", ",", 
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "November 1, 2019", 
       Typeset`boxes$$ = RowBox[{"DateObject", "[", 
         RowBox[{"{", 
           RowBox[{"2019", ",", " ", "11", ",", " ", "1"}], "}"}], "]"}], 
       Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
       Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.4760301`7.129179408087492, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{280., {10., 20.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"clPrice", "[", 
  TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
    "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
    "\"financial entity\""},
   "Entity"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"precov", "=", 
  RowBox[{
  "ts", "[", "\"\<January 1, 2020\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"postcov", "=", 
  RowBox[{"ts", "[", "\"\<April 1, 2020\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"percent3", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"precov", "-", "postcov"}], ")"}], "/", "precov"}]}]}], "Input",
 CellChangeTimes->{{3.8160430579013643`*^9, 3.8160430580134735`*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"5cc1f81c-115d-4971-8866-4007462f4cd8"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"58.62\"", ShowStringCharacters -> False], 58.6200008392334, 
      AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 58.6200008392334, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.816043090150767*^9, 3.8160449196898904`*^9, 
  3.816052315231075*^9, 3.8160950520206547`*^9, 3.8161069799680634`*^9, 
  3.8161071522362995`*^9, 3.8161094212253523`*^9, 3.8161095245548983`*^9, 
  3.8164849369015203`*^9, 3.816527662245391*^9, 3.8167985807985473`*^9, 
  3.816801261128994*^9, 3.8168013150007396`*^9, 3.8168879658120213`*^9, 
  3.8168887569491806`*^9, 3.816894073860344*^9, 3.8169585082076263`*^9, 
  3.8169623604488764`*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"2d682ed9-69b2-4449-ad81-ff8a396b6f37"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"9.55\"", ShowStringCharacters -> False], 9.550000190734863, 
      AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 9.550000190734863, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.816043090150767*^9, 3.8160449196898904`*^9, 
  3.816052315231075*^9, 3.8160950520206547`*^9, 3.8161069799680634`*^9, 
  3.8161071522362995`*^9, 3.8161094212253523`*^9, 3.8161095245548983`*^9, 
  3.8164849369015203`*^9, 3.816527662245391*^9, 3.8167985807985473`*^9, 
  3.816801261128994*^9, 3.8168013150007396`*^9, 3.8168879658120213`*^9, 
  3.8168887569491806`*^9, 3.816894073860344*^9, 3.8169585082076263`*^9, 
  3.8169623604538097`*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"376d8124-3d07-434b-9c13-e3c4fc7008ff"],

Cell[BoxData["0.8370863177411761`"], "Output",
 CellChangeTimes->{3.816043090150767*^9, 3.8160449196898904`*^9, 
  3.816052315231075*^9, 3.8160950520206547`*^9, 3.8161069799680634`*^9, 
  3.8161071522362995`*^9, 3.8161094212253523`*^9, 3.8161095245548983`*^9, 
  3.8164849369015203`*^9, 3.816527662245391*^9, 3.8167985807985473`*^9, 
  3.816801261128994*^9, 3.8168013150007396`*^9, 3.8168879658120213`*^9, 
  3.8168887569491806`*^9, 3.816894073860344*^9, 3.8169585082076263`*^9, 
  3.8169623604567876`*^9},
 CellLabel->
  "Out[324]=",ExpressionUUID->"c0139c9b-5b1a-44ad-b899-59b016269323"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
      "/", "ref"}], "/", 
     RowBox[{"ChartLabels", ".", "html"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"percent1", ",", "percent2", ",", "percent3"}], "}"}], ",", 
    RowBox[{"BarSpacing", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0.79", ",", "0.85"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ChartStyle", "->", 
     RowBox[{"{", "\"\<Pastel\>\"", "}"}]}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"percent1", ",", "percent2", ",", "percent3"}], "}"}], ",", 
        "Top"}], "]"}], "}"}]}], ",", 
    RowBox[{"ChartLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Royal Caribbean\>\"", ",", "\"\<Carnival\>\"", ",", 
       "\"\<Norwegian Cruise Line Holdings\>\""}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Percent Loss of Stock Value, Jan 1 ,2020 - Apr 1, 2020\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.816042519993272*^9, 3.816042539891965*^9}, {
   3.81604312174008*^9, 3.816043200838129*^9}, {3.8160432309399023`*^9, 
   3.816043243860112*^9}, 3.816043391457857*^9, {3.8160434340742874`*^9, 
   3.8160434968808336`*^9}, {3.816043569740834*^9, 3.816043637531369*^9}, {
   3.8160437782723227`*^9, 3.8160438587036085`*^9}, {3.816043976847371*^9, 
   3.8160441032353272`*^9}, {3.8160441520839744`*^9, 3.81604415714124*^9}, {
   3.816044226478939*^9, 3.816044226585884*^9}, {3.816044645390629*^9, 
   3.8160447581878843`*^9}, 3.816044954330496*^9, {3.8160950743513484`*^9, 
   3.8160950938332644`*^9}, {3.816104645817112*^9, 3.816104647917288*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"35c72554-54f3-41c3-8a9f-21566ca7306e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{-0.053333333333333455`, 0.79}, {4.000000000000001, 
       0.79}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6789999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.761959, 0.470832, 0.940597]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.6666666666666666, 0.}, {1.3333333333333335`, 
                0.8078013009233515}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8078013009233515]& , 
            TagBoxNote -> "0.8078013009233515"], 
           StyleBox["0.8078013009233515`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8078013009233515, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.9584254999999999, 0.877884, 0.5906629999999999]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.6666666666666667`, 0.}, {2.3333333333333335`, 
                0.8276874894329267}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8276874894329267]& , 
            TagBoxNote -> "0.8276874894329267"], 
           StyleBox["0.8276874894329267`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8276874894329267, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6789999999999999]]], 
          RGBColor[0.431296, 0.709773, 0.927077]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.666666666666667, 0.}, {3.333333333333334, 
                0.8370863177411761}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8370863177411761]& , 
            TagBoxNote -> "0.8370863177411761"], 
           StyleBox["0.8370863177411761`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8370863177411761, {}], "Tooltip"]& ]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["0.8078013009233515`", {}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, -6}, {1., 0.8078013009233515}], 
       ImageScaled[{0.5, 1}]], 
      InsetBox[
       FormBox[
        StyleBox["0.8276874894329267`", {}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, -6}, {2., 0.8276874894329267}], 
       ImageScaled[{0.5, 1}]], 
      InsetBox[
       FormBox[
        StyleBox["0.8370863177411761`", {}, StripOnInput -> False], 
        TraditionalForm], 
       Offset[{0, -6}, {3.0000000000000004`, 0.8370863177411761}], 
       ImageScaled[{0.5, 1}]]}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          
          LineBox[{{-0.053333333333333455`, 0.79}, {4.067733333333334, 
           0.79}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.6666666666666666, 0.79}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.6666666666666666, 
              0.79}]}], 
           LineBox[{{3.333333333333334, 0.79}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {3.333333333333334, 
              0.79}]}], {{}, {}, {}, {}, {}}}, 
          StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, {
         "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-0.053333333333333455`, 0.79}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Percent Loss of Stock Value, Jan 1 ,2020 - Apr 1, 2020\"", 
       TraditionalForm], PlotRange -> {{All, All}, {0.79, 0.85}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Royal Caribbean\"", "\"Carnival\"", 
       "\"Norwegian Cruise Line Holdings\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5079726666666667, 0.313888, 0.6270646666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6389503333333333, 0.585256, 0.3937753333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9584254999999999`", ",", "0.877884`", ",", 
                    "0.5906629999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2875306666666667, 0.473182, 0.6180513333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.816042541039771*^9, 3.816043246498022*^9, {3.8160434574738235`*^9, 
   3.816043499333639*^9}, {3.816043607981635*^9, 3.816043640164521*^9}, 
   3.8160437937728243`*^9, {3.816043843779792*^9, 3.8160438605688286`*^9}, {
   3.81604406207898*^9, 3.8160441061973934`*^9}, 3.8160441600819216`*^9, 
   3.816044229928879*^9, 3.8160446572958803`*^9, 3.8160447202508993`*^9, {
   3.8160447527906513`*^9, 3.8160447606488867`*^9}, 3.8160449198118057`*^9, 
   3.816044956485577*^9, 3.816052315373111*^9, {3.816095052443631*^9, 
   3.8160950965357857`*^9}, 3.816106980154393*^9, 3.8161071523553357`*^9, 
   3.8161094213654814`*^9, 3.816109524692939*^9, 3.816484937335559*^9, 
   3.8165276623435993`*^9, 3.8167985809370003`*^9, 3.81680126122925*^9, 
   3.8168013151148233`*^9, 3.816887966245387*^9, 3.816888757055319*^9, 
   3.81689407399364*^9, 3.8169585086019545`*^9, 3.8169623605495696`*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"04ec1c71-a727-47e1-8b94-5691227d5bec"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8168006538749886`*^9, {3.8168007416626024`*^9, 3.816800742807218*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"510cc2de-5ff4-44f7-85d8-e89ea92ecce7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "task", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Find", " ", "NonLinearModelFit", " ", "of", " ", "stocks", " ", 
     "starting", " ", "from", " ", "April", " ", "1"}], ",", " ", "2020"}], 
   "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "would", " ", "give", " ", "a", " ", "hypothetical", " ", 
    "estimate", " ", "on", " ", "when", " ", "stock", " ", "values", " ", 
    "would", " ", "return", " ", "to", " ", "precov", " ", "values"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "think", " ", "this", " ", "is", " ", "going", " ", "to", " ", 
     "be", " ", "difficult", " ", "due", " ", "to", " ", 
     RowBox[{"TimeSeries", ".", " ", 
      RowBox[{"I", "'"}]}], "m", " ", "not", " ", "sure", " ", "I", " ", 
     "can", " ", "extend", " ", "the", " ", "x"}], "-", 
    RowBox[{
    "axis", " ", "timeline", " ", "in", " ", "order", " ", "to", " ", 
     "predict", " ", "future", " ", "values"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.815797434503411*^9, 3.8157974718175726`*^9}, {
  3.815797543468989*^9, 3.81579757282309*^9}, {3.815878298851112*^9, 
  3.8158783522875676`*^9}, {3.8160420071160517`*^9, 3.816042019495178*^9}, {
  3.816045300654477*^9, 3.816045341489438*^9}, {3.8160453730852385`*^9, 
  3.8160455403769865`*^9}, {3.81609566955456*^9, 3.816095685199261*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"3451ac5c-99c3-4dc8-80e8-04a3742fbca3"],

Cell[CellGroupData[{

Cell[BoxData["p2"], "Input",
 CellChangeTimes->{{3.8160449984954395`*^9, 3.816044998627073*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"e1e8b6dd-d072-4e29-b522-e0839089474e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2530057584292913, 0.7156441775358953, 0.9051520091654262]], 
        LineBox[CompressedData["
1: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
HN44NGH+6P4hns+CWvP/b5/QJw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Royal Caribbean\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.16867050561952754`, 0.4770961183572635, 
                    0.6034346727769508], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2530057584292913`", ",", "0.7156441775358953`", ",", 
                    "0.9051520091654262`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2530057584292913, 0.7156441775358953, 
                    0.9051520091654262]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.2530057584292913, 0.7156441775358953, 0.9051520091654262],
                   Editable -> False, Selectable -> False]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8160449998513536`*^9, 3.816052315466359*^9, 
  3.816095052518552*^9, 3.8161069802596903`*^9, 3.8161071524494877`*^9, 
  3.816109421448247*^9, 3.8161095248422575`*^9, 3.8164849374593315`*^9, 
  3.816527662418991*^9, 3.816798581032857*^9, 3.816801261310959*^9, 
  3.816801315207079*^9, 3.8168879664227805`*^9, 3.8168887571515675`*^9, 
  3.81689407409917*^9, 3.816958508751629*^9, 3.8169623606333213`*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"2eca0e7d-f60f-4e8b-896b-983c55b17a87"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Here", ",", " ", 
   RowBox[{
   "I", " ", "just", " ", "wanted", " ", "to", " ", "cut", " ", "the", " ", 
    "graph", " ", "so", " ", "I", " ", "could", " ", "work", " ", "on", " ", 
    "the", " ", "linear", " ", "fit", " ", "model", " ", "more", " ", 
    "easily"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8160957169479585`*^9, 3.8160957530287266`*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"55a7c0ed-3a4e-4b0b-8a9b-6f999d84f914"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aprStocks", "[", "x_", "]"}], ":=", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{
    RowBox[{"FinancialData", "[", 
     RowBox[{"x", ",", 
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = "April 1,2020", Typeset`boxes$$ = 
        RowBox[{"DateObject", "[", 
          RowBox[{"{", 
            RowBox[{"2020", ",", " ", "4", ",", " ", "1"}], "}"}], "]"}], 
        Typeset`allassumptions$$ = {{
         "type" -> "MultiClash", "word" -> "", "template" -> 
          "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
          "Values" -> {{
            "name" -> "DateObject", "word" -> "the input", "desc" -> "a date",
              "input" -> "*MC.%7E-_*DateObject-"}, {
            "name" -> "GivenName", "word" -> "April", "desc" -> 
             "a given name", "input" -> "*MC.%7E-_*GivenName-"}}}}, 
        Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
        Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.7763901`7.341624982418914, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{301., {10., 20.}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "140"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"RandomColor", "[", "1", "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"{", "x", "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816045228995568*^9, 3.8160452307098217`*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"52d97e01-8258-41d3-b07a-051a8c6ef246"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rc", "=", 
  RowBox[{"aprStocks", "[", 
   TemplateBox[{"\"Royal Caribbean\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\""},
    "EntityTraditionalFramed"], "]"}]}]], "Input",
 CellChangeTimes->{{3.816045259576622*^9, 3.816045277157117*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"4dca9ca3-5073-4ca2-90ad-ad41fea446c7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3311590378974534, 0.5460656263587564, 0.6807156843614282]], 
        LineBox[CompressedData["
1:eJxVlVtsk2Ucxj/OiMY0METkYLkAmZhRRaOo028cZOzQfe3Wrdu68a3d2m7d
ul5INCj6aUJAQVcOBkkGVlDmhRkVnA7looocFKL1Qjl5+IB4AwhFQb3AA33+
z2vSJUvzy/89PP/nfd73mxXs9XaM1DRt783//G/+79jSS2U3fzIzDy3Ub/66
rgtbF799JM/m3U+BtRMhcG47ubi/NM/Oo8Jm+LCeZ+M3YefgkUV5tqYv4/jp
S/KsHxJ2BvZgfOIKec1FjE9NLQenEqvB2cXkZSPK8qzFy6nvA9STl4TN4X9Q
z9yxHKxPeBic05cXzHfGhO1dCcw33lDjT6BuT6qg3gOL8+x4ooL6jon+KHlw
XDn0bxI2+4LLoP/A/4zxrscqVb9gs0M4tW2b6O8TtopuB2f2V9LvUdg/d571
z6+DrWCVnNf18eD0hirqm4f59kdVnL8Y/TjOCusLNoP1W6u5/37x9xXFp5bC
3w+rOX4S2PUT64kW0T/eLfsffx/15ANunsdGsHHGrc4f/lhjapiv2ZXQO79G
7bccehtr6M8VcOJkjcofxqdGGtKPplVB732G8qsaehuEbc9J1F0vcXxxwAM/
/zWUHi/8LPbI/NJVqDvrPOp8a6D/BQ/zUob9rfc8zMdWN/y8x8v5XWDd46U+
HfMTz3nV+UFf6l2v8guc/cbLfOzE+qa7lv1cRv/JZxWXoJ7ZWct8z4SfueOs
l1aAnX8K26seRP7SK+t4H+eIv28VsuOrOqUfrF+rY7+fYT1tu4/6RqLuOuJT
/mF986pP5U/0Tqvn+fWhnllaz/nnUDe+qFfvi+Thcr3KFzh9Z4PqF/7Yixp4
nn9VQG9Pg8oXOHWxgfMXgLOT/ewvDNZ0v8q36O9SvBBsbvEX9J+b2Mj5u8XP
0saCuhFp5PlaYGtjY4Gf6U+F9bNNmK8/2qTeJ/iRaG/ie5NEPfV6E/NxEJwd
bmI+NmA97bzi29BPsq2Z/g8g35n1zXwPfPArN9RMv95E3Wk3qzyibkwIKEZe
7XUBdR8lz/sCyk/J848B3of14MS4FqUXnLq/kF3pFo6fZsDf0y3M42hwcnQr
6zHcj0xJq/Ib9Zyf9cG1uI/WiVb29xA4PWIF/XOC7XkrOH4K2FG/QvkH1i3F
N8Bascn5NthVa/I+y37mapN5XgdODpjKX3kf5rSp7wHYMBRfgn5rVRvXi4je
d1jXXKL36zbqCWB8ojqo8iJ+PhPk/ZkPf7JvB3nfd6CuHQ9yvxs4T9cfQeqb
jfUyT4fIa8TPHSHmfSrY+WWI65WAjd9DPO+Q6J/RTn8MsKO/nfqF9cPtKg+i
P9euvqfoL3VXB++7F5xd0kE9h8Tfgx3M20rx91fWi9zoLzMlzLxckzyXkXel
wc7usLqP4PSFMP07Le9FUYTr/yJ5fjLC++CXPHdG1H2U93lzRL2n6EebGGU/
s8Tfx6Nqf9wnMxxV75vcx2SUei6AM59EVV4x3ljYST9eBluhTubrKDj9Wie/
p6vB9sednD9Z9J9T48vl+2F20f8z+H5lX+2i/jhYG+piv8OS759ZD48V/2+J
MZ8D4NzaGM/Xxnzn3hj3/w5s/BDjeuvA1thu5q8fnHZ1q/cDrO/ppr9XwYlT
3ZwfrYP+UT0cPwas+XuovxWc/L6H78m+WvipxenfJnDu3jj9mIvxTl9c5dsH
vS9y/PAg6vbfcb4PEbBjbi/3HwLr3l7Wt4ITz/cWrJ/a3cvzmVGr/wdltxHk

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.794688*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Royal Caribbean\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3311590378974534, 0.5460656263587564, 
                    0.6807156843614282]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3311590378974534, 0.5460656263587564, 
                    0.6807156843614282]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3311590378974534, 0.5460656263587564, 
                    0.6807156843614282], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2207726919316356, 0.3640437509058376, 
                    0.4538104562409521], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3311590378974534`", ",", "0.5460656263587564`", ",", 
                    "0.6807156843614282`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3311590378974534, 0.5460656263587564, 
                    0.6807156843614282]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.3311590378974534, 0.5460656263587564, 0.6807156843614282],
                   Editable -> False, Selectable -> False]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.816045280409973*^9, 3.816052315660717*^9, 
  3.816095053396372*^9, 3.816106981149522*^9, 3.816107152673654*^9, 
  3.816109421657338*^9, 3.816109525052451*^9, 3.8164849381506095`*^9, 
  3.816527663208623*^9, 3.8167985812515907`*^9, 3.8168012614925146`*^9, 
  3.8168013154104385`*^9, 3.81688796728219*^9, 3.816888757378109*^9, 
  3.8168940743154244`*^9, 3.8169585096197386`*^9, 3.816962360834527*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"569690f7-8172-4248-889d-4f7097d89543"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "UPDATE", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Mathmatica", " ", "does", " ", "it", " ", 
     RowBox[{"again", ".", " ", "I"}], " ", "found", " ", "a", " ", "simple", 
     " ", "way", " ", "to", " ", "forecast", " ", "stock", " ", "prices", " ", 
     RowBox[{"here", ":", " ", "https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"www", ".", "wolfram", ".", "com"}], "/", "mathematica"}], "/",
       "new"}], "-", "in", "-", 
     RowBox[{"10", "/", "time"}], "-", 
     RowBox[{"series", "/", "build"}], "-", "a", "-", "model", "-", "for", 
     "-", "forecasting", "-", "stock", "-", 
     RowBox[{"prices", ".", "html"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8160472640434422`*^9, 3.816047344971217*^9}, 
   3.816962486831234*^9},ExpressionUUID->"4c235150-695b-42af-bd41-\
ae01913f6f08"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rcfd", "=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{
     TemplateBox[{"\"Royal Caribbean\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
       "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
       "\"financial entity\""},
      "Entity"], ",", 
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "April 1,2020", Typeset`boxes$$ = 
       RowBox[{"DateObject", "[", 
         RowBox[{"{", 
           RowBox[{"2020", ",", " ", "4", ",", " ", "1"}], "}"}], "]"}], 
       Typeset`allassumptions$$ = {{
        "type" -> "MultiClash", "word" -> "", "template" -> 
         "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
         "Values" -> {{
           "name" -> "DateObject", "word" -> "the input", "desc" -> "a date", 
            "input" -> "*MC.%7E-_*DateObject-"}, {
           "name" -> "GivenName", "word" -> "April", "desc" -> "a given name",
             "input" -> "*MC.%7E-_*GivenName-"}}}}, 
       Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
       Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.7763901`7.341624982418914, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{301., {10., 20.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rcfit", "=", 
   RowBox[{"TimeSeriesModelFit", "[", "rcfd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forec", "=", 
   RowBox[{"TimeSeriesForecast", "[", 
    RowBox[{"rcfit", ",", 
     RowBox[{"{", "120", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rcfd", ",", "forec"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.816048635097538*^9, 3.8160486389047885`*^9}, {
   3.8160487247718887`*^9, 3.816048735422753*^9}, {3.8160523978971252`*^9, 
   3.8160524096528487`*^9}, {3.8160525574528627`*^9, 3.8160525675478706`*^9}, 
   3.8160526179107037`*^9, {3.8160527307364235`*^9, 3.81605274349249*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"64b14518-f2db-433f-b68a-47ac5af8cd59"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
n8zn69LO3/aG5d0+swm/fVTxaFQYrPqQ+ddlz+XLE2FdHPO5q+Pcb2TBxnxm
i3v+5JHLYMs+5rP6mpTcjbDsFvOZc/1zr5bCSuc5NuH0W4nbPapgzQfMp2aY
jn51ETZomU9WNd+6dBc25zGf6CW0c2+B7RXMv8QvcV34ajjyv858/MdzY2r6
w2KXTJtwrNMbMUM8YP0I5qMR2ux5Y2HTVObqHTvW/RYGW5cwV7U82jsoCZaX
Mx/x+7Bm7lxYdZX5cOHCprPLYF2nLJtQ+eBkjwFG2OjBbB7T02PObtgSzfyz
IVo8VQXLFjEfur4lXVEDK0uZD3rU5828B2suMx9YOGLn8RbY0GGuTfjpfM4v
/ZzVyN+def/Ao3d0CtgewbxvtnPHag9Y8QXz3mNhA/r4wGIJ84+9N3qlhcP6
WuaKpDuayiTY5JRtE/bsd5/XKxu2DmUu7zKnMGk5LA9nLos2/3TQCKvmM+/+
odOlbmWwbidz6XOxOa4aNl5gNgWsfW1/DWx5wbzLeH24831Y9k6OTShpcAvW
PoWVIcw/eH36SYVzBPL/nPn7VfvzO7vChu3MO285lcQMg82/Mu8YMenUbh/Y
/pT5u69W3e+ohhWDPrcJ22sud4pKhsVA5uLBAwbtyob1c5m3Zab6tMuHTVuZ
t54ojw3fBFvPMm/p+2z+zjJY/oS5KNXH+KIaVg2YZxM2H1x2KLgW1vkzb3K+
eKX4Pmycw2yc6tLS8hS2bGbeaIrvI3aNRP6nmTe8tOv9La6w8jFzYdDj0OZh
sMZVbxPWF42Z6TcONkxi/rZx0UqjGjbPYl7nYzE1JsP2jcxrv+591jcHVpxg
/uaOpn59Piw2Mq/54LsuDZtgvct8m/D1kgY3n3LY5MtccGmU79qjsPVT5tVD
FsTX18LyQuZV2Se+EOpg1THmlae7FxU8g3UNzCtcoirvdY1C/n0X2ARDRtE1
z7dgiw9zvrnu2YrhsEzHvLzb8H5/joOV65iXabNHj46ANVXMeWVV6uUpsOEB
89L2r352Iwc2915oE3JDQwtGGmC7F/OSbYVluZthRRrz4se3z10t5/e3ZND/
V/gP4/9l6fxK+knf7/8dd5xvOc63UF/H+Rb1i+N8C/V0nG/R/jrOtxC/43yL
7DjfQvyO8y2pXx3nWzLH+ZbjfMtxvuU433KcbznOtxznW8jfcb71/59v/Rse
ukYe
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0mdXDgAABeDXKKJhR5GyQsoqIQnZq2GUnUiltIzMhJCUpKIts2Tm9AM9
nePDc+/9ATeusDK3YmIgEJjA2P9OFEn8tUf5w29+8ZMffGeEbwwzxFe+8JlP
fOQDg7xngH766KWHbrp4x1s66aCdN7TxmlZe0UIzL2niBY085xlPaeAJj3lE
PQ+p4wH3ucdd7nCbWm5xkxtcp4ZqqqikgmuUU8ZVSimhmCsUcZlLFHKRAi5w
nnOc5QynOUU+eZzkBMc5Ri45ZJPFUY5wmEMc5AD72cde9rCbTHaxkx1ksJ10
tpHGVrawmVQ2kUIyG9nAetaxliQSWUMCq1nFSuJZwXKWsZQlxBHLYmJYxEKi
iWIB84lkHnOZw2xmMZMZRBBOGKFMZxohTGUKwQQxmUmM//ofsCFBAg==
         "]]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkVSHAAARNEZ3N19cAKn4QgcAPZcC3dPcIckuCa4u78qFq9+9a5DDU31
jWGBQCBIMy3UGnX8oIZqqqikgnLKKCVECcUUUUgB+eSRSw7ZZJFJBumkkUoK
ySSRSALxxBFLDNFEEUkE4YQRDH6f/5QP3nnjlReeeeKRB+6545YbrrnikgvO
OeOUE4454j//OOSAffbYZYdttthkg3XW+MsffrPKCsssscgC88wxywzTTDHJ
BOP84idjjDLCMEMMMkA/ffTSQzdddNJBO2208gVpi0eA
         "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
        159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
        173, 174, 175, 176, 177, 178}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwN0NNBBQAAAMCXbbuXa5xGaID6ba9s27Ztm/dxC1ywrqG2PiQQCDTSRDMt
tNJGOx100kU3PfTSRz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjob
bLLFNjvsssc+BxxyxDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc/
/PJHQF4IoYQRTgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFFFM
kBJKKaOcCiqpopoa/gFXOEcj
        "]]}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.794688*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.7868256*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8340864*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.828816*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8314944*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8340864*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8340864*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.828816*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8314944*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8340864*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.794688*^9, 3.8270016*^9}, {0, 110.82609984834392`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.8160486492328157`*^9, 3.8160487378392673`*^9, 3.816052315779296*^9, {
   3.8160524173622704`*^9, 3.81605244236493*^9}, 3.8160525689784107`*^9, 
   3.816052621117325*^9, 3.8160527531151037`*^9, 3.8160950556009398`*^9, 
   3.816106982076043*^9, 3.8161071530552473`*^9, 3.816109422009198*^9, 
   3.8161095255191193`*^9, 3.816484940429063*^9, 3.8165276636302223`*^9, 
   3.8167985817393627`*^9, 3.8168012618357143`*^9, 3.816801315782406*^9, 
   3.8168879695791817`*^9, 3.8168887577364197`*^9, 3.816894074679162*^9, 
   3.816958511755011*^9, 3.8169623611839767`*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"698e5c3c-d095-4380-bc90-0df1e85b6a22"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Below", " ", "I", " ", "have", " ", "a", " ", "series", " ", "of", " ", 
   "functions", " ", "that", " ", "take", " ", "in", " ", "the", " ", 
   "string", " ", "of", " ", "the", " ", "3", " ", "cruise", " ", "line", " ",
    "financial", " ", "identities", " ", "so", " ", "I", " ", 
   RowBox[{"don", "'"}], "t", " ", "have", " ", "to", " ", "copy", " ", "and",
    " ", "paste", " ", "the", " ", "code", " ", "I", " ", "have", " ", 
   "above", " ", "for", " ", "each", " ", "of", " ", "the", " ", "3", " ", 
   "entities"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8160519368241673`*^9, 3.816052034853795*^9}},
 CellLabel->
  "In[337]:=",ExpressionUUID->"c10e2739-d196-4c4d-a13b-d87fc7623cb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"string", "=", 
  RowBox[{"{", 
   RowBox[{
    NamespaceBox["LinguisticAssistant",
     DynamicModuleBox[{Typeset`query$$ = "Royal Caribbean", Typeset`boxes$$ = 
      TemplateBox[{"\"Royal Caribbean\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
        "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
        "\"financial entity\""}, "Entity"], 
      Typeset`allassumptions$$ = {{
       "type" -> "Clash", "word" -> "Royal Caribbean", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "2", "Values" -> {{
          "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
           "*C.Royal+Caribbean-_*Financial-"}, {
          "name" -> "Company", "desc" -> "a company", "input" -> 
           "*C.Royal+Caribbean-_*Company-"}}}}, Typeset`assumptions$$ = {}, 
      Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.7416554`7.321747156670791, "Messages" -> {}}}, 
      DynamicBox[ToBoxes[
        AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
         Dynamic[Typeset`query$$], 
         Dynamic[Typeset`boxes$$], 
         Dynamic[Typeset`allassumptions$$], 
         Dynamic[Typeset`assumptions$$], 
         Dynamic[Typeset`open$$], 
         Dynamic[Typeset`querystate$$]], StandardForm],
       ImageSizeCache->{295., {9., 20.}},
       TrackedSymbols:>{
        Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
         Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
      DynamicModuleValues:>{},
      UndoTrackedVariables:>{Typeset`open$$}],
     BaseStyle->{"Deploy"},
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True], ",", 
    TemplateBox[{"\"Carnival\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
      "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", 
      "\"financial entity\""},
     "Entity"], ",", 
    TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
      "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
      "\"financial entity\""},
     "Entity"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8160506112120233`*^9, 3.816050644299079*^9}, {
  3.816050716587796*^9, 3.816050783778783*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"006e27e6-f1c5-4f29-816a-7cae5ffb62db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Royal Caribbean\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Carnival\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
     "\"financial entity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8160507850792136`*^9, 3.816052316175084*^9, 
  3.816095055856965*^9, 3.8161069822283154`*^9, 3.816107153165856*^9, 
  3.816109422109886*^9, 3.816109525624271*^9, 3.8164849406525726`*^9, 
  3.816527663716031*^9, 3.8167985819344077`*^9, 3.816801261923506*^9, 
  3.816801315907894*^9, 3.816887969810337*^9, 3.8168887578559556`*^9, 
  3.816894074785802*^9, 3.816958511995347*^9, 3.8169623612509365`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"5108aef0-0061-45ce-80d9-8b73be6fe23d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"financial", "[", "x_", "]"}], ":=", 
  RowBox[{"FinancialData", "[", 
   RowBox[{"x", ",", 
    NamespaceBox["LinguisticAssistant",
     DynamicModuleBox[{Typeset`query$$ = "April 1,2020", Typeset`boxes$$ = 
      RowBox[{"DateObject", "[", 
        RowBox[{"{", 
          RowBox[{"2020", ",", " ", "4", ",", " ", "1"}], "}"}], "]"}], 
      Typeset`allassumptions$$ = {{
       "type" -> "MultiClash", "word" -> "", "template" -> 
        "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
        "Values" -> {{
          "name" -> "DateObject", "word" -> "the input", "desc" -> "a date", 
           "input" -> "*MC.%7E-_*DateObject-"}, {
          "name" -> "GivenName", "word" -> "April", "desc" -> "a given name", 
           "input" -> "*MC.%7E-_*GivenName-"}}}}, Typeset`assumptions$$ = {}, 
      Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.7763901`7.341624982418914, "Messages" -> {}}}, 
      DynamicBox[ToBoxes[
        AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
         Dynamic[Typeset`query$$], 
         Dynamic[Typeset`boxes$$], 
         Dynamic[Typeset`allassumptions$$], 
         Dynamic[Typeset`assumptions$$], 
         Dynamic[Typeset`open$$], 
         Dynamic[Typeset`querystate$$]], StandardForm],
       ImageSizeCache->{301., {10., 20.}},
       TrackedSymbols:>{
        Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
         Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
      DynamicModuleValues:>{},
      UndoTrackedVariables:>{Typeset`open$$}],
     BaseStyle->{"Deploy"},
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"financial", "[", "string", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"function", "[", "x_", "]"}], ":=", 
  RowBox[{"TimeSeriesModelFit", "[", 
   RowBox[{"financial", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"tsmstring", "=", 
  RowBox[{"function", "/@", "string"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"for", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TimeSeriesForecast", "[", 
       RowBox[{
        RowBox[{"tsmstring", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", "156", "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "string", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"156", " ", "weeks", " ", 
     RowBox[{"(", 
      RowBox[{"3", " ", "years"}], ")"}], " ", "is", " ", "roughly", " ", 
     "when", " ", "Royal", " ", "Caribbean", " ", "stocks", " ", "will", " ", 
     "rise", " ", "back", " ", "to", " ", 
     RowBox[{"it", "'"}], "s", " ", "pre"}], "-", 
    RowBox[{"covid", " ", 
     RowBox[{"value", ".", " ", 
      RowBox[{"I", "'"}]}], "m", " ", "not", " ", "sure", " ", "if", " ", 
     "it", " ", "would", " ", "be", " ", "a", " ", "good", " ", "use", " ", 
     "of", " ", "my", " ", "time", " ", "to", " ", "write", " ", "a", " ", 
     "program", " ", "that", " ", "could", " ", "automatically", " ", "give", 
     " ", "me", " ", "a", " ", "date", " ", "if", " ", "I", " ", "were", " ", 
     "to", " ", "input", " ", "some", " ", "closing", " ", "value"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", ",", "for"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "string"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8160508743909235`*^9, 3.8160509523138714`*^9}, {
   3.8160515018607917`*^9, 3.816051502796949*^9}, {3.8160515363803654`*^9, 
   3.8160515972548265`*^9}, {3.816051664685465*^9, 3.8160516739520273`*^9}, {
   3.8160518247574997`*^9, 3.816051833795618*^9}, 3.8160526445614605`*^9, {
   3.8160953929826093`*^9, 3.81609541237965*^9}, {3.816095494542055*^9, 
   3.8160956416818705`*^9}, 3.8168034074384065`*^9, {3.8169625187096*^9, 
   3.816962518869248*^9}},ExpressionUUID->"be86035d-0914-4fd2-a421-\
234d1cbc3bc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["TimeSeriesModel",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                   False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                   False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                    "SummaryItem"]}]}, {
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3794688000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3816633600", "SummaryItem"]}]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["178", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Candidates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Criterion: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"AIC\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TimeSeriesModel[Automatic, {
      TemporalData[TimeSeries, {{{
          Quantity[25.770000457763672`, "USDollars"], 
          Quantity[24.81999969482422, "USDollars"], 
          Quantity[24.389999389648438`, "USDollars"], 
          Quantity[29.610000610351562`, "USDollars"], 
          Quantity[33.54999923706055, "USDollars"], 
          Quantity[37.560001373291016`, "USDollars"], 
          Quantity[40.220001220703125`, "USDollars"], 
          Quantity[33.369998931884766`, "USDollars"], 
          Quantity[37.84000015258789, "USDollars"], 
          Quantity[36.97999954223633, "USDollars"], 
          Quantity[34.0099983215332, "USDollars"], 
          Quantity[37.38999938964844, "USDollars"], 
          Quantity[35.9900016784668, "USDollars"], 
          Quantity[34.43000030517578, "USDollars"], 
          Quantity[34.0099983215332, "USDollars"], 
          Quantity[36.880001068115234`, "USDollars"], 
          Quantity[35.68000030517578, "USDollars"], 
          Quantity[39.470001220703125`, "USDollars"], 
          Quantity[41.59000015258789, "USDollars"], 
          Quantity[48.060001373291016`, "USDollars"], 
          Quantity[46.77000045776367, "USDollars"], 
          Quantity[40.77000045776367, "USDollars"], 
          Quantity[41.369998931884766`, "USDollars"], 
          Quantity[37.20000076293945, "USDollars"], 
          Quantity[36.11000061035156, "USDollars"], 
          Quantity[38.029998779296875`, "USDollars"], 
          Quantity[39.91999816894531, "USDollars"], 
          Quantity[38.06999969482422, "USDollars"], 
          Quantity[36.34000015258789, "USDollars"], 
          Quantity[34.529998779296875`, "USDollars"], 
          Quantity[35.150001525878906`, "USDollars"], 
          Quantity[37.45000076293945, "USDollars"], 
          Quantity[43.70000076293945, "USDollars"], 
          Quantity[42.150001525878906`, "USDollars"], 
          Quantity[40.72999954223633, "USDollars"], 
          Quantity[43.349998474121094`, "USDollars"], 
          Quantity[43.13999938964844, "USDollars"], 
          Quantity[49.560001373291016`, "USDollars"], 
          Quantity[54.290000915527344`, "USDollars"], 
          Quantity[51.70000076293945, "USDollars"], 
          Quantity[51.869998931884766`, "USDollars"], 
          Quantity[55.63999938964844, "USDollars"], 
          Quantity[56., "USDollars"], 
          Quantity[58.11000061035156, "USDollars"], 
          Quantity[57.689998626708984`, "USDollars"], 
          Quantity[69.44000244140625, "USDollars"], 
          Quantity[75.12000274658203, "USDollars"], 
          Quantity[69.91000366210938, "USDollars"], 
          Quantity[63.59000015258789, "USDollars"], 
          Quantity[54.5099983215332, "USDollars"], 
          Quantity[61.18000030517578, "USDollars"], 
          Quantity[60.83000183105469, "USDollars"], 
          Quantity[62.5, "USDollars"], 
          Quantity[58.029998779296875`, "USDollars"], 
          Quantity[59.349998474121094`, "USDollars"], 
          Quantity[55.27000045776367, "USDollars"], 
          Quantity[51.86000061035156, "USDollars"], 
          Quantity[54.36000061035156, "USDollars"], 
          Quantity[48.2400016784668, "USDollars"], 
          Quantity[48.58000183105469, "USDollars"], 
          Quantity[46.40999984741211, "USDollars"], 
          Quantity[50.29999923706055, "USDollars"], 
          Quantity[50.29999923706055, "USDollars"], 
          Quantity[50.83000183105469, "USDollars"], 
          Quantity[49.5099983215332, "USDollars"], 
          Quantity[50.02000045776367, "USDollars"], 
          Quantity[47.560001373291016`, "USDollars"], 
          Quantity[50.06999969482422, "USDollars"], 
          Quantity[47.119998931884766`, "USDollars"], 
          Quantity[51.77000045776367, "USDollars"], 
          Quantity[49.540000915527344`, "USDollars"], 
          Quantity[48.150001525878906`, "USDollars"], 
          Quantity[58.36000061035156, "USDollars"], 
          Quantity[53.939998626708984`, "USDollars"], 
          Quantity[53.13999938964844, "USDollars"], 
          Quantity[52.400001525878906`, "USDollars"], 
          Quantity[52.79999923706055, "USDollars"], 
          Quantity[51.45000076293945, "USDollars"], 
          Quantity[50.45000076293945, "USDollars"], 
          Quantity[50.83000183105469, "USDollars"], 
          Quantity[49.29999923706055, "USDollars"], 
          Quantity[50.83000183105469, "USDollars"], 
          Quantity[51., "USDollars"], 
          Quantity[50.29999923706055, "USDollars"], 
          Quantity[48.709999084472656`, "USDollars"], 
          Quantity[47.38999938964844, "USDollars"], 
          Quantity[49.130001068115234`, "USDollars"], 
          Quantity[49.529998779296875`, "USDollars"], 
          Quantity[51.099998474121094`, "USDollars"], 
          Quantity[52.099998474121094`, "USDollars"], 
          Quantity[57.310001373291016`, "USDollars"], 
          Quantity[58.66999816894531, "USDollars"], 
          Quantity[57.189998626708984`, "USDollars"], 
          Quantity[58.5, "USDollars"], 
          Quantity[60.5, "USDollars"], 
          Quantity[60.290000915527344`, "USDollars"], 
          Quantity[60.400001525878906`, "USDollars"], 
          Quantity[61.09000015258789, "USDollars"], 
          Quantity[61.529998779296875`, "USDollars"], 
          Quantity[61.529998779296875`, "USDollars"], 
          Quantity[64.43000030517578, "USDollars"], 
          Quantity[64.06999969482422, "USDollars"], 
          Quantity[62.84000015258789, "USDollars"], 
          Quantity[66.5999984741211, "USDollars"], 
          Quantity[70.12000274658203, "USDollars"], 
          Quantity[68.83999633789062, "USDollars"], 
          Quantity[68.51000213623047, "USDollars"], 
          Quantity[68.37000274658203, "USDollars"], 
          Quantity[70.19999694824219, "USDollars"], 
          Quantity[71.94999694824219, "USDollars"], 
          Quantity[71.51000213623047, "USDollars"], 
          Quantity[70.11000061035156, "USDollars"], 
          Quantity[70.13999938964844, "USDollars"], 
          Quantity[69.33999633789062, "USDollars"], 
          Quantity[70.94000244140625, "USDollars"], 
          Quantity[67.69000244140625, "USDollars"], 
          Quantity[69.61000061035156, "USDollars"], 
          Quantity[68.75, "USDollars"], 
          Quantity[65.44999694824219, "USDollars"], 
          Quantity[60.709999084472656`, "USDollars"], 
          Quantity[62.369998931884766`, "USDollars"], 
          Quantity[61.2400016784668, "USDollars"], 
          Quantity[59.970001220703125`, "USDollars"], 
          Quantity[64.58999633789062, "USDollars"], 
          Quantity[66.08999633789062, "USDollars"], 
          Quantity[64.4000015258789, "USDollars"], 
          Quantity[64.7300033569336, "USDollars"], 
          Quantity[65.55000305175781, "USDollars"], 
          Quantity[65.26000213623047, "USDollars"], 
          Quantity[65.25, "USDollars"], 
          Quantity[66.18000030517578, "USDollars"], 
          Quantity[68.0199966430664, "USDollars"], 
          Quantity[69.29000091552734, "USDollars"], 
          Quantity[71.08999633789062, "USDollars"], 
          Quantity[69.83000183105469, "USDollars"], 
          Quantity[60.61000061035156, "USDollars"], 
          Quantity[59.90999984741211, "USDollars"], 
          Quantity[59.380001068115234`, "USDollars"], 
          Quantity[58.83000183105469, "USDollars"], 
          Quantity[59.709999084472656`, "USDollars"], 
          Quantity[61.790000915527344`, "USDollars"], 
          Quantity[60.689998626708984`, "USDollars"], 
          Quantity[63.38999938964844, "USDollars"], 
          Quantity[64.4800033569336, "USDollars"], 
          Quantity[58.2599983215332, "USDollars"], 
          Quantity[57.380001068115234`, "USDollars"], 
          Quantity[53.119998931884766`, "USDollars"], 
          Quantity[53.83000183105469, "USDollars"], 
          Quantity[56.41999816894531, "USDollars"], 
          Quantity[57.02000045776367, "USDollars"], 
          Quantity[57.56999969482422, "USDollars"], 
          Quantity[56.97999954223633, "USDollars"], 
          Quantity[60.16999816894531, "USDollars"], 
          Quantity[58.56999969482422, "USDollars"], 
          Quantity[75.43000030517578, "USDollars"], 
          Quantity[73.7300033569336, "USDollars"], 
          Quantity[70.87999725341797, "USDollars"], 
          Quantity[68.0999984741211, "USDollars"], 
          Quantity[70.61000061035156, "USDollars"], 
          Quantity[75.5, "USDollars"], 
          Quantity[75.33999633789062, "USDollars"], 
          Quantity[74.12999725341797, "USDollars"], 
          Quantity[74.44000244140625, "USDollars"], 
          Quantity[72.58000183105469, "USDollars"], 
          Quantity[75.77999877929688, "USDollars"], 
          Quantity[81.62999725341797, "USDollars"], 
          Quantity[80.08000183105469, "USDollars"], 
          Quantity[81.4800033569336, "USDollars"], 
          Quantity[78.80999755859375, "USDollars"], 
          Quantity[78.29000091552734, "USDollars"], 
          Quantity[80.63999938964844, "USDollars"], 
          Quantity[84.4000015258789, "USDollars"], 
          Quantity[82.7300033569336, "USDollars"], 
          Quantity[81.62000274658203, "USDollars"], 
          Quantity[82.83000183105469, "USDollars"], 
          Quantity[82.37000274658203, "USDollars"], 
          Quantity[80.63999938964844, "USDollars"], 
          Quantity[76.45999908447266, "USDollars"]}}, {
         TemporalData`UniformTimeSpecification[CompressedData["
1:eJxNlbutFUEQRJ+BRRZk0J/pXwhIWISAgYSFAZERIX134e0x7tWWpqSeqqmp
+fTt59fvf97e3n592L8vP379/vxxP7zmZLeIvMOqcwA7pR8YagJymOQhHCN5
fwZYdrjaqlztqQScPhiUUoJB6TYg59EkOcRIjm7MzazA3Byn3hKj3lIpIxzH
3HqpBQyn3koLkuvy7oGXwnfYTXNaD+W3OeW3a5J8xI2waU7Xofxup/weU5BH
hGEYGZpzAcAwnv6k8vTXWbqx7Efva8Z59O6H+hOGhaZPGBZe6h8Y6STnGZLL
k+Q249yRxly9jHygxQFZ/QjJxwpzNdQxV6uM5I4heU6AbNeJPVCV5pgX5dtJ
yrcIITk9Mdc2LFh1Sep1jcCu3I5ikLvRDY+mXs+iXn9tEbBPcu443Tg61LtG
Uu/xZBjOCYbhhNONs3eW5A00yRs7kEOCYYg9QsyNI5Qfpyk/ohiGyGQYdpHm
pAjlpwzlpxbDkJYMQ1438oGplJ85lJ/VDEN2MQw5QXPKlPLLhfLLm9lYQcxG
RdKcaqP8GqH8vd/MRkszG61JczqUejuGYehshqHv3vwPR5x6R5V6x4Rh2DNg
GOaO7DtMp94po95pYRi2KBmGuZf/Qb1sBXQU48KDYnxBFOPCaIRBpVmMupuG
fFVhMepihGHhwBzdN2RIDhbjGsdiVC0W48KBObsFFqOashjVjMWo5ixGvb15
YLIY1YrFuEaxGNWGxai+zwbm3jY/0FmMW94sRt3DRjZeO6Q53uxJ9WFPrlr2
pN7n+UBTmnMOe1IveYDJntTlMhunleaEsCf3wWFPahh7UuPqtgcmi1GjWIx6
h+6Bw2JcrUY30liMms5i3D2xGDWDxbg3319u/AUovaRb
          "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
        ValueDimensions -> 1, DateFunction -> Automatic, 
         ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
         TemporalRegularity -> True}}, True, 12.], {
      "SARIMA", {}, "ARIMA", {}, {
        "StepwiseStart"[0], 
        Span[0, 2], 
        "StepwiseStart"[0], 0, 0, 0, 1}, {}, 
       ARIMAProcess[0.28638417303225416`, {}, 1, {}, 10.79519253946591], {
       "Candidates" -> {
          ARIMAProcess[0.28638417303225416`, {}, 1, {}, 10.79519253946591], 
          ARIMAProcess[
          0.28638417303225416`, {}, 1, {-0.03700979110956518}, 
           10.77836087701071], 
          ARIMAProcess[
          0.29698319145326346`, {-0.03700979110956518}, 1, {}, 
           10.780406098272934`], 
          ARIMAProcess[
          0.3305660434374103, {-0.15427483277918466`}, 1, {
           0.13368607159969928`}, 10.786119297842024`], 
          
          ARIMAProcess[-0.019118509583625414`, {-0.04175175343473098}, 
           2, {-0.877761956839236}, 11.873803470083168`], 
          
          ARIMAProcess[-0.02595555649865274, {-0.4142967774540459}, 
           2, {-0.46662790972576096`, -0.36876633923822566`}, 
           11.88310494470352], 
          
          ARIMAProcess[-0.02084367231632015, {-0.11502749643823752`, \
-0.020726945536830764`}, 2, {-0.8570467915859006}, 11.960811118363013`], 
          
          ARIMAProcess[-0.025640591023030575`, {-0.3806383103349457, \
-0.01649625920401148}, 2, {-0.5372617253189497, -0.2950168624633705}, 
           11.88932987769961], 
          
          ARIMAProcess[-0.018352270126342773`, {}, 2, {-0.48919444851555827`},
            15.228013615850182`], 
          ARMAProcess[
          2.40525475340885, {0.9577610420102651}, {0.08526346897551272}, 
           16.07193008376839]}, 
        "AIC" -> {427.47996016323185`, 429.20220930160104`, 
         429.23598204808377`, 431.3302901972556, 448.4315560285372, 
         450.57093970069826`, 451.7311306561494, 452.66416011391277`, 
         490.718338412124, 502.3192213619889}}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TimeSeriesModel",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                   False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                   False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                    "SummaryItem"]}]}, {
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3794688000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3816633600", "SummaryItem"]}]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["178", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Candidates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Criterion: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"AIC\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TimeSeriesModel[Automatic, {
      TemporalData[TimeSeries, {{{
          Quantity[8.800000190734863, "USDollars"], 
          Quantity[7.96999979019165, "USDollars"], 
          Quantity[8.489999771118164, "USDollars"], 
          Quantity[10.210000038146973`, "USDollars"], 
          Quantity[11.300000190734863`, "USDollars"], 
          Quantity[11.989999771118164`, "USDollars"], 
          Quantity[12.420000076293945`, "USDollars"], 
          Quantity[11.5, "USDollars"], 
          Quantity[12.510000228881836`, "USDollars"], 
          Quantity[12.380000114440918`, "USDollars"], 
          Quantity[11.850000381469727`, "USDollars"], 
          Quantity[12.5600004196167, "USDollars"], 
          Quantity[12.220000267028809`, "USDollars"], 
          Quantity[11.84000015258789, "USDollars"], 
          Quantity[11.640000343322754`, "USDollars"], 
          Quantity[12.170000076293945`, "USDollars"], 
          Quantity[11.90999984741211, "USDollars"], 
          Quantity[12.979999542236328`, "USDollars"], 
          Quantity[14.460000038146973`, "USDollars"], 
          Quantity[16.690000534057617`, "USDollars"], 
          Quantity[15.899999618530273`, "USDollars"], 
          Quantity[13.930000305175781`, "USDollars"], 
          Quantity[14.34000015258789, "USDollars"], 
          Quantity[13.09000015258789, "USDollars"], 
          Quantity[12.819999694824219`, "USDollars"], 
          Quantity[13.529999732971191`, "USDollars"], 
          Quantity[14.210000038146973`, "USDollars"], 
          Quantity[13.850000381469727`, "USDollars"], 
          Quantity[13.1899995803833, "USDollars"], 
          Quantity[12.260000228881836`, "USDollars"], 
          Quantity[12.270000457763672`, "USDollars"], 
          Quantity[12.779999732971191`, "USDollars"], 
          Quantity[14.720000267028809`, "USDollars"], 
          Quantity[14.109999656677246`, "USDollars"], 
          Quantity[14.149999618530273`, "USDollars"], 
          Quantity[14.600000381469727`, "USDollars"], 
          Quantity[14.460000038146973`, "USDollars"], 
          Quantity[16.280000686645508`, "USDollars"], 
          Quantity[17.239999771118164`, "USDollars"], 
          Quantity[15.930000305175781`, "USDollars"], 
          Quantity[15.739999771118164`, "USDollars"], 
          Quantity[16.799999237060547`, "USDollars"], 
          Quantity[16.8700008392334, "USDollars"], 
          Quantity[17.25, "USDollars"], 
          Quantity[18.479999542236328`, "USDollars"], 
          Quantity[21.510000228881836`, "USDollars"], 
          Quantity[24.90999984741211, "USDollars"], 
          Quantity[23.040000915527344`, "USDollars"], 
          Quantity[20.59000015258789, "USDollars"], 
          Quantity[17.440000534057617`, "USDollars"], 
          Quantity[19.979999542236328`, "USDollars"], 
          Quantity[19.440000534057617`, "USDollars"], 
          Quantity[20.420000076293945`, "USDollars"], 
          Quantity[19.09000015258789, "USDollars"], 
          Quantity[18.81999969482422, "USDollars"], 
          Quantity[17.829999923706055`, "USDollars"], 
          Quantity[17.229999542236328`, "USDollars"], 
          Quantity[18., "USDollars"], 
          Quantity[16., "USDollars"], 
          Quantity[16., "USDollars"], 
          Quantity[15.779999732971191`, "USDollars"], 
          Quantity[16.780000686645508`, "USDollars"], 
          Quantity[16.420000076293945`, "USDollars"], 
          Quantity[16.360000610351562`, "USDollars"], 
          Quantity[15.880000114440918`, "USDollars"], 
          Quantity[15.609999656677246`, "USDollars"], 
          Quantity[14.569999694824219`, "USDollars"], 
          Quantity[15.319999694824219`, "USDollars"], 
          Quantity[14.579999923706055`, "USDollars"], 
          Quantity[16.15999984741211, "USDollars"], 
          Quantity[15.279999732971191`, "USDollars"], 
          Quantity[15.039999961853027`, "USDollars"], 
          Quantity[17.479999542236328`, "USDollars"], 
          Quantity[15.779999732971191`, "USDollars"], 
          Quantity[15.470000267028809`, "USDollars"], 
          Quantity[15., "USDollars"], 
          Quantity[15.1899995803833, "USDollars"], 
          Quantity[15.140000343322754`, "USDollars"], 
          Quantity[14.800000190734863`, "USDollars"], 
          Quantity[14.800000190734863`, "USDollars"], 
          Quantity[13.75, "USDollars"], 
          Quantity[14.329999923706055`, "USDollars"], 
          Quantity[14.649999618530273`, "USDollars"], 
          Quantity[14.34000015258789, "USDollars"], 
          Quantity[13.880000114440918`, "USDollars"], 
          Quantity[13.069999694824219`, "USDollars"], 
          Quantity[13.739999771118164`, "USDollars"], 
          Quantity[14.020000457763672`, "USDollars"], 
          Quantity[13.779999732971191`, "USDollars"], 
          Quantity[14.220000267028809`, "USDollars"], 
          Quantity[15.4399995803833, "USDollars"], 
          Quantity[15.819999694824219`, "USDollars"], 
          Quantity[15.1899995803833, "USDollars"], 
          Quantity[15.220000267028809`, "USDollars"], 
          Quantity[15.470000267028809`, "USDollars"], 
          Quantity[14.680000305175781`, "USDollars"], 
          Quantity[14.40999984741211, "USDollars"], 
          Quantity[14.600000381469727`, "USDollars"], 
          Quantity[14.539999961853027`, "USDollars"], 
          Quantity[14.649999618530273`, "USDollars"], 
          Quantity[16.139999389648438`, "USDollars"], 
          Quantity[15.890000343322754`, "USDollars"], 
          Quantity[15.279999732971191`, "USDollars"], 
          Quantity[16.1200008392334, "USDollars"], 
          Quantity[17.209999084472656`, "USDollars"], 
          Quantity[16.479999542236328`, "USDollars"], 
          Quantity[16.510000228881836`, "USDollars"], 
          Quantity[16.709999084472656`, "USDollars"], 
          Quantity[17.579999923706055`, "USDollars"], 
          Quantity[18.530000686645508`, "USDollars"], 
          Quantity[18.290000915527344`, "USDollars"], 
          Quantity[17.65999984741211, "USDollars"], 
          Quantity[17.8799991607666, "USDollars"], 
          Quantity[17.690000534057617`, "USDollars"], 
          Quantity[17.850000381469727`, "USDollars"], 
          Quantity[15.930000305175781`, "USDollars"], 
          Quantity[16.459999084472656`, "USDollars"], 
          Quantity[16.239999771118164`, "USDollars"], 
          Quantity[15.3100004196167, "USDollars"], 
          Quantity[14.289999961853027`, "USDollars"], 
          Quantity[14.40999984741211, "USDollars"], 
          Quantity[14.130000114440918`, "USDollars"], 
          Quantity[13.739999771118164`, "USDollars"], 
          Quantity[15.069999694824219`, "USDollars"], 
          Quantity[15.3100004196167, "USDollars"], 
          Quantity[15.069999694824219`, "USDollars"], 
          Quantity[15.180000305175781`, "USDollars"], 
          Quantity[15.029999732971191`, "USDollars"], 
          Quantity[15.15999984741211, "USDollars"], 
          Quantity[14.960000038146973`, "USDollars"], 
          Quantity[15.1899995803833, "USDollars"], 
          Quantity[15.989999771118164`, "USDollars"], 
          Quantity[15.609999656677246`, "USDollars"], 
          Quantity[15.6899995803833, "USDollars"], 
          Quantity[15.210000038146973`, "USDollars"], 
          Quantity[14.029999732971191`, "USDollars"], 
          Quantity[13.970000267028809`, "USDollars"], 
          Quantity[14.020000457763672`, "USDollars"], 
          Quantity[14.079999923706055`, "USDollars"], 
          Quantity[14.149999618530273`, "USDollars"], 
          Quantity[14.609999656677246`, "USDollars"], 
          Quantity[14.479999542236328`, "USDollars"], 
          Quantity[15.1899995803833, "USDollars"], 
          Quantity[15.359999656677246`, "USDollars"], 
          Quantity[14.029999732971191`, "USDollars"], 
          Quantity[13.760000228881836`, "USDollars"], 
          Quantity[12.300000190734863`, "USDollars"], 
          Quantity[12.979999542236328`, "USDollars"], 
          Quantity[13.710000038146973`, "USDollars"], 
          Quantity[13.550000190734863`, "USDollars"], 
          Quantity[13.710000038146973`, "USDollars"], 
          Quantity[13.34000015258789, "USDollars"], 
          Quantity[14.180000305175781`, "USDollars"], 
          Quantity[13.819999694824219`, "USDollars"], 
          Quantity[19.25, "USDollars"], 
          Quantity[16.729999542236328`, "USDollars"], 
          Quantity[16.209999084472656`, "USDollars"], 
          Quantity[14.930000305175781`, "USDollars"], 
          Quantity[16.010000228881836`, "USDollars"], 
          Quantity[17.56999969482422, "USDollars"], 
          Quantity[18.049999237060547`, "USDollars"], 
          Quantity[17.59000015258789, "USDollars"], 
          Quantity[18.190000534057617`, "USDollars"], 
          Quantity[17.3700008392334, "USDollars"], 
          Quantity[18.18000030517578, "USDollars"], 
          Quantity[20.229999542236328`, "USDollars"], 
          Quantity[20.649999618530273`, "USDollars"], 
          Quantity[21.579999923706055`, "USDollars"], 
          Quantity[19.979999542236328`, "USDollars"], 
          Quantity[20.149999618530273`, "USDollars"], 
          Quantity[21.15999984741211, "USDollars"], 
          Quantity[22.8799991607666, "USDollars"], 
          Quantity[23.450000762939453`, "USDollars"], 
          Quantity[23.200000762939453`, "USDollars"], 
          Quantity[23.56999969482422, "USDollars"], 
          Quantity[22.690000534057617`, "USDollars"], 
          Quantity[22.31999969482422, "USDollars"], 
          Quantity[21.31999969482422, "USDollars"]}}, {
         TemporalData`UniformTimeSpecification[CompressedData["
1:eJxNlbutFUEQRJ+BRRZk0J/pXwhIWISAgYSFAZERIX134e0x7tWWpqSeqqmp
+fTt59fvf97e3n592L8vP379/vxxP7zmZLeIvMOqcwA7pR8YagJymOQhHCN5
fwZYdrjaqlztqQScPhiUUoJB6TYg59EkOcRIjm7MzazA3Byn3hKj3lIpIxzH
3HqpBQyn3koLkuvy7oGXwnfYTXNaD+W3OeW3a5J8xI2waU7Xofxup/weU5BH
hGEYGZpzAcAwnv6k8vTXWbqx7Efva8Z59O6H+hOGhaZPGBZe6h8Y6STnGZLL
k+Q249yRxly9jHygxQFZ/QjJxwpzNdQxV6uM5I4heU6AbNeJPVCV5pgX5dtJ
yrcIITk9Mdc2LFh1Sep1jcCu3I5ikLvRDY+mXs+iXn9tEbBPcu443Tg61LtG
Uu/xZBjOCYbhhNONs3eW5A00yRs7kEOCYYg9QsyNI5Qfpyk/ohiGyGQYdpHm
pAjlpwzlpxbDkJYMQ1438oGplJ85lJ/VDEN2MQw5QXPKlPLLhfLLm9lYQcxG
RdKcaqP8GqH8vd/MRkszG61JczqUejuGYehshqHv3vwPR5x6R5V6x4Rh2DNg
GOaO7DtMp94po95pYRi2KBmGuZf/Qb1sBXQU48KDYnxBFOPCaIRBpVmMupuG
fFVhMepihGHhwBzdN2RIDhbjGsdiVC0W48KBObsFFqOashjVjMWo5ixGvb15
YLIY1YrFuEaxGNWGxai+zwbm3jY/0FmMW94sRt3DRjZeO6Q53uxJ9WFPrlr2
pN7n+UBTmnMOe1IveYDJntTlMhunleaEsCf3wWFPahh7UuPqtgcmi1GjWIx6
h+6Bw2JcrUY30liMms5i3D2xGDWDxbg3319u/AUovaRb
          "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
        ValueDimensions -> 1, DateFunction -> Automatic, 
         ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
         TemporalRegularity -> True}}, True, 12.], {
      "SARIMA", {}, "ARIMA", {}, {
        "StepwiseStart"[0], 
        Span[0, 2], 
        "StepwiseStart"[0], 0, 0, 0, 1}, {}, 
       ARIMAProcess[0.0707344604750811, {}, 1, {}, 1.1250463087467009`], {
       "Candidates" -> {
          ARIMAProcess[0.0707344604750811, {}, 1, {}, 1.1250463087467009`], 
          ARIMAProcess[
          0.0707344604750811, {}, 1, {-0.027502848313470264`}, 
           1.1241042764254667`], 
          ARIMAProcess[
          0.07267985961206241, {-0.02750284831347026}, 1, {}, 
           1.1241953162199332`], 
          ARIMAProcess[
          0.06907167268116246, {0.02350746415185311}, 
           1, {-0.0845341170805199}, 1.1247015972348806`], 
          
          ARIMAProcess[-0.0010230541127686165`, {-0.059164400519932284`}, 
           2, {-0.8888727048544021}, 1.259191607746067], 
          
          ARIMAProcess[-0.0011134175958811086`, {-0.15271740346004378`}, 
           2, {-0.7886719956449206, -0.08871325290115041}, 1.259287904295216], 
          
          ARIMAProcess[-0.0009624017393624531, {-0.07733300349973211, 
           0.08096179633787157}, 2, {-0.8833866454257777}, 
           1.2818115347595083`], 
          
          ARIMAProcess[-0.001082584486255726, {-0.18094851891570773`, 
           0.06015252769079542}, 
           2, {-0.7943246908861584, -0.08295336101673373}, 1.272968325298628], 
          ARMAProcess[
          1.3586502933030262`, {0.9134605259708103}, {0.09590261785401476}, 
           1.3445051987911434`], 
          ARMAProcess[
          1.6488351806364165`, {0.41714938216400094`, 0.47782776537982635`}, {
           0.5614172437296597}, 1.3506473332318094`]}, 
        "AIC" -> {24.97270726884837, 26.823600522425608`, 26.838015935279746`,
          28.91816013543752, 49.02364823566139, 51.0372602469364, 
         54.19283232841788, 54.96055584512949, 60.69263929035679, 
         63.50394908465601}}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TimeSeriesModel",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                   False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{}, {{}, {}, {
                  GrayLevel[0.5], 
                  PointSize[0.125], 
                  AbsoluteThickness[1.5], 
                  StyleBox[
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                    "]], {FontFamily -> "Arial"}, StripOnInput -> 
                   False]}}, {}}, AspectRatio -> 1, Axes -> {False, False}, 
               AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
               GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
               DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{0., 50.}, {-7.030970816185017, 
                4.273359296964368}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 1}, {1, 1}}, 
               Ticks -> {Automatic, Automatic}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                    "SummaryItem"]}]}, {
                 TagBox[
                  TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3794688000", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3816633600", "SummaryItem"]}]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 RowBox[{
                   TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["178", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Candidates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Criterion: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"AIC\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TimeSeriesModel[Automatic, {
      TemporalData[TimeSeries, {{{
          Quantity[9.550000190734863, "USDollars"], 
          Quantity[8.399999618530273, "USDollars"], 
          Quantity[8.460000038146973, "USDollars"], 
          Quantity[10.010000228881836`, "USDollars"], 
          Quantity[11.010000228881836`, "USDollars"], 
          Quantity[11.720000267028809`, "USDollars"], 
          Quantity[13.109999656677246`, "USDollars"], 
          Quantity[11.359999656677246`, "USDollars"], 
          Quantity[12.350000381469727`, "USDollars"], 
          Quantity[12.079999923706055`, "USDollars"], 
          Quantity[11.350000381469727`, "USDollars"], 
          Quantity[12.380000114440918`, "USDollars"], 
          Quantity[11.489999771118164`, "USDollars"], 
          Quantity[11., "USDollars"], 
          Quantity[10.869999885559082`, "USDollars"], 
          Quantity[11.470000267028809`, "USDollars"], 
          Quantity[10.859999656677246`, "USDollars"], 
          Quantity[11.4399995803833, "USDollars"], 
          Quantity[13.09000015258789, "USDollars"], 
          Quantity[16.40999984741211, "USDollars"], 
          Quantity[16.399999618530273`, "USDollars"], 
          Quantity[13.84000015258789, "USDollars"], 
          Quantity[14.4399995803833, "USDollars"], 
          Quantity[11.180000305175781`, "USDollars"], 
          Quantity[11.119999885559082`, "USDollars"], 
          Quantity[12., "USDollars"], 
          Quantity[12.430000305175781`, "USDollars"], 
          Quantity[11.729999542236328`, "USDollars"], 
          Quantity[11.09000015258789, "USDollars"], 
          Quantity[10.3100004196167, "USDollars"], 
          Quantity[10.760000228881836`, "USDollars"], 
          Quantity[10.920000076293945`, "USDollars"], 
          Quantity[12.880000114440918`, "USDollars"], 
          Quantity[12.430000305175781`, "USDollars"], 
          Quantity[12.779999732971191`, "USDollars"], 
          Quantity[14.029999732971191`, "USDollars"], 
          Quantity[13.899999618530273`, "USDollars"], 
          Quantity[16.030000686645508`, "USDollars"], 
          Quantity[17.59000015258789, "USDollars"], 
          Quantity[16.06999969482422, "USDollars"], 
          Quantity[15.65999984741211, "USDollars"], 
          Quantity[17.290000915527344`, "USDollars"], 
          Quantity[17.389999389648438`, "USDollars"], 
          Quantity[17.979999542236328`, "USDollars"], 
          Quantity[19.59000015258789, "USDollars"], 
          Quantity[22.43000030517578, "USDollars"], 
          Quantity[26.860000610351562`, "USDollars"], 
          Quantity[24.1299991607666, "USDollars"], 
          Quantity[20.649999618530273`, "USDollars"], 
          Quantity[17.25, "USDollars"], 
          Quantity[20.5, "USDollars"], 
          Quantity[19.989999771118164`, "USDollars"], 
          Quantity[20.959999084472656`, "USDollars"], 
          Quantity[19.200000762939453`, "USDollars"], 
          Quantity[19.309999465942383`, "USDollars"], 
          Quantity[18.219999313354492`, "USDollars"], 
          Quantity[17.09000015258789, "USDollars"], 
          Quantity[18.030000686645508`, "USDollars"], 
          Quantity[15.800000190734863`, "USDollars"], 
          Quantity[16.079999923706055`, "USDollars"], 
          Quantity[15.279999732971191`, "USDollars"], 
          Quantity[16.559999465942383`, "USDollars"], 
          Quantity[16.43000030517578, "USDollars"], 
          Quantity[16.420000076293945`, "USDollars"], 
          Quantity[15.970000267028809`, "USDollars"], 
          Quantity[16.1299991607666, "USDollars"], 
          Quantity[15.270000457763672`, "USDollars"], 
          Quantity[15.989999771118164`, "USDollars"], 
          Quantity[15.199999809265137`, "USDollars"], 
          Quantity[16.399999618530273`, "USDollars"], 
          Quantity[15.600000381469727`, "USDollars"], 
          Quantity[15.329999923706055`, "USDollars"], 
          Quantity[18.5, "USDollars"], 
          Quantity[15.609999656677246`, "USDollars"], 
          Quantity[15.270000457763672`, "USDollars"], 
          Quantity[14.890000343322754`, "USDollars"], 
          Quantity[14.979999542236328`, "USDollars"], 
          Quantity[14.65999984741211, "USDollars"], 
          Quantity[14.40999984741211, "USDollars"], 
          Quantity[14.380000114440918`, "USDollars"], 
          Quantity[13.380000114440918`, "USDollars"], 
          Quantity[14.220000267028809`, "USDollars"], 
          Quantity[14.34000015258789, "USDollars"], 
          Quantity[14.170000076293945`, "USDollars"], 
          Quantity[13.640000343322754`, "USDollars"], 
          Quantity[13.0600004196167, "USDollars"], 
          Quantity[13.5600004196167, "USDollars"], 
          Quantity[13.720000267028809`, "USDollars"], 
          Quantity[14.239999771118164`, "USDollars"], 
          Quantity[13.989999771118164`, "USDollars"], 
          Quantity[15.130000114440918`, "USDollars"], 
          Quantity[15.640000343322754`, "USDollars"], 
          Quantity[15.229999542236328`, "USDollars"], 
          Quantity[15.34000015258789, "USDollars"], 
          Quantity[15.75, "USDollars"], 
          Quantity[15.390000343322754`, "USDollars"], 
          Quantity[15.199999809265137`, "USDollars"], 
          Quantity[15.680000305175781`, "USDollars"], 
          Quantity[15.579999923706055`, "USDollars"], 
          Quantity[15.5600004196167, "USDollars"], 
          Quantity[16.739999771118164`, "USDollars"], 
          Quantity[16.75, "USDollars"], 
          Quantity[15.720000267028809`, "USDollars"], 
          Quantity[16.649999618530273`, "USDollars"], 
          Quantity[17.690000534057617`, "USDollars"], 
          Quantity[17.110000610351562`, "USDollars"], 
          Quantity[16.940000534057617`, "USDollars"], 
          Quantity[16.989999771118164`, "USDollars"], 
          Quantity[17.6299991607666, "USDollars"], 
          Quantity[18.420000076293945`, "USDollars"], 
          Quantity[18.530000686645508`, "USDollars"], 
          Quantity[17.93000030517578, "USDollars"], 
          Quantity[17.93000030517578, "USDollars"], 
          Quantity[17.510000228881836`, "USDollars"], 
          Quantity[17.790000915527344`, "USDollars"], 
          Quantity[16.969999313354492`, "USDollars"], 
          Quantity[17.5, "USDollars"], 
          Quantity[17.260000228881836`, "USDollars"], 
          Quantity[16.25, "USDollars"], 
          Quantity[14.989999771118164`, "USDollars"], 
          Quantity[15.329999923706055`, "USDollars"], 
          Quantity[15.170000076293945`, "USDollars"], 
          Quantity[14.630000114440918`, "USDollars"], 
          Quantity[16.6299991607666, "USDollars"], 
          Quantity[16.68000030517578, "USDollars"], 
          Quantity[16.559999465942383`, "USDollars"], 
          Quantity[17.110000610351562`, "USDollars"], 
          Quantity[17.34000015258789, "USDollars"], 
          Quantity[17.270000457763672`, "USDollars"], 
          Quantity[16.989999771118164`, "USDollars"], 
          Quantity[17.229999542236328`, "USDollars"], 
          Quantity[18.010000228881836`, "USDollars"], 
          Quantity[18.200000762939453`, "USDollars"], 
          Quantity[18.729999542236328`, "USDollars"], 
          Quantity[18.079999923706055`, "USDollars"], 
          Quantity[16.59000015258789, "USDollars"], 
          Quantity[16.479999542236328`, "USDollars"], 
          Quantity[16.100000381469727`, "USDollars"], 
          Quantity[16.200000762939453`, "USDollars"], 
          Quantity[16.450000762939453`, "USDollars"], 
          Quantity[17.079999923706055`, "USDollars"], 
          Quantity[16.989999771118164`, "USDollars"], 
          Quantity[17.709999084472656`, "USDollars"], 
          Quantity[18.350000381469727`, "USDollars"], 
          Quantity[16.799999237060547`, "USDollars"], 
          Quantity[16.530000686645508`, "USDollars"], 
          Quantity[15.029999732971191`, "USDollars"], 
          Quantity[15.770000457763672`, "USDollars"], 
          Quantity[16.6299991607666, "USDollars"], 
          Quantity[16.170000076293945`, "USDollars"], 
          Quantity[16.549999237060547`, "USDollars"], 
          Quantity[16.15999984741211, "USDollars"], 
          Quantity[17.25, "USDollars"], 
          Quantity[16.969999313354492`, "USDollars"], 
          Quantity[21.510000228881836`, "USDollars"], 
          Quantity[20.1200008392334, "USDollars"], 
          Quantity[19.520000457763672`, "USDollars"], 
          Quantity[18.850000381469727`, "USDollars"], 
          Quantity[20.059999465942383`, "USDollars"], 
          Quantity[21.309999465942383`, "USDollars"], 
          Quantity[22.059999465942383`, "USDollars"], 
          Quantity[20.459999084472656`, "USDollars"], 
          Quantity[21.020000457763672`, "USDollars"], 
          Quantity[19.989999771118164`, "USDollars"], 
          Quantity[20.889999389648438`, "USDollars"], 
          Quantity[22.549999237060547`, "USDollars"], 
          Quantity[23.200000762939453`, "USDollars"], 
          Quantity[23.68000030517578, "USDollars"], 
          Quantity[22.8700008392334, "USDollars"], 
          Quantity[22.940000534057617`, "USDollars"], 
          Quantity[23.399999618530273`, "USDollars"], 
          Quantity[25.420000076293945`, "USDollars"], 
          Quantity[26.299999237060547`, "USDollars"], 
          Quantity[26.5, "USDollars"], 
          Quantity[28.149999618530273`, "USDollars"], 
          Quantity[27.260000228881836`, "USDollars"], 
          Quantity[27.440000534057617`, "USDollars"], 
          Quantity[26.510000228881836`, "USDollars"]}}, {
         TemporalData`UniformTimeSpecification[CompressedData["
1:eJxNlbutFUEQRJ+BRRZk0J/pXwhIWISAgYSFAZERIX134e0x7tWWpqSeqqmp
+fTt59fvf97e3n592L8vP379/vxxP7zmZLeIvMOqcwA7pR8YagJymOQhHCN5
fwZYdrjaqlztqQScPhiUUoJB6TYg59EkOcRIjm7MzazA3Byn3hKj3lIpIxzH
3HqpBQyn3koLkuvy7oGXwnfYTXNaD+W3OeW3a5J8xI2waU7Xofxup/weU5BH
hGEYGZpzAcAwnv6k8vTXWbqx7Efva8Z59O6H+hOGhaZPGBZe6h8Y6STnGZLL
k+Q249yRxly9jHygxQFZ/QjJxwpzNdQxV6uM5I4heU6AbNeJPVCV5pgX5dtJ
yrcIITk9Mdc2LFh1Sep1jcCu3I5ikLvRDY+mXs+iXn9tEbBPcu443Tg61LtG
Uu/xZBjOCYbhhNONs3eW5A00yRs7kEOCYYg9QsyNI5Qfpyk/ohiGyGQYdpHm
pAjlpwzlpxbDkJYMQ1438oGplJ85lJ/VDEN2MQw5QXPKlPLLhfLLm9lYQcxG
RdKcaqP8GqH8vd/MRkszG61JczqUejuGYehshqHv3vwPR5x6R5V6x4Rh2DNg
GOaO7DtMp94po95pYRi2KBmGuZf/Qb1sBXQU48KDYnxBFOPCaIRBpVmMupuG
fFVhMepihGHhwBzdN2RIDhbjGsdiVC0W48KBObsFFqOashjVjMWo5ixGvb15
YLIY1YrFuEaxGNWGxai+zwbm3jY/0FmMW94sRt3DRjZeO6Q53uxJ9WFPrlr2
pN7n+UBTmnMOe1IveYDJntTlMhunleaEsCf3wWFPahh7UuPqtgcmi1GjWIx6
h+6Bw2JcrUY30liMms5i3D2xGDWDxbg3319u/AUovaRb
          "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
        ValueDimensions -> 1, DateFunction -> Automatic, 
         ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
         TemporalRegularity -> True}}, True, 12.], {
      "SARIMA", {}, "ARIMA", {}, {
        "StepwiseStart"[0], 
        Span[0, 2], 
        "StepwiseStart"[0], 0, 0, 0, 1}, {}, 
       ARIMAProcess[0.09581920925506764, {}, 1, {}, 1.4356356890930602`], {
       "Candidates" -> {
          ARIMAProcess[0.09581920925506764, {}, 1, {}, 1.4356356890930602`], 
          ARIMAProcess[
          0.09581920925506764, {}, 1, {-0.0416177471568836}, 
           1.4329322248163991`], 
          ARIMAProcess[
          0.09980698887861757, {-0.04161774715688361}, 1, {}, 
           1.4331491151355833`], 
          ARIMAProcess[
          0.0884049974481647, {0.07737709238620977}, 
           1, {-0.13678900997326224`}, 1.4322033021617981`], 
          ARIMAProcess[
          0.0013252885326831896`, {-0.06022953927459403}, 
           2, {-0.8897169342018255}, 1.610792541102432], 
          ARIMAProcess[
          0.0015471291787382184`, {-0.23770184070853884`}, 
           2, {-0.6949089114173752, -0.1743602295654501}, 1.60939441410527], 
          ARIMAProcess[
          0.0012604277354414089`, {-0.08980092313582569, 0.08145995867400042},
            2, {-0.8819101108006323}, 1.6381432069390192`], 
          ARIMAProcess[
          0.0014203851837400734`, {-0.19545337414138955`, 
           0.05914660636134183}, 
           2, {-0.7821924035160168, -0.0922332214792962}, 1.626585618739651], 
          ARMAProcess[
          0.7386092607604487, {0.9553714961458082}, {0.07220427068543854}, 
           1.690098481754471], 
          ARMAProcess[
          0.9920965222397571, {0.4833886527948871, 0.4566665484885055}, {
           0.5121190216857014}, 1.6921862896365296`]}, 
        "AIC" -> {68.36617772640571, 70.03066760556483, 70.05760785764373, 
         71.94009720559835, 92.85728485848757, 94.70271829164264, 
         97.85428689687019, 98.5939927630451, 101.41205048270969`, 
         103.63180125789619`}}}, {}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8169585135321703`*^9, 3.8169623618476243`*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"bb2f215a-bb3e-4bf1-9fa7-8c649b4b1b3a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlVtsk2Ucxj/OiMY0METkYLkAmZhRRaOo028cZOzQfe3Wrdu68a3d2m7d
ul5INCj6aUJAQVcOBkkGVlDmhRkVnA7looocFKL1Qjl5+IB4AwhFQb3AA33+
z2vSJUvzy/89PP/nfd73mxXs9XaM1DRt783//G/+79jSS2U3fzIzDy3Ub/66
rgtbF799JM/m3U+BtRMhcG47ubi/NM/Oo8Jm+LCeZ+M3YefgkUV5tqYv4/jp
S/KsHxJ2BvZgfOIKec1FjE9NLQenEqvB2cXkZSPK8qzFy6nvA9STl4TN4X9Q
z9yxHKxPeBic05cXzHfGhO1dCcw33lDjT6BuT6qg3gOL8+x4ooL6jon+KHlw
XDn0bxI2+4LLoP/A/4zxrscqVb9gs0M4tW2b6O8TtopuB2f2V9LvUdg/d571
z6+DrWCVnNf18eD0hirqm4f59kdVnL8Y/TjOCusLNoP1W6u5/37x9xXFp5bC
3w+rOX4S2PUT64kW0T/eLfsffx/15ANunsdGsHHGrc4f/lhjapiv2ZXQO79G
7bccehtr6M8VcOJkjcofxqdGGtKPplVB732G8qsaehuEbc9J1F0vcXxxwAM/
/zWUHi/8LPbI/NJVqDvrPOp8a6D/BQ/zUob9rfc8zMdWN/y8x8v5XWDd46U+
HfMTz3nV+UFf6l2v8guc/cbLfOzE+qa7lv1cRv/JZxWXoJ7ZWct8z4SfueOs
l1aAnX8K26seRP7SK+t4H+eIv28VsuOrOqUfrF+rY7+fYT1tu4/6RqLuOuJT
/mF986pP5U/0Tqvn+fWhnllaz/nnUDe+qFfvi+Thcr3KFzh9Z4PqF/7Yixp4
nn9VQG9Pg8oXOHWxgfMXgLOT/ewvDNZ0v8q36O9SvBBsbvEX9J+b2Mj5u8XP
0saCuhFp5PlaYGtjY4Gf6U+F9bNNmK8/2qTeJ/iRaG/ie5NEPfV6E/NxEJwd
bmI+NmA97bzi29BPsq2Z/g8g35n1zXwPfPArN9RMv95E3Wk3qzyibkwIKEZe
7XUBdR8lz/sCyk/J848B3of14MS4FqUXnLq/kF3pFo6fZsDf0y3M42hwcnQr
6zHcj0xJq/Ib9Zyf9cG1uI/WiVb29xA4PWIF/XOC7XkrOH4K2FG/QvkH1i3F
N8Bascn5NthVa/I+y37mapN5XgdODpjKX3kf5rSp7wHYMBRfgn5rVRvXi4je
d1jXXKL36zbqCWB8ojqo8iJ+PhPk/ZkPf7JvB3nfd6CuHQ9yvxs4T9cfQeqb
jfUyT4fIa8TPHSHmfSrY+WWI65WAjd9DPO+Q6J/RTn8MsKO/nfqF9cPtKg+i
P9euvqfoL3VXB++7F5xd0kE9h8Tfgx3M20rx91fWi9zoLzMlzLxckzyXkXel
wc7usLqP4PSFMP07Le9FUYTr/yJ5fjLC++CXPHdG1H2U93lzRL2n6EebGGU/
s8Tfx6Nqf9wnMxxV75vcx2SUei6AM59EVV4x3ljYST9eBluhTubrKDj9Wie/
p6vB9sednD9Z9J9T48vl+2F20f8z+H5lX+2i/jhYG+piv8OS759ZD48V/2+J
MZ8D4NzaGM/Xxnzn3hj3/w5s/BDjeuvA1thu5q8fnHZ1q/cDrO/ppr9XwYlT
3ZwfrYP+UT0cPwas+XuovxWc/L6H78m+WvipxenfJnDu3jj9mIvxTl9c5dsH
vS9y/PAg6vbfcb4PEbBjbi/3HwLr3l7Wt4ITz/cWrJ/a3cvzmVGr/wdltxHk

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVVXtsU2UUv07xMU1scIr4gEskYwMcF+YU0ekFhcnY47Z7dN267bZbu3bd
o4kSzXxdTQgK6opgDIlgdYr8hQ04negfN/jAx6I1MU4UsZN/jEOtj2liYnT9
nXOWfE2am1/O+b7vnN/5nXOWhYd9kSJN047O/Qvfwu/Tzec2zn3S+/cvM+e+
xizjmumlBWwv3QJsTv+jF3D+AGF9R2J5AesfbZHzpQVs/T7vv6KAnetqCBdP
lRWw+QHhuR/syV8Ju0sWlBdwevE9wPboCfhn7yJsVh6DvzbE9okl8E+dI5wb
S8LfvWorsFNyBP55k7B+pAZYT2zlePzwt55j/5kvYM9dUUv4xCzu99xRy/nO
rEb8sVp+L2Mg/mcJu5OTaxD/u4S18tOrwOdt2yQenLcjgitWIv5RwtrUGN5z
3yasBy/H+fzZbcI3zjvhOuED9sxTdVyvEO7LvVnHfO5Afp5pwk71LuL/0nq+
fxTvZZ+sF/5uBL9vMPaux3vGmXrOr47iv7iB36+Ef2pdg8KP9W2D8A1+nAWN
FF+yei3iXdMo/ICvXKCR9TICnPy6UfjE+XSRxfU+A5xdbbF+TNyn+S05vw7x
Psb+o49Xgc//CLuzP64Hn+Ve5qP4Fuih2ct6eP4mxP+IV/jA/c5hr+i5Enyu
8Ikd2PT6pD44n3zQx/ctgj39qk/0hfiyn/P5kS9xv93QxPdvAE490CT9AX/3
5XmM/POTKtb/bpJ6gr/M9mbm/yTsuRebJT5gzyfNzH8Q2PyzWfoN57UDLVJ/
YONkC+vzBtTb/k3wWAXivbaV+S2D3d08j3G/9X6rxAd/55dWzr8EOHO1X+qH
/HOb/Eo+nkE/852Hf3rGL/kDZ69sE/0Da2ab6A/Y6G+T+UTx71NxfmGA73PQ
T3p1gOM/THruC4j+4e/sCSj9nHknIPzhvLmhXfhCPyZ72yU/2NPPtIv+cD47
0S75wq6dbRd9wZ4Kdcg8Rj7u7g7hH/zkxzuU/PVch5wHtoqDCn+5J4JSf+Tj
ORYUfdJ8+y6o9Hfyok6pF3B6bafCh5HplHxRb/ubTtEf4ktd0KXU363okvlN
em7r4nlbRf021SV8wZ45r1v6mfS8qpv9x0nPrd0c3z6cN51ufn8n+kcrt5nv
WpoPTbbUl/rvYVv4pf57zZb5DqyXhlgvp4AtK6TML2ckxPFsp3hfCcm8o3g/
C3G+B5F/sj4s8YLv9P1hhf/sS2HOdxOwNhlW9GP8FRa+ic/7epT78wd7FLv+
cY/Um/TwR4/sF+rH63v5fS+w54Vemeeor/lhr6KvZL5X5iHtu2siyrzI3h0R
f2D7vYjMH5oXP0fkfeTnLoqKPmnfbYwq/aEPRGWeUL/9FFX2Ua6kT94nPd/Z
J/ub9BzvU+PfK/4TNC8WxpR4jNtjsj8Rjx2NybzA/kylYnI/7evjMckP/tat
cfZfDOz0xBV75um4zA/a12/FpT543/NDXPqb5oXdL/sO+yS7q5/5Pw59aeP9
0j/Axvf9ok+ad5ckWE9F1G87E1zvPaTvownm8zL0h3U6IfuQ+vHCAa6PAXvG
GGC9dVG/vT7A+VTAnjw1IPsM+zB9/iD5Rw8Ba22Don/s59RXg8p+dbUh9i+F
f37lkNQf/nrLkPTrzYj30SGeV/din+f+FVwJ7CkblnyBTd+w9DfOJx8Suxc4
fWgeV5n/A+RmBNU=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlWtsU2UYx4/TieIHK05xiniIODaGozAvMJge0DE2djntLl23bjtrt67d
pWuiRDNvR5IFBXTHW8wSwYMX5BM24HSiJg1eUFy0fnGiiJ375hDrZWpIiK7/
53mWnCZN88vz9nn/7/95nvddERzy9uQoinJ0/pv9zX6+rDi3Zf7HHsu/VZv/
dc8RJycn1Swbt2wDqyOz4Mx+4uTy3JVZVj9f4IIs638Qp1+Pr8qyuayS2LNh
dZa1T4UnsD7+G7FWeqwwy3b+dso3VwhO3bdd4livxIiN0ROIW+c4Pn0B8eT1
VeD5DzijEdvxj26D3v4q1pchvS9ViR7E09dW0/rKacRd9xCbeSWkP1LN+iJu
6H+e2AiHwfaHsv5IMfzctEPyrYGfPcRKUQD5rVGOx8tJ//s7RD/Ol5mR9WfA
ZrCG8p/YCX8T+2pEH/6ffpfYmDiA+rima7g+IzifdlUt+bV4Cpx6ulb8LIK/
79Q69nOfJVYDo4gbV9QxX43zWOvrpF9wXv0Hjh9ZBD/M3Hre7+V10LuW2Jy9
BvG0X9izFn5+x1xejfV2jk56pkLg1Bpd6g1WfLrkL4XeJ3X2I3YX/PxPl/OU
wc8iD9djxQb0Q6OH63foDuh/3MP+a8hvHhY2EXet8nK9LmI/zePleswhHn/E
y/1airj9ppf9qgenvvbKPKyHn3UNrH8p9rMebhD/EE++1sDzOQZ/MpPE6eE8
+Kf+0yD1KYG/OxuFyd9XG8UPsOsUx0f6wdpfjTIPyK/sbxJ/EHefbOJ67EF+
4/cm8R/rrZuapf8RT1YsMP6vf9IsfmC9eb6Z5+cw6b3BJ/7ivOmtPvEH612D
Psf+9qyP/Tl5O/y8rkX8Bytai/QT2N0n/A3N34st0u/gzBK/MOZbLffL/YW4
3uuXeQabz/m5Xj5w4gM/66lE/2tlrTx/y5Ev3r3AiNvPtkp+cGqilf0cRj5l
RvgC4lZXG+vbSv7ubZP9qB/G2+Q+QFxNt4lesL44IP5iffqpgPiHuOtYwFE/
7ceA3E80j4va5T4G2+va5Txgd6Jd7lfU2/i+nfdLgq3LOuS8WJ8s6ZB5QzzT
IvEEzdtUB++/jO6LSzqlP6mfiztl/qifm5krD2K9ZnZKf6OflCKDz7sb7G4w
2J/zWG885mTrLYP93gVWC7q4/06Bdb2L+/Nfut+Gu8Rf0vtGl9QLnP5K4hq9
F7VBqS/6034o6JiH1MGg9BdYmQxKPurnv4NyXuRLPhiSepOfB0KO+Ve/CDn8
1P8MSX7y++Zufh8qwK5Xuh3+ap91s94yxOOZbtaTAz/tG3tkvsGp+5mnj9P9
9nGP3Fdg69ceua9J/9Kw9D/p3xLm+y6f9A+EJT848YvwA9QPeb2Sn/Tf2+vU
H+3l+Rgn/S9wfMxP/bEkIu8X3XebI9Iv1M/hiLx3qIdlReQ+on4+HnHUQ98Y
5f4rpv4IRTn/PtL/TFTmifS/F3W8N66fo47+so0+6cc74e+ePpk/vDfKeJ+8
7/T+/dTH5ztN/l/ZL/qxPrNbuB751KMLcbyX+pl+uU+w3rx8gPPnYn3CPeB8
/94e4Pd5ht6/0wNyXuSzLx2U+t0NvS2D0q9g69tBPs9Zeq+VmMw7OLM6JvcT
1qtNMZnvjdD7RIz3q8H7nr4Yk3kEuwqH+P8Fm6HXOyTztAl6Hx2S+wlsH5L4
rjLtf0Fl+nU=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwdz3s41Ikex/FZ7VYPm0ZlNyeH4eipTj1rstFt1fxYVie7zSa3dDRHSybU
hOQyMkVELkNZsdSUSmWrETsblR3l1kWNpVhKk5LbTw2Hkwjn2+f7PN/n+7y+
/70t/PZs9tfjcDj5tB8vjUazh2WmhC6V1dZugo+PcfLkafnT+Q4wf6GEZSaG
WseCt8CiTeQPjhYmVQGwPIo8fly80jgKVheSx7pK3MVHYV0D+b3dWNitApg3
Sh5NcsgyUsJCy70s8641Rel/G5a5kv+3pOlheTOsjCCPRC8YmNUNaxXk4fs7
DPzew9z75P+a/rpEZbDlowUj5KGQ4e/0zWCJeSjLDFZ+E+DLhxUbyLrZhxOu
OcCaMPJbUcOZ6e4w5yT5TYlx1dadML+ePKDn+/xKFCwaIrNu5yf0UmG5aRjL
9J99s8DzJKx2JveN2K0pVsI6CbnXOc5r6jbM+4Xck1MX4fYYFtaQu3tmZxd1
w7K35NervUrH38NKk3CW6UpRNG763B39juRX7T1vC81g7m7yy2XLDUf5sOAE
uTM2apmrIyy5TX7xsOpfCndYwZK15vri4Z2w5ot9LPNcsjnJJRrmMOSOqrxz
+akwP4j8bM7LO7qTsCib/HTH0s5vS2D5H+T2sjBO7h1Y3Utu++ym2cBjWDc3
gmX+8vjUnumBeevIrUWuPtljsDCQ3DJ6PKr3cw/0Z5GfbHiWY28OK2+SH+ct
VGUuh7Wvyc39Ic1djjDXaD/LNH2jGlrtAQvWkv9Mm+SmB8ISf3Jjh7N1ZzSs
yCBrrDO+t0uDNeXkR7KWoJRTMOcV+WGjeUpHCcw3jGSZBsvACzbVsGgV+UGY
sjbxCSz3I9+vHn3V1gOrU8n3jJlp1uOwTkW+G5BsET/LE/0vyPW/N65vMYeF
BlEsUzfzb75LbWCZLbnW208a9y2s3E6uuXQpr8kD1iaTq8eHri8Sw9wy8h3X
tS0xMbCgg3y7IH7kURosmRnNMlVv7s+1UsAKG7J6/TybyGuwZhv5D/k24YNq
mJNErnxxdjevBeaXkG/ZDKSG98KidvLNeNvi+nFY/lkMy9xojr1rauiFfmty
xcLabgkP1nmTyyMMp9fYwLwE8vU6DysTJ1h4hfz7/FMOIZ6wrJWsEneLqsSw
Uk/KMr9VWMcZS2HtMnKZQWSBOB3mepJLt6lv3FLAgoPka5dnthmVwpJicsmk
cNS/BlY8Jis35X5R0QJrpshXFS9WGPbBnH/GssyVwSVufh9g/hbyZYfQvSpD
b/QfIP96rCJD3wKWXyAXv9K74vs1rP6TfMl244NrTrDuA/li4rG+6V4wb9EB
lrnQ0j7TZxcs/JFctNhq0VUpLIshn48KdpqWASvPkc/dK9vheRrWPiKfXTBx
sLgU5o6RC4OdFFM1sMAqjmXO3EqrdGuFJT+QTxs+eVrUBysiyYrtZuPjH2DN
GfIpZYCJcPZW9DeQT35ydeVZC5j/jlyw+Z376NewyELGMvmF68NdnWH5RvIv
w0lZCi9YvY+c56RRDu+CdafIuT/Pf+QSC/PukU90iwbyM2DhMDln1UWDwdOw
zOwgy/ycPLjEqQxWupCz21a75NbC2lDy8aWHAgZaYW4B+Zj0XgLTDwvqyFkN
cwqzJ2DJIDnTzKeqd7YP+hccYhn5nsLn9pawxomcoe6fyFwBcyTkdKMVpq+d
YX4eOc1PumaNNyyqJqeWVnulB8HyN+Sjn87a3xkLq+fHs0yKu3u2nRzWOZCT
zxeUppyBeSHkI++6GjvKYGEOOcnlK51NHSyrIifmRhgm/QUr+8mH+yqXtffD
WuMElklYO2Oj9STMFZDjUzeJ47nb0L+LfOhZTlKLJSw5Tj74lfbcUltYUUmW
xS2ujvsO1vSQ4zSSziZvmDP3MMscsCjnLA6G+fbk2NBPzKUHYNFOsvTOBnuN
HJZnkmPmZflYFcLqG+Ro/7aoyN9gXRc5SmV54kEdzOMmskzkjCAVrw0WriHv
9yptDmdh2U/kiIvjQ/WTsDKdvG/M0ejvRv9G/3Vy+MZU673/gLkvyWH5zd/X
2MKCWUksEzpgGmziAktWkveu808J2Qor/kOWZFy+UBUMa46S92hHao3jYI6K
vHv5ui5xJszXkkMOJU6rLIRF+kdYJrjpocUcFSxfQQ6y+lIQUA+rfcm79m33
rWiDdUfI4toiqeEAzCslB36py/ObgoXPyDsDV5WrjHzRPyOZZQLKZS36VrBy
Odlf/+6Irx2s9SH/5GM0r9TFV/B/bQTs4w==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
GUn6P3NRtBk=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.794688*^9, 3.830112*^9}, {0, 121.1359300775053}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"Royal Caribbean\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Carnival\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\""}, 
        "EntityTraditionalFramed"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8169585135321703`*^9, 3.816962362101577*^9},
 CellLabel->
  "Out[344]=",ExpressionUUID->"e871ed86-a250-422d-96bd-b34051ba909c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "noticed", " ", "one", " ", "of", " ", "the", " ", "forcasts", 
     " ", "was", " ", "non"}], "-", 
    RowBox[{"linear", " ", "and", " ", "double"}], "-", 
    RowBox[{
    "checked", " ", "it", " ", "to", " ", "be", " ", "the", " ", "Carnival", 
     " ", "forcast"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "UPDATE", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "Carnival", " ", "forecast", " ", "is", " ", "no", " ", 
     "longer", " ", "in", " ", "the", " ", "SARIMA", " ", 
     RowBox[{"family", ".", " ", 
      RowBox[{"I", "'"}]}], "m", " ", "not", " ", "sure", " ", "what", " ", 
     "happened"}], ",", " ", 
    RowBox[{
     RowBox[{"I", " ", "just", " ", "re"}], "-", 
     RowBox[{"evaluated", " ", "the", " ", "notebook"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.816053351951126*^9, 3.81605341413101*^9}, {
  3.8164850908363256`*^9, 3.8164851477529798`*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"96bf23af-d131-4836-a190-b45b4eed2669"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cfd", "=", 
     RowBox[{"FinancialData", "[", 
      RowBox[{
       TemplateBox[{"\"Carnival\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
         "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\""},
        "EntityTraditionalFramed"], ",", 
       NamespaceBox["LinguisticAssistant",
        DynamicModuleBox[{Typeset`query$$ = "April 1,2020", Typeset`boxes$$ = 
         RowBox[{"DateObject", "[", 
           RowBox[{"{", 
             RowBox[{"2020", ",", " ", "4", ",", " ", "1"}], "}"}], "]"}], 
         Typeset`allassumptions$$ = {{
          "type" -> "MultiClash", "word" -> "", "template" -> 
           "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
           "Values" -> {{
             "name" -> "DateObject", "word" -> "the input", "desc" -> 
              "a date", "input" -> "*MC.%7E-_*DateObject-"}, {
             "name" -> "GivenName", "word" -> "April", "desc" -> 
              "a given name", "input" -> "*MC.%7E-_*GivenName-"}}}}, 
         Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
         Typeset`querystate$$ = {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.7763901`7.341624982418914, "Messages" -> {}}}, 
         DynamicBox[ToBoxes[
           AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
            Dynamic[Typeset`query$$], 
            Dynamic[Typeset`boxes$$], 
            Dynamic[Typeset`allassumptions$$], 
            Dynamic[Typeset`assumptions$$], 
            Dynamic[Typeset`open$$], 
            Dynamic[Typeset`querystate$$]], StandardForm],
          ImageSizeCache->{301., {10., 20.}},
          
          TrackedSymbols:>{
           Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
            Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
         DynamicModuleValues:>{},
         UndoTrackedVariables:>{Typeset`open$$}],
        BaseStyle->{"Deploy"},
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"cfit", "=", 
    RowBox[{"TimeSeriesModelFit", "[", "cfd", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"for", "=", 
     RowBox[{"TimeSeriesForecast", "[", 
      RowBox[{"cfit", ",", 
       RowBox[{"{", "100", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cfd", ",", "for"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8160531225701733`*^9, 3.816053203983022*^9}, {
  3.8160532360185533`*^9, 3.816053267112322*^9}, {3.8160952396578445`*^9, 
  3.81609523992655*^9}, {3.8160952710302*^9, 3.816095288682393*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"c1474e0b-df9c-45f3-998c-a19dcec186cb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeriesModel",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], {FontFamily -> "Arial"}, StripOnInput -> False]}}, {}},
              AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], {FontFamily -> "Arial"}, StripOnInput -> False]}}, {}},
              AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Family: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ARIMA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
                  "SummaryItem"]}]}, {
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3794688000", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3816633600", "SummaryItem"]}]}, "RowDefault"], 
                "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["178", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Candidates: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Criterion: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"AIC\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TimeSeriesModel[Automatic, {
    TemporalData[TimeSeries, {{{
        Quantity[8.800000190734863, "USDollars"], 
        Quantity[7.96999979019165, "USDollars"], 
        Quantity[8.489999771118164, "USDollars"], 
        Quantity[10.210000038146973`, "USDollars"], 
        Quantity[11.300000190734863`, "USDollars"], 
        Quantity[11.989999771118164`, "USDollars"], 
        Quantity[12.420000076293945`, "USDollars"], 
        Quantity[11.5, "USDollars"], 
        Quantity[12.510000228881836`, "USDollars"], 
        Quantity[12.380000114440918`, "USDollars"], 
        Quantity[11.850000381469727`, "USDollars"], 
        Quantity[12.5600004196167, "USDollars"], 
        Quantity[12.220000267028809`, "USDollars"], 
        Quantity[11.84000015258789, "USDollars"], 
        Quantity[11.640000343322754`, "USDollars"], 
        Quantity[12.170000076293945`, "USDollars"], 
        Quantity[11.90999984741211, "USDollars"], 
        Quantity[12.979999542236328`, "USDollars"], 
        Quantity[14.460000038146973`, "USDollars"], 
        Quantity[16.690000534057617`, "USDollars"], 
        Quantity[15.899999618530273`, "USDollars"], 
        Quantity[13.930000305175781`, "USDollars"], 
        Quantity[14.34000015258789, "USDollars"], 
        Quantity[13.09000015258789, "USDollars"], 
        Quantity[12.819999694824219`, "USDollars"], 
        Quantity[13.529999732971191`, "USDollars"], 
        Quantity[14.210000038146973`, "USDollars"], 
        Quantity[13.850000381469727`, "USDollars"], 
        Quantity[13.1899995803833, "USDollars"], 
        Quantity[12.260000228881836`, "USDollars"], 
        Quantity[12.270000457763672`, "USDollars"], 
        Quantity[12.779999732971191`, "USDollars"], 
        Quantity[14.720000267028809`, "USDollars"], 
        Quantity[14.109999656677246`, "USDollars"], 
        Quantity[14.149999618530273`, "USDollars"], 
        Quantity[14.600000381469727`, "USDollars"], 
        Quantity[14.460000038146973`, "USDollars"], 
        Quantity[16.280000686645508`, "USDollars"], 
        Quantity[17.239999771118164`, "USDollars"], 
        Quantity[15.930000305175781`, "USDollars"], 
        Quantity[15.739999771118164`, "USDollars"], 
        Quantity[16.799999237060547`, "USDollars"], 
        Quantity[16.8700008392334, "USDollars"], 
        Quantity[17.25, "USDollars"], 
        Quantity[18.479999542236328`, "USDollars"], 
        Quantity[21.510000228881836`, "USDollars"], 
        Quantity[24.90999984741211, "USDollars"], 
        Quantity[23.040000915527344`, "USDollars"], 
        Quantity[20.59000015258789, "USDollars"], 
        Quantity[17.440000534057617`, "USDollars"], 
        Quantity[19.979999542236328`, "USDollars"], 
        Quantity[19.440000534057617`, "USDollars"], 
        Quantity[20.420000076293945`, "USDollars"], 
        Quantity[19.09000015258789, "USDollars"], 
        Quantity[18.81999969482422, "USDollars"], 
        Quantity[17.829999923706055`, "USDollars"], 
        Quantity[17.229999542236328`, "USDollars"], 
        Quantity[18., "USDollars"], 
        Quantity[16., "USDollars"], 
        Quantity[16., "USDollars"], 
        Quantity[15.779999732971191`, "USDollars"], 
        Quantity[16.780000686645508`, "USDollars"], 
        Quantity[16.420000076293945`, "USDollars"], 
        Quantity[16.360000610351562`, "USDollars"], 
        Quantity[15.880000114440918`, "USDollars"], 
        Quantity[15.609999656677246`, "USDollars"], 
        Quantity[14.569999694824219`, "USDollars"], 
        Quantity[15.319999694824219`, "USDollars"], 
        Quantity[14.579999923706055`, "USDollars"], 
        Quantity[16.15999984741211, "USDollars"], 
        Quantity[15.279999732971191`, "USDollars"], 
        Quantity[15.039999961853027`, "USDollars"], 
        Quantity[17.479999542236328`, "USDollars"], 
        Quantity[15.779999732971191`, "USDollars"], 
        Quantity[15.470000267028809`, "USDollars"], 
        Quantity[15., "USDollars"], 
        Quantity[15.1899995803833, "USDollars"], 
        Quantity[15.140000343322754`, "USDollars"], 
        Quantity[14.800000190734863`, "USDollars"], 
        Quantity[14.800000190734863`, "USDollars"], 
        Quantity[13.75, "USDollars"], 
        Quantity[14.329999923706055`, "USDollars"], 
        Quantity[14.649999618530273`, "USDollars"], 
        Quantity[14.34000015258789, "USDollars"], 
        Quantity[13.880000114440918`, "USDollars"], 
        Quantity[13.069999694824219`, "USDollars"], 
        Quantity[13.739999771118164`, "USDollars"], 
        Quantity[14.020000457763672`, "USDollars"], 
        Quantity[13.779999732971191`, "USDollars"], 
        Quantity[14.220000267028809`, "USDollars"], 
        Quantity[15.4399995803833, "USDollars"], 
        Quantity[15.819999694824219`, "USDollars"], 
        Quantity[15.1899995803833, "USDollars"], 
        Quantity[15.220000267028809`, "USDollars"], 
        Quantity[15.470000267028809`, "USDollars"], 
        Quantity[14.680000305175781`, "USDollars"], 
        Quantity[14.40999984741211, "USDollars"], 
        Quantity[14.600000381469727`, "USDollars"], 
        Quantity[14.539999961853027`, "USDollars"], 
        Quantity[14.649999618530273`, "USDollars"], 
        Quantity[16.139999389648438`, "USDollars"], 
        Quantity[15.890000343322754`, "USDollars"], 
        Quantity[15.279999732971191`, "USDollars"], 
        Quantity[16.1200008392334, "USDollars"], 
        Quantity[17.209999084472656`, "USDollars"], 
        Quantity[16.479999542236328`, "USDollars"], 
        Quantity[16.510000228881836`, "USDollars"], 
        Quantity[16.709999084472656`, "USDollars"], 
        Quantity[17.579999923706055`, "USDollars"], 
        Quantity[18.530000686645508`, "USDollars"], 
        Quantity[18.290000915527344`, "USDollars"], 
        Quantity[17.65999984741211, "USDollars"], 
        Quantity[17.8799991607666, "USDollars"], 
        Quantity[17.690000534057617`, "USDollars"], 
        Quantity[17.850000381469727`, "USDollars"], 
        Quantity[15.930000305175781`, "USDollars"], 
        Quantity[16.459999084472656`, "USDollars"], 
        Quantity[16.239999771118164`, "USDollars"], 
        Quantity[15.3100004196167, "USDollars"], 
        Quantity[14.289999961853027`, "USDollars"], 
        Quantity[14.40999984741211, "USDollars"], 
        Quantity[14.130000114440918`, "USDollars"], 
        Quantity[13.739999771118164`, "USDollars"], 
        Quantity[15.069999694824219`, "USDollars"], 
        Quantity[15.3100004196167, "USDollars"], 
        Quantity[15.069999694824219`, "USDollars"], 
        Quantity[15.180000305175781`, "USDollars"], 
        Quantity[15.029999732971191`, "USDollars"], 
        Quantity[15.15999984741211, "USDollars"], 
        Quantity[14.960000038146973`, "USDollars"], 
        Quantity[15.1899995803833, "USDollars"], 
        Quantity[15.989999771118164`, "USDollars"], 
        Quantity[15.609999656677246`, "USDollars"], 
        Quantity[15.6899995803833, "USDollars"], 
        Quantity[15.210000038146973`, "USDollars"], 
        Quantity[14.029999732971191`, "USDollars"], 
        Quantity[13.970000267028809`, "USDollars"], 
        Quantity[14.020000457763672`, "USDollars"], 
        Quantity[14.079999923706055`, "USDollars"], 
        Quantity[14.149999618530273`, "USDollars"], 
        Quantity[14.609999656677246`, "USDollars"], 
        Quantity[14.479999542236328`, "USDollars"], 
        Quantity[15.1899995803833, "USDollars"], 
        Quantity[15.359999656677246`, "USDollars"], 
        Quantity[14.029999732971191`, "USDollars"], 
        Quantity[13.760000228881836`, "USDollars"], 
        Quantity[12.300000190734863`, "USDollars"], 
        Quantity[12.979999542236328`, "USDollars"], 
        Quantity[13.710000038146973`, "USDollars"], 
        Quantity[13.550000190734863`, "USDollars"], 
        Quantity[13.710000038146973`, "USDollars"], 
        Quantity[13.34000015258789, "USDollars"], 
        Quantity[14.180000305175781`, "USDollars"], 
        Quantity[13.819999694824219`, "USDollars"], 
        Quantity[19.25, "USDollars"], 
        Quantity[16.729999542236328`, "USDollars"], 
        Quantity[16.209999084472656`, "USDollars"], 
        Quantity[14.930000305175781`, "USDollars"], 
        Quantity[16.010000228881836`, "USDollars"], 
        Quantity[17.56999969482422, "USDollars"], 
        Quantity[18.049999237060547`, "USDollars"], 
        Quantity[17.59000015258789, "USDollars"], 
        Quantity[18.190000534057617`, "USDollars"], 
        Quantity[17.3700008392334, "USDollars"], 
        Quantity[18.18000030517578, "USDollars"], 
        Quantity[20.229999542236328`, "USDollars"], 
        Quantity[20.649999618530273`, "USDollars"], 
        Quantity[21.579999923706055`, "USDollars"], 
        Quantity[19.979999542236328`, "USDollars"], 
        Quantity[20.149999618530273`, "USDollars"], 
        Quantity[21.15999984741211, "USDollars"], 
        Quantity[22.8799991607666, "USDollars"], 
        Quantity[23.450000762939453`, "USDollars"], 
        Quantity[23.200000762939453`, "USDollars"], 
        Quantity[23.56999969482422, "USDollars"], 
        Quantity[22.690000534057617`, "USDollars"], 
        Quantity[22.31999969482422, "USDollars"], 
        Quantity[21.31999969482422, "USDollars"]}}, {
       TemporalData`UniformTimeSpecification[CompressedData["
1:eJxNlbutFUEQRJ+BRRZk0J/pXwhIWISAgYSFAZERIX134e0x7tWWpqSeqqmp
+fTt59fvf97e3n592L8vP379/vxxP7zmZLeIvMOqcwA7pR8YagJymOQhHCN5
fwZYdrjaqlztqQScPhiUUoJB6TYg59EkOcRIjm7MzazA3Byn3hKj3lIpIxzH
3HqpBQyn3koLkuvy7oGXwnfYTXNaD+W3OeW3a5J8xI2waU7Xofxup/weU5BH
hGEYGZpzAcAwnv6k8vTXWbqx7Efva8Z59O6H+hOGhaZPGBZe6h8Y6STnGZLL
k+Q249yRxly9jHygxQFZ/QjJxwpzNdQxV6uM5I4heU6AbNeJPVCV5pgX5dtJ
yrcIITk9Mdc2LFh1Sep1jcCu3I5ikLvRDY+mXs+iXn9tEbBPcu443Tg61LtG
Uu/xZBjOCYbhhNONs3eW5A00yRs7kEOCYYg9QsyNI5Qfpyk/ohiGyGQYdpHm
pAjlpwzlpxbDkJYMQ1438oGplJ85lJ/VDEN2MQw5QXPKlPLLhfLLm9lYQcxG
RdKcaqP8GqH8vd/MRkszG61JczqUejuGYehshqHv3vwPR5x6R5V6x4Rh2DNg
GOaO7DtMp94po95pYRi2KBmGuZf/Qb1sBXQU48KDYnxBFOPCaIRBpVmMupuG
fFVhMepihGHhwBzdN2RIDhbjGsdiVC0W48KBObsFFqOashjVjMWo5ixGvb15
YLIY1YrFuEaxGNWGxai+zwbm3jY/0FmMW94sRt3DRjZeO6Q53uxJ9WFPrlr2
pN7n+UBTmnMOe1IveYDJntTlMhunleaEsCf3wWFPahh7UuPqtgcmi1GjWIx6
h+6Bw2JcrUY30liMms5i3D2xGDWDxbg3319u/AUovaRb
        "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
      ValueDimensions -> 1, DateFunction -> Automatic, 
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
       TemporalRegularity -> True}}, True, 12.], {"SARIMA", {}, "ARIMA", {}, {
      "StepwiseStart"[0], 
      Span[0, 2], 
      "StepwiseStart"[0], 0, 0, 0, 1}, {}, 
     ARIMAProcess[0.0707344604750811, {}, 1, {}, 1.1250463087467009`], {
     "Candidates" -> {
        ARIMAProcess[0.0707344604750811, {}, 1, {}, 1.1250463087467009`], 
        ARIMAProcess[
        0.0707344604750811, {}, 1, {-0.027502848313470264`}, 
         1.1241042764254667`], 
        ARIMAProcess[
        0.07267985961206241, {-0.02750284831347026}, 1, {}, 
         1.1241953162199332`], 
        ARIMAProcess[
        0.06907167268116246, {0.02350746415185311}, 1, {-0.0845341170805199}, 
         1.1247015972348806`], 
        ARIMAProcess[-0.0010230541127686165`, {-0.059164400519932284`}, 
         2, {-0.8888727048544021}, 1.259191607746067], 
        ARIMAProcess[-0.0011134175958811086`, {-0.15271740346004378`}, 
         2, {-0.7886719956449206, -0.08871325290115041}, 1.259287904295216], 
        ARIMAProcess[-0.0009624017393624531, {-0.07733300349973211, 
         0.08096179633787157}, 2, {-0.8833866454257777}, 1.2818115347595083`], 
        ARIMAProcess[-0.001082584486255726, {-0.18094851891570773`, 
         0.06015252769079542}, 2, {-0.7943246908861584, -0.08295336101673373},
          1.272968325298628], 
        ARMAProcess[
        1.3586502933030262`, {0.9134605259708103}, {0.09590261785401476}, 
         1.3445051987911434`], 
        ARMAProcess[
        1.6488351806364165`, {0.41714938216400094`, 0.47782776537982635`}, {
         0.5614172437296597}, 1.3506473332318094`]}, 
      "AIC" -> {24.97270726884837, 26.823600522425608`, 26.838015935279746`, 
       28.91816013543752, 49.02364823566139, 51.0372602469364, 
       54.19283232841788, 54.96055584512949, 60.69263929035679, 
       63.50394908465601}}}, {}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.816053195668064*^9, 3.8160532097050653`*^9}, {
   3.8160532470527663`*^9, 3.816053275254282*^9}, 3.816095073033209*^9, 
   3.8160952489791126`*^9, {3.8160952828977613`*^9, 3.816095299740447*^9}, 
   3.8161070062147636`*^9, 3.8161071716964025`*^9, 3.8161094375568037`*^9, 
   3.816109540854933*^9, 3.81648494279418*^9, 3.8165276659172773`*^9, 
   3.8167985832651434`*^9, 3.8168012631212454`*^9, 3.816801317193525*^9, 
   3.8168879719780073`*^9, 3.816888759099921*^9, 3.81689407600844*^9, 
   3.8169585142854805`*^9, 3.8169623624145527`*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"9311f4a5-6ab1-4674-9594-4c2e2a606a17"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
1/UQbB4hm6WVy4eehaXvyUbLrkH267D88jyKf37+5Rk/wWoIWak9tnBVI+xI
I1umtOu1td0wxP8x2V2VXuV6HfYcJDtDD753YwhsrSHru1p2fTIOtr00n+Lv
MeVEhyRYH0K2luzKCc6HnSlkT2Nj2/GLYfcqskuzH8pywJb9ZEdN+bSlm2Hl
Jlm11zfftB/WWi6g+E9F7DryNWwMJEuDy+IuX4PNZLJZ/qDBUwtLK8hGp7At
rZ/B8h6ytnxdZJ+2wxH/dbJSf+fRGH/Y0byI4s8J2ZAyCHYFk93XipWicNiT
SHZGVP/rjwmw9fdkvSK4ZG8ubNtNtvVfOvRCEaxfI1vLLlXfXQ07my2k+FsH
LmtuwO4BZNei+QP898KWBLLjQdU3oadhZQlZTelRNPkKrO0ky6YWMOdH2LhM
lsJOnS15CpuNZHNPp1k7W49A/P0WUfwBOa9W9oDlOLK2ruL4LRlWF5MVvzbZ
/x0NO7aTLYUpL3edBLv+QXbf2XNgSDbs+Q/ZGe83NXY+bA1cTPFXxvvN+Ai2
xZJtITt2rtwI60Vk644Ge/mXsHMr2dMl+unxE7D7ItlVbHx2/RvY8pTsaKh7
t/4OrPT6gOLPD/e0fwJr0WS5urQ0qFUo4p9HlqJrR0V2h83NZPNY6A+ZQbB0
nmwEl6xeosByPVkzagZvtMOqv07xtxt843AGe96cKf6/gh+0/8ri/kX8iPPn
/9t99zO++xnk13c/I/Lhu5+RfPczvvsZ3/0Mqxff/QzG77ufEe/33c9IvvsZ
3/2M737Gdz/ju5/x3c/47mcQ/6/vZ/4HZqjPiw==
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt0mdXDgAABeDXqISU2TJKdoQkW8gKhYwGKqUi7ewRhaISSkopZWWv0w/0
dI4Pz733B9z44prs6omBQGACY/87WsTw1/7Db37xkx985xtf+cJnRvnERz7w
nneMMMxbhhjkDQP085o+enlFDy/pposXPOcZnTylg3baeMJjWmnhEQ95QDNN
3OcejdzlDre5xU1ucJ1rXOUKDdRTRy01VFNFJZep4BIXKaeMUi5QQjHnKaKQ
As5xljPkk0cuOZzmFCc5QTbHOcZRssjkCIc5RAYHOcB+9rGXdPawm12ksZMd
bGcbW9nCZjaRykZS2EAy61nHWpJYw2oSWcVKVrCcZSxlCQksJp44FrGQBcwn
lhiiiSKSecxlDrOZxUwiCGcGYUxnGlMJZQohBBPEZCYx/ut/QJFA2g==
         "]]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzccyQwEAheF7o0SiBVG2XskjWFjycNF79N67BEH03jvfjMU3/5zVaWxu
a2qNBEEQ0kKKeqOBOmpJUkM1VSSopIJyyiglTowSohRTRCEFRAjD/7Nf+eGb
Lz754J03XnnhmSceeeCeO2654ZorLrngnDNOOSHPMUcckuOAffbIkmGXHbbZ
YpMN1lljlRWWWWKRBeaZY5YZpplikgnGGWOUEdIMM8QgA/TTRy89dNNFJx20
8weCzUSm
         "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 
        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
        87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
        103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
        117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
        131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 
        145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
        159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
        173, 174, 175, 176, 177, 178}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwN0EVWQgEAAMCPjYUouvdKHsHnGg+nYGBgY4AdgN3YhV2zmAtMZ3dvVzwU
BEEPffSTIMkAgwwxTIoRRhljnDQTTDLFNDPMMkeGeRZYZIksOZZZYZU11tlg
ky222SFPgSK77LHPAYccccwJp5xxzgWXlLjimhtuueOeBx554pkXyrzyxjsf
fPLFNz/88kcgL0QFlVRRTQ211BGmngYaaaKZCC1EaaWNGO108A9pWkRx
        "]]}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.794688*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.7868256*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         StyleBox["\"Jul\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         StyleBox["\"Oct\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.789504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7920096*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.794688*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.79728*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7999584*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8025504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8052288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8079072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8104992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8131776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8157696*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8211264*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.8235456*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.826224*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.794688*^9, 3.8252736*^9}, {0, 28.393445742332233`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.816053195668064*^9, 3.8160532097050653`*^9}, {
   3.8160532470527663`*^9, 3.816053275254282*^9}, 3.816095073033209*^9, 
   3.8160952489791126`*^9, {3.8160952828977613`*^9, 3.816095299740447*^9}, 
   3.8161070062147636`*^9, 3.8161071716964025`*^9, 3.8161094375568037`*^9, 
   3.816109540854933*^9, 3.81648494279418*^9, 3.8165276659172773`*^9, 
   3.8167985832651434`*^9, 3.8168012631212454`*^9, 3.816801317193525*^9, 
   3.8168879719780073`*^9, 3.816888759099921*^9, 3.81689407600844*^9, 
   3.8169585142854805`*^9, 3.8169623624899445`*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"7ed08f39-f0a5-4f8c-b670-c9bb2f498a5f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.816053421146372*^9, 3.816053467503313*^9}, 
   3.8169585842595167`*^9},
 CellLabel->
  "In[350]:=",ExpressionUUID->"aeb8da13-f258-4e4b-89d6-ab12110293ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "marks", " ", "a", " ", "revamp", " ", "of", " ", "my", " ", 
    "code", " ", "and", " ", "figures", " ", "which", " ", "I", " ", "have", 
    " ", "displayed", " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "A", " ", "website", " ", "was", " ", "used", " ", "to", " ", "import", 
    " ", "ticker", " ", "symbols", " ", "of", " ", "cruise", " ", "line", " ",
     "and", " ", "travel", "  ", "stocks"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"reglist", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://swingtradebot.com/stocks-tagged-as/12139-cruise-lines\>\"", 
      ",", "\"\<Data\>\""}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.816800762371372*^9, 3.816800811020527*^9}, {
  3.8168931298899093`*^9, 3.8168932435936365`*^9}, {3.816958612243701*^9, 
  3.8169586389940915`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"895e296c-b59e-4d65-a90b-0c7602a1db72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"reglist", ",", 
   RowBox[{"x_String", "/;", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"x", ",", "\"\<AGYS\>\""}], "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[352]:=",ExpressionUUID->"6a7f8932-54b0-48db-b155-0b9960bf1d53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "2", ",", "1", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "2", ",", "2", ",", "2"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.816801264293621*^9, 3.816801318088062*^9, 
  3.8168879744766674`*^9, 3.816888760308424*^9, 3.816894077284845*^9, 
  3.81695852311554*^9, 3.816962363627804*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"87991990-294a-4e29-b8ad-db121aa9b40e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"reglist", ",", 
   RowBox[{"x_String", "/;", 
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"x", ",", "\"\<NCLH\>\""}], "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[353]:=",ExpressionUUID->"f528ec51-f730-4cee-857d-81555b184798"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "2", ",", "3", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "2", ",", "15", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4", ",", "2", ",", "16", ",", "2"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.8168012643293858`*^9, 3.8168013181396475`*^9, 
  3.816887974517763*^9, 3.8168887603496504`*^9, 3.8168940773408923`*^9, 
  3.81695852315673*^9, 3.816962363671255*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"2e388f30-dd47-4490-b2d9-11fcef4049e5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Both", " ", "symbols", " ", "show", " ", "up", " ", "in", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "2"}], "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.816893276033623*^9, 3.8168933099216557`*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"c821d28b-0cfe-4b14-b2cd-3811a4bfa660"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"name", "=", 
  RowBox[{"Extract", "[", 
   RowBox[{"reglist", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "2", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"d2c3a0de-7531-4f71-b916-63ceefd9046a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\" AGYS \"\>", ",", "\<\" Agilysys, Inc. \"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" EXPE \"\>", ",", "\<\" Expedia, Inc. \"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" NCLH \"\>", 
     ",", "\<\" Norwegian Cruise Line Holdings Ltd. \"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" TZOO \"\>", ",", "\<\" Travelzoo Inc. \"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" CCL \"\>", ",", "\<\" Carnival Corporation \"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\" CUK \"\>", ",", "\<\" Carnival Plc ADS ADS \"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\" EVI \"\>", ",", "\<\" EnviroStar, Inc. \"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" INT \"\>", 
     ",", "\<\" World Fuel Services Corporation \"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" RCL \"\>", ",", "\<\" Royal Caribbean Cruises Ltd. \"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\" SABR \"\>", ",", "\<\" Sabre Corporation \"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\" LIND \"\>", 
     ",", "\<\" Lindblad Expeditions Holdings Inc. \"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8168012643627524`*^9, 3.816801318191757*^9, 
  3.816887974554967*^9, 3.8168887603931427`*^9, 3.8168940774068604`*^9, 
  3.8169585232067227`*^9, 3.81696236372233*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"e7d0d736-615d-4a2c-be15-a64a6e89f3b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"symblist", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"StringTrim", "[", 
     RowBox[{"x", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "name"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.816801298896393*^9, 3.8168013015133896`*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"c14d926e-8e06-4944-b9f9-495a0dafd918"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AGYS\"\>", ",", "\<\"EXPE\"\>", ",", "\<\"NCLH\"\>", 
   ",", "\<\"TZOO\"\>", ",", "\<\"CCL\"\>", ",", "\<\"CUK\"\>", 
   ",", "\<\"EVI\"\>", ",", "\<\"INT\"\>", ",", "\<\"RCL\"\>", 
   ",", "\<\"SABR\"\>", ",", "\<\"LIND\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.816801264375754*^9, 3.816801318204268*^9, 
  3.8168879745923257`*^9, 3.816888760434579*^9, 3.816894077457945*^9, 
  3.816958523251876*^9, 3.816962363765951*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"0b2b9275-0be2-41a3-931d-fcf27067172b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "wanted", " ", "to", " ", "turn", " ", "my", " ", "list", " ", 
    "of", " ", "strings", " ", "into", " ", "a", " ", "list", " ", "of", " ", 
    "entities"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"entfunc", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<Financial\>\"", "]"}], "[", "x", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"entlist", "=", 
    RowBox[{"entfunc", "/@", "symblist"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8168009461897125`*^9, 3.816800980102213*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"ad7a9064-4863-4624-ab6f-4e8b756618a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Agilysys\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:AGYS\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:AGYS\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Expedia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:EXPE\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:EXPE\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Travelzoo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:TZOO\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:TZOO\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Carnival\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Carnival\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:CUK\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:CUK\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Failure",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              FrameBox[
               StyleBox["\"\[WarningSign]\"", 
                Directive["Message", 35], StripOnInput -> False], 
               ContentPadding -> False, FrameStyle -> None, 
               FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"No financial entity interpretation found. Try \
again.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Financial\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              FrameBox[
               StyleBox["\"\[WarningSign]\"", 
                Directive["Message", 35], StripOnInput -> False], 
               ContentPadding -> False, FrameStyle -> None, 
               FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"No financial entity interpretation found. Try \
again.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Financial\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Failure["InterpretationFailure", 
     Association[
     "MessageTemplate" :> MessageName[Interpreter, "semantictype"], 
      "MessageParameters" -> Association["Type" -> "financial entity"], 
      "Type" -> "Financial"]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TemplateBox[{"\"World Fuel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:INT\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:INT\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Royal Caribbean\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sabre Corp\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:SABR\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:SABR\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["Failure",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              FrameBox[
               StyleBox["\"\[WarningSign]\"", 
                Directive["Message", 35], StripOnInput -> False], 
               ContentPadding -> False, FrameStyle -> None, 
               FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"No financial entity interpretation found. Try \
again.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Financial\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              FrameBox[
               StyleBox["\"\[WarningSign]\"", 
                Directive["Message", 35], StripOnInput -> False], 
               ContentPadding -> False, FrameStyle -> None, 
               FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"No financial entity interpretation found. Try \
again.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
                 TagBox[
                  GridBox[{{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Financial\"", "SummaryItem"]}}, 
                   GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Failure["InterpretationFailure", 
     Association[
     "MessageTemplate" :> MessageName[Interpreter, "semantictype"], 
      "MessageParameters" -> Association["Type" -> "financial entity"], 
      "Type" -> "Financial"]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8168012644060264`*^9, 3.8168013182940626`*^9, 
  3.816887974901291*^9, 3.816888760489607*^9, 3.81689407752555*^9, 
  3.816958523522478*^9, 3.8169623638193226`*^9},
 CellLabel->
  "Out[358]=",ExpressionUUID->"29407194-45a4-48e8-8975-958246b00895"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Weird", ".", " ", "Mathmatica"}], " ", "cannot", " ", "access", 
    " ", "the", " ", "financial", " ", "data", " ", "of", " ", "EVI", " ", 
    "Industries", " ", "and", " ", "Lindblad", " ", "Expeditions", " ", 
    "Holdings", " ", "Inc"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Mathmatica", " ", "even", " ", "failed", " ", "to", " ", "access", " ", 
    "the", " ", "entity", " ", "of", " ", "EVI"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   NamespaceBox["LinguisticAssistant",
    DynamicModuleBox[{Typeset`query$$ = "EVI Industries", Typeset`boxes$$ = 
     "None", Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
     Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.6017938`7.230992702590199, "$TimedOut" -> 4.9071433`8.142373734071255,
       "Messages" -> {}}}, 
     DynamicBox[ToBoxes[
       AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
        Dynamic[Typeset`query$$], 
        Dynamic[Typeset`boxes$$], 
        Dynamic[Typeset`allassumptions$$], 
        Dynamic[Typeset`assumptions$$], 
        Dynamic[Typeset`open$$], 
        Dynamic[Typeset`querystate$$]], StandardForm],
      ImageSizeCache->{156., {7., 21.}},
      TrackedSymbols:>{
       Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
        Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
     DynamicModuleValues:>{},
     UndoTrackedVariables:>{Typeset`open$$}],
    BaseStyle->{"Deploy"},
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Interpreter", "[", "\"\<Financial\>\"", "]"}], "[", 
    "\"\<Lindblad Expeditions Holdings Inc\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8167970791394596`*^9, 3.8167971218431544`*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"45dacb11-6e3e-4da0-9cce-aa478316ed1c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"A network operation timed out. Please try again \
later.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"TimedOut\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Query: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"EVI Industries\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"A network operation timed out. Please try again \
later.\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"TimedOut\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Query: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"EVI Industries\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["TimedOut", 
   Association[
   "MessageTemplate" -> 
    "A network operation timed out. Please try again later.", 
    "MessageParameters" -> Association[], "Query" -> "EVI Industries"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8168012645994406`*^9, 3.8168013183793845`*^9, 
  3.8168879751508703`*^9, 3.816888760551383*^9, 3.8168940775995183`*^9, 
  3.8169585237657075`*^9, 3.816962363885781*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"dd0e7391-ebc8-45b8-ac51-68bf9c96425f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No financial entity interpretation found. Try again.\"",
                     "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Financial\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"No financial entity interpretation found. Try again.\"",
                     "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"InterpretationFailure\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Financial\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["InterpretationFailure", 
   Association[
   "MessageTemplate" :> MessageName[Interpreter, "semantictype"], 
    "MessageParameters" -> Association["Type" -> "financial entity"], "Type" -> 
    "Financial"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8168012645994406`*^9, 3.8168013183793845`*^9, 
  3.8168879751508703`*^9, 3.816888760551383*^9, 3.8168940775995183`*^9, 
  3.8169585237657075`*^9, 3.8169623638996778`*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"4c3484bc-432d-49a7-8084-cdd45c40dc47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"I", " ", 
    RowBox[{"couldn", "'"}], "t", " ", "figure", " ", "out", " ", "why", " ", 
    "so", " ", "I", " ", "just", " ", "deleted", " ", "the", " ", "failures", 
    " ", "from", " ", "the", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"resources", ".", "wolframcloud", ".", "com"}], "/", 
       "FunctionRepository"}], "/", "resources"}], "/", "DeleteFailures"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"entlistfinal", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<DeleteFailures\>\"", "]"}], "[", 
    "entlist", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8167205933591537`*^9, 3.8167205949232206`*^9}, {
  3.816720646147708*^9, 3.8167206573030624`*^9}, {3.816720719987483*^9, 
  3.8167207237617035`*^9}, {3.8167212497793856`*^9, 3.816721255340781*^9}, {
  3.816797143741245*^9, 3.816797175445144*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"ed522dcf-c8b1-4a94-8356-78b56299b3f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Agilysys\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:AGYS\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:AGYS\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Expedia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:EXPE\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:EXPE\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Travelzoo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:TZOO\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:TZOO\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Carnival\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Carnival\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:CUK\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:CUK\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"World Fuel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:INT\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:INT\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Royal Caribbean\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
     "\"financial entity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sabre Corp\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Financial\"", ",", "\"NASDAQ:SABR\""}], "]"}], 
     "\"Entity[\\\"Financial\\\", \\\"NASDAQ:SABR\\\"]\"", 
     "\"financial entity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8168012665770135`*^9, 3.8168013184616904`*^9, 
  3.8168879781250343`*^9, 3.8168887606116085`*^9, 3.816894077671573*^9, 
  3.816958526430814*^9, 3.816962363947791*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"07c52da5-af24-428f-9161-1bf6bb8a1a5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "made", " ", "a", " ", "function", " ", "that", " ", "takes", 
    " ", "the", " ", "entity", " ", "list", " ", "and", " ", "creates", " ", 
    "a", " ", "graph", " ", "for", " ", "each", " ", 
    RowBox[{"companies", "'"}], " ", "financial", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "clstocks", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "listgraph", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"clstocks", "[", "x_", "]"}], ":=", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"x", ",", 
        NamespaceBox["LinguisticAssistant",
         DynamicModuleBox[{Typeset`query$$ = "November 1, 2019", 
          Typeset`boxes$$ = RowBox[{"DateObject", "[", 
            RowBox[{"{", 
              RowBox[{"2019", ",", " ", "11", ",", " ", "1"}], "}"}], "]"}], 
          Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
          Typeset`open$$ = {1}, Typeset`querystate$$ = {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           0.6603113`7.271293722975031, "Messages" -> {}}}, 
          DynamicBox[ToBoxes[
            AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
             Dynamic[Typeset`query$$], 
             Dynamic[Typeset`boxes$$], 
             Dynamic[Typeset`allassumptions$$], 
             Dynamic[Typeset`assumptions$$], 
             Dynamic[Typeset`open$$], 
             Dynamic[Typeset`querystate$$]], StandardForm],
           ImageSizeCache->{156., {8., 21.}},
           
           TrackedSymbols:>{
            Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
             Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
          DynamicModuleValues:>{},
          UndoTrackedVariables:>{Typeset`open$$}],
         BaseStyle->{"Deploy"},
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True]}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"RandomColor", "[", "1", "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "140"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{"{", "x", "}"}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Covid Era Stock Values\>\""}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listgraph", "=", 
     RowBox[{"clstocks", "/@", "entlistfinal"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "listgraph", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.816801034007553*^9, 3.8168010784007874`*^9}, {
  3.816801394288553*^9, 3.8168014111616507`*^9}, {3.8168927603035393`*^9, 
  3.8168927902765255`*^9}, {3.816892874181482*^9, 3.8168929078219533`*^9}, {
  3.8168930294870977`*^9, 3.8168930472868233`*^9}, {3.816893356661986*^9, 
  3.8168933677763824`*^9}, {3.8168934034434996`*^9, 3.816893412922553*^9}, {
  3.8168934456589174`*^9, 3.8168934919151344`*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"69bacd5d-81bd-4c88-93d3-c7f15d1cff77"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.7015338021927047, 0.26469696613851834`, 0.8735439068466535]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.5515624488228787, 0.20185374760720376`, 0.9980450301790378]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.9615938734842853, 0.2557337210395154, 0.34438195193202104`]], 
         LineBox[CompressedData["
1:eJxVl3mMVFUWxh8gMrYaaxxGBFEfUbDZuh90s3T19qoXuumFfr2vQPW+0DSV
uCNqiSG4IDzF0ZAg85AZYJiEqQg9MDiaijOKC2IRjYiiFqCJEdRSBJdoFL5z
PpLqfyq/nPvu/e53lpue1LGipnukYRjjRxjGxd8Lf+GXZ5wJXPzN3bXQvvDr
y50Jjt40uewi273Cwf154NCTwubuMWDvRWFj6kRw7HP9/twX2C/YlSb7v3IO
7K4X9kq2gqP7hc22a/B94qRwfGUm2Lw6Xc9bC448nq56XgbHh9N1/XtgX1zY
ONop+lMsPX9Y9Gdaev6I8ots7LFU/y+IWx8L2yk/gINjZsn3p6uxPtpKPoK4
86GwnbERHL5stsTHDoneNPJh0dskfOFG2M/3sLB9ogXsjcjg9+DY9AzeR/Q2
ZOh994KtsPI2XwX07uL6U4gnUjP1fpvBZq1wcMPzYOf+TM3/ADi8Q9hc809w
5Ijy7oPY33bmqH+BSvi5co6eb4Fjh+eo/vVg46dkdu+eq/uXg6Nb5zLfYPP8
XOoBO+Y8qadDh3B+fItwsKcH7Htjnt5vleg7q+vPvQ4O3Tif9Yr9vJL56vfP
iFuvaXzNafEvofGMs2B3Qpb2w6vgaFGW6ivDfomhLF3/Ljgyzi/+bPpJ9Ab8
6k9M9A762S9Ybz/j5/mS77HZ6sdYyXd+ttZLWPLdn635Gyl6N2bTD8Tdl7LV
rzPSPzk5sl/19ZLvnhzdLyj5dnOYH8n3gRz9fh04/lmO+tcr/dOZSz3oX++J
3KT5ENuXq/5OEP0nlVP2SX9dladxv/T73jzV9wH2Mz/N4/2kv67IZ72VQm9G
PvNdAj9fyGc+iuHn8XzVu6MQei+3qacAei1b9S4JQG+LzXmEePCYrfl4C3F3
VEDn0zs28j8zwPuDE40Bvd+zOdC/OqD5H58NP40Cfp8BP6cV8PtM6K9n/Jo0
6H+wQP2vuAX6/1Gg9ZUxBX6mFqreE5PhZ00hv78V+lcVsn5uhv7thTr/7jSh
P6bxbaFJ8LeqSPU34rzwvUXUNx36txVxflvQ/3aR+rMsHfp/1HhuSir8vatY
89MGfTGvmPUNNt4qpj84zzpXzP6GvuDNC7genHhugfbfaNzPfP0Sww/nuwW8
z23QP7FE62n+NPj5Knk/1oe+KVE/94je8aU6L1LBscJSxsXvoVKtx1cQd8+U
cn4gHr1uofplgBO2sBd6Cfc1ly1UfQnR+5eF1IN4/E9lzCfivrwy7cc00d9X
pvr64H/oqTL2O9j7L9fvRr6s7HLuNwN+dpczH9jf3aDxUK7o/0859eN+iVNc
fxwc7qhg/cDfyLoK6sP38X9XaD9tQX58Jyo0P2twP/vKSq2vo1IPj1bSz6nw
d29l0nnWJ5VazxsQD/5hEesb93FnL2K94L7OR4s43+FHeHQV+3EW9KZX6Xv9
R6nfZnI16jf0QRXnB9Z7Ix2+t+DYDIf5BhuNDvdHP1sPOXyv58LP3xzexw8/
p1ZrPibNRz3UVWv+tqP/nQeq1X8b+4d3knU+3Faj+foV59nVNexHxEP31XA+
IO79vUb9qgLH3qlhP8yGn4tqVf84nOfeU0v/EI8+X6v9uQn+JA7Vcp7AP/OH
WuYH8ypyZx1Z/P1rHf0A+96s47wA29/XsR+wv/FcPf1B3DpYr/l4DPsHv62n
/1jv3tDA+kc8WnyJ8b3z/wb6gfXhrxu0f3aK3usb6S/uGy9opD8yz5Y3Jp3v
nW5Ufw7OhJ9/bqL/YMNuYj2BrQHyEem/p5tY7+DEtc1k9LeZ28z5hbjT28x+
BoefbOZ8BkdebFY9Jah/29+i/XcT9gt1XWLEvfUt3B8c29+ifq7EfsYp8s+I
u+2tqq9A/H28ledJPQy3ch4gbsZbqRfspLTRX6yPP9JG/xD37WlLyp/9cRvn
k/TjmMWcx2Bv1mLeB2xFFnO+It/BDxfreVGwe9kS3hfro2lL2G+IJ5oYj0i/
HV2i50+UeTFiKetT6nn6Uvaf1HODcslWrLfDS1nfqCdjalDvuxZs1QbVn6+x
Pnh/Mrs7gur3arA5pV3r702w47Rrff4o821lO/0VvX9rZ77A8cOM2/JeVHYw
v6hP7+6OpH6Ibe1gfYGNQx3cT+r5fAfvi/2id3Qy3+Lnls6k/jff6Ezy0znb
yf3F7xu79H0oBvs2dyX5a7/WpXr9iIcSXapnJPz0JnSzv8GxIuUTB2S+/a+b
8wrsftXNeS36x/Ww/kV/oEfn3XjRP9jD/cGRL8m3Sz2M7eX+oj+/N1l/f6/2
x7Do36jxTc1SH9f28f2SeZfTx3qReu7p43uHfLhuH+eR1POBvqR8OFn9Wn/T
pT46+3X/daL/iX72k+jf15/03vhO9ifVlxccYD3Ogb+PDbD/8N4YwwN83+X9
+3RA73dM/L9iGfVjfWItuQr7mS9ciuO9dI4v4zzB+vDlg7r/aKyPWIPJ79+/
BvV9PiXv37FB3hf7eaOWM3/zoLdpOesV7L6/XO/zibzXxhD7HZyYNsT5hPVm
/RD7Owt6HxzS8yrwvsd/HWI/gn2pK/T7Kfh/wK5ZwX7C/wOhVSs4n8DedsZX
++3fAeVxplc=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.8024664229218856, 0.2137722143703107, 0.12462788354650156`]], 
         LineBox[CompressedData["
1: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
g/g9FVjbJut7Qfx+2tsm/dL+e+p/3kiaCw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.48163061115586303`, 0.28651640334428286`, 0.137400521843285]], 
         LineBox[CompressedData["
1:eJxVlXlsVFUUxh+bCGIcEUVQ8KEGWpb20QVKaenrRmlp6etCd8rrNl0pkyAC
VfCpQRQEBkENCeAACogGJyxSQMwEBERRx0QtIMsAkhhBHURwSYzid85pcvvP
5Ndz733f+e45546onVvY0FPTtCE9NO3/3zt/zsdjr6fe+fWtX5Rp3vl1JY8D
m5eGTv2fzUZiZ1A72LOGWK+KBvsOEdvul8DBqyrb9VF0Xv9SsHcVsc+TDA50
Euu7+oLDl4lDBQlg/d5ocOBUG9i/Ipr1loND+4jtzilgV4jYOfIt8jH7GxRf
/QLYE2ewni6wtof4zn+w3zhvKHrtvuMpHrmB9FYSO8nLwdbZ8cr3nd4xpHf4
MZzvjyIObQ2DQ2UxrH8I6X0xhvXVkp89Yml9x17ycwxx4NYOsFbCPPwq6XWI
zdh5WdC7M5bPPwAOR8SxviVgvSiO4+vB1uI4zicH7GyP4/OKwP6v46QesuGn
FU/7szaDPR3xfF8LwcEv4/m8nWDtL5W9CybIfYADmydwvAWs357A9bAdbOkT
KX7txjT4t2ki+2mAXSeJta50sHlzIuurAXuGJUi+YF9WgtQT2DiewPW9C2yH
E5R8vUMnST2S3oxJvP99cLh9Evt1E+wfnMjry8Ch1ES5f9Lblij3Q3rfSGQ/
jsDv4KDJzFvovlMmS30ibjSrbK8Vtqm/DjN3HUW96UlJEgdb7iT29wTY8Sax
v/dTfx3k9V1XqF5/SJJ6pf6pS5Z4BvxcmazMj+D+ZKWftcsSX4+4MWAK+5cL
Du+dwv06n/ReJNaXvkd6+6VIvqQ3NoX9PY3vu3an8H1fSoOf51J4/7VU6L3L
5PzWmNBrmKznTAr0Vph83wcRt8+YrH8Z2NsrlfvxG6wPjEvl9YmIh0tTub8u
TIb+F5jdI8F+LY3n3eF4+Dk6jfu3TwL0z0zj/AKIm8+lSb2Mg/53mTvWjYef
Eens/xOIG4XpnG9rJPQ/my5+Pw7923i9pj0J/cFujoC/+RkKO4uYI6vGQP/W
DLn/aOj/IoP9/Bp6XH9281j4+3SmfB96gr5Mmaejof/z7vgI6L+VKff3GPQ/
NpX9/VuHvxunSn7Qr386VfaPhP7futePgv5Hs2S+Ix/zWJbkh7jn1yzxH/p8
Q6ZJ/2F9MH0a9/MerNfaOd45HOu916fx/XiwPvBQtswPrA+b2Vw/WWC9NVvy
J79fzxa/EA89kMP1fwvnu6bkSP3CT7Mph7/nN6D/tRzun1O4D99HOXxf53Bf
xuTpogf77QbhKPjvXT2d62crvhc4MJ3f8/uwP3xluviN/U5trvhB9fBqrsxX
nBf6MJf9XIr8XJdy5X0k/+/J4/NXUz28kif+oX61vXkyX/E940KezAfSf/cM
/n4s1ntjZij+WN/PEL/hj9Mnn/stGfXpj84Xf6h+y/O5XjrAntP54if2+3pa
0s/g4FhL5g/1X6kl+2Og93lL3jP0b+Bfi9/rH9Hf4cgC9qP/RNRDcQHXw5tx
0L+kQPzA+c6OAqnnWPg5qlDiYLOgUO4H+z3PFPJ5gxH3vVMo9QV9wa8KZX7h
fHtGkcwvsHdhkfQH1ge2dDPyD59SWf+jSO4T/vnnF8t7gnjorWLRB3Z9Vizz
BGz+Xiz9hv3axply/2DjxExlvtk3hLdGQe8jJexvBOKBzG7G+dYnJaIP651f
Sjj/QWD/w6Vyf8g/lFaq5OOaUyrzF+t910olf3DwwTKpf7Bmlkn9gY2WMplP
pH+dyuGB5Xyeg37Sk8tZ/w6q58ZyqX+sd9aUK/3sP1Qu/mG/mVghfqEfPfUV
kh/ivlUVUn/YH+yskHwR165USH0h7q2plHmMfAIrKsV/+BPeV6nkr4cqZT/Y
6l+l+Bd6uUruH/m49lQp74V5vkrpb0/fWXJfYN/4WYofhn+W5Iv7ts/OkvqD
Pm/vauX+A1HVMr+pnsuqed7GU791VYtfiPt7zJZ+pnoeM5vX76N6LpmtvMem
M5u/vwz9o0Xa7HcOzYciW+6X+m+xLf5S/223Zb6D9ZE1XC9nwJZVo8wvp6OG
9cwnvW/XyLwjvV/WcL6bkL8nr1b00vu8oFbxP7i5lvNNA2unapX6MW7Xit/k
51N1yvnhTXVKXD9ZJ/dN9XCzTt4X6sdh9fz9ArBrQ73Mc9yvebxeqS9PuF7m
Ib13QxuUeRHMaJD1YPtog8wfmhc/N8j3kV9gsFvqk967VLfSH3qbW+YJ9dtP
buU9Cg1qlO9TPac0yvtN9dzcqOpfK+s7aV4MbFL0GElN8n5Cj+1uknmB99Pr
bZLz6b0+2CT5Yb01qZnXDwE7dc1K3L+yWeYHvdf7m+V+8H3X5Wbpb5oXdou8
d3hPgstb2P+DqC9tX4v0D9i42CL1SfOuXyvXU0/qt2WtfN9rqL53t7KfA9Af
1rlWeQ+pH+9q4/sxEPcbbVxv1dRvH7RxPlGIe860yXuG99DXaw6td28Da2Vz
pP7xPnu/m6O8rwGtndePxPrw6Ha5f6zXZ7ZLv06A3ufaeV7Nw3se+kc4FuyK
mCv5gs3CudLf2O95VuIFYN+2bo43/wOejbls
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.10959069030595248`, 0.8906162815178058, 0.3314946894709814]], 
         LineBox[CompressedData["
1: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
8nu+doT34f0PXzOi/b0UOPrwiPZ3Y4b1L1CHqZ0=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.455459026392077, 0.4694014495474559, 0.4576828922090783]], 
         LineBox[CompressedData["
1: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

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.2930781401683862, 0.4672809976862089, 0.6377269841169335]], 
         LineBox[CompressedData["
1:eJxVlntwlNUZxj8uglLb2VEo5WbXtioBDQsJ5Lrk21xISELyZXO/8pFNspsL
yXaKl6ZQv9oy0IJmkVrLDNJFWrDWgS2IxFu7SkGoVNcZbSRqXaD8I1TXKtbO
2As87/M6E/7J/HjPd85znvO85+ytnUP+7smGYcyZZBjX/l795/zhzsu+q3/d
m19tNa/+dXnvAjuXatqusRkUTu6zweEdWl8Kjj4v7G77IzhxUet7wXZXOthI
2wiOPCRs99wDjo+SRw6DU+fTOd/rYPdXl4DjV+5rv8axbcLRXbvAyaPC5oxj
YFdS+Or/gM0ZHq7/FDicKZysOQU2jgib58bBnvc8XP8jsD19qdQzajugt1U4
WjoJbI2Td53GeGfqMu7vGdGbrjwN45NNy1Qf2PVj4eTwT8DRSRnkDeDEYmHn
5W6w0aD1N8EeJ4N6C9ZC75MZ9CsETi3MFD6zHeyuzeR+joOtTZmc/yLYOZCp
+sGxN8gjnTb8tJZzvqfA4WFhe3QPOPGacDR8Amz8m/WRJ8GRe1dw/d+B43tX
8DxiYPdnKzj/m2DLnSX7O3gInNyTxfPcAHadFnZmVom+T7KYhy2ib0E29bwI
jpZmc/x+sOdkNvO/D2ynsrl/2U9kbo6sN7ZT9Bbn8LxfAqcGlc+BY7Nz6edy
0evLpd7viN6BXOZtmej9RS77Kwq/EzPz5HtvruSzII/65sl59+bp+YLtneQz
lzE+8iL5lhKwOz+f9flgqyef+XMkr5F8rh+RvD6XT32LpL/+Ts64gPshHPBy
vgFw9EEv/SmS/j/mZR6qRP95L88viLrnxpXcX7n0+9PK45jP/f5K6omDrRsK
uP73wE5GgZ5vC/w8rHxHE/x8V8cHGqB3msnzeKQOej2m9l8t9Law7p2Lun2W
9bFvgyNTfDy/7Rgfv8vH9cbAqUYf77vvWtD/gI/6TXDMKGT+v1UGPxcVUs9b
q6G/vpD9u2QV9N9fqOe3Evp/y/HeRSb8XFjE+VNe+OkvYh6eyIP+jawP162A
/v1aD4HjiSK9X7Pgb3Ux5/Pkw9/vF3O/+T7o38f6cGYJ9P+lWPutGPo/L1Y/
MT56Twn1n4C+RLSE+50l+l/9sp4D/VdYv/RGNvR/cxX9D4BTj5HTdmM+96lV
7M+TmM/65yrm65VC6J9fyvHzoc88Ucr9HsL48EfkzZcwPjqnjPfDJnCiqEzv
d+zHGCyjvt+jHrlcxnz/F/X411czD1nglLl6wvfu/tX0N4zvrUd0/BjqyZvL
qfeFIvi5slzfY9EfIh+cjvyEHy7X+7gU+l/4kjHek1eh+wXb3RX6Xor+kQqe
39fA8Wcr6PcUrJ+6wPrLV8BOZyXzcz04tr2S+hbj++Qzldr/2I/rXCX7byfY
/Moarv+s+PtT5bPIk/H0Go6/Gez5G+vhdtF/fZW+N6hHllXxPHaArXeq9Pzh
j3NdNfN1WwX0LqnW9dBvyeZqfd/B4berNX8YH51sMc9GJfTeaalfa6C30eJ7
9Tbqnh9xfFpbDfz8n6V6/PAzrYb9O4y6u65Gz7ca+n9Yw7z4sL7zRA3z8WgV
/LzDz+/7wGaNX/sN34d/4Nfzg77ob/zqFzjxup/5eBzz21W13M+H2H/kPuV0
1OOP1zLft8DP1Jlava/B7n/V6n2A/MXurmM/3i7+/moiu/5cp/rB5qd13O9L
mM94rJ76JqPueaVe/cP89sf1mj/RO6+B5zeCerykgd+fR936U4PeL5KHDxs0
X+DYNxp1v/AnWdjI8/y8HHrXN2q+wNFLjfw+A5yY1cT99YANs0nzLfr7lHPA
9s+bJuw/dVMzv98vfnqbJ9StYLO+z2BnR/MEP2PPN/N9bsH3Zm6L3k/wI9zV
ou856tGHWpiP4+DEaAvzsR3zGReUb8R+Iuta6f8B5Du+rZX3QT38Sh1tpV+/
RN2dbNU8om7NaFNGXpNb27QfJc9H2tRPyfN7beyHbeDw9HbVC44uncieWDvH
z8P7ao+3M49TwZGpHaz3oz/i6R3qN+qpJtYPbkE/OmMd3N9ycGzSWvrnBicX
r+X42WBXw1r1D2w6yl+AjTSb3yfBnlqb/Szr2Zts5nkrOHLAVn/lfrh9nb4H
YMtSvgz9zvA6zhcUvb9m3fCI3tfWUU8bxofXdGpexM97O9k/S+BPYm8n+30P
6saZTq73Bc7T81kn9d2G+eIbAuTN4ueeAPM+R37/nA5wvnSw9UmA5x0Q/Qu6
6I8Fdu3uon5h82SX5kH0p7r0PcX+onO72e9+cKK4m3pOiL/Hu5m3u8Xff7A+
swr7i8/uYV4+lTz7yPtiYPdAj/YjOPZBD/0bl/tiZpDzX5Q8FwTZD02S596g
9qPczzuDep9iP8ZNIe7nVvE3P6Tro5/snpDeb9KPkRD1fACOPxfSvGK8ldNL
Px4AO4Fe5usUOPZgL9/TTeDksV5+P0v0n9fxZfJ+2H30/x28X4mf9VH/INg4
2sf9jkq+32e9Z5r4f0M/83kAnNrSz/NN4nv34X6u/xbYeref820FO9MGmL/d
4JhnQO8PsHlogP5+DA6fHeD3Ifl9P2U9x18HNprWU3+H/J7/63reJ0fk97wx
SP8elt/ziwbpx0KMd9cPar7rofd+jh89iHryP4O8H4Jg18Ihrn8UbPqHWH8U
HN44NGH+6P4hns+CWvP/b5/QJw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.6950504257577579, 0.8999534743119197, 0.4212397801716792]], 
         LineBox[CompressedData["
1:eJxVlmlwFFUUhRsEkSg6YmQTcFDBsA+EEMgCnY1ASEgnIXuAzp6QEKZKUUSB
VgsXFhnXKqsER1HEpXSKRSKI1YUCgojjHxEEaXD5IS6tCC5VluK571D1+AF8
dW+/d9659903IxqWljb3NAxjcA/D+P/fy3+cD8b9mIX/uVPNy38HMseD3aOd
YLOVXAgOPylsJt8Fju4Vjj7/PDj+nbDdshVsN00AO5lrwZEnhINrOsBut4rv
3wX2z+nxYL+Jwm8/Co6tEzaON4K9XcLm2RWi3xN2h+eJ/oSQ4t6if4qwt8VP
+Z+NHYpLBiEeOi1sd68S/X0mKT1vit5aYSexC2ydnKTWC4OdXpPVestF74TJ
ut4qxUZQ9D48WfMn2iNZWz8+NlntPxZsVDA+QfQ6ycrvFtH7BvkR8TNpiqrX
DvGzTNhb8YzoXynsXtwm+l+botUj9rnKL/lT/LRStH4Jr0hR54+J3mMpWv2N
v1JUf5yQ+t87VauX+9JUzb/gpana+lYwVdXvgPi3OVXp6Rb/Dqdq/WdeSFV+
bxF9w6ZJPLxP/M2fpu0fOqiz7Qsbo+tE75Dp2vpu7nTVH8NT4W+XioeHgWMD
07R8LytNuz+BzjS13x7R+xzjb4l/iekqnib+zUxXfpiitz2d50H/2k+nq++P
giP70tlP4GBGhha3WoTNhEqpdyRD8z+2h/nrRf+3GawHvg83ZtJ/cHSDcLDu
BtG/O1P1T4roP5ep679uhtKXIP25c4ba7zqp/5kZmv9W35na906ycDT/LPYP
bJ/Jfp4CP09dyU+G3qtN1Y+jQtAbMlXcGA+9NSb9Hgs/T5hcfwz8vCqL8wPs
js9S9ykZ7FdmsX9GQv9DWaz3HfDTyFb6Em+Dn2OyuR7yA+XZPC/i5upsrheE
/tezeT/BRlKOnGfj/sHwszSH93849D+Qw/okQv/WHFWfjddDfzyH6yfA3+Jc
nqcf/L0vl9/3h/4tudxvIPR/msv6Yf/An7nUPwj+3pOn5tV5cDyax/XwvfFJ
nuq/4zdB/0Vh53wJ9rNvnaXOm3Qj/N00i/4NgL8fz6JerGf9diUOPc7QfNZ3
KPw8kK/ej0PID/+Sz/qI3sGzVb9eFL05s7me6O2arfz6Gxz5cTb9gB53wBy1
fj7YN+dQn+jtmMPziN5n59AvxL2bClQ/rMH+gRkFKn4KbLYVcJ4Mg/6nCqgP
HH2/QDtvKH0u978FfjbPpf9DoH/jXPoPv9z39Lj/zVzVT9+DnYZCzhtwbH2h
1n/eu4U8D84XOFuo+WNeW6T5EX+8SNvP2FnEfgSHvi7S9V8zj+cHRybP43lx
fuureczH/XB6F1MPODaxmP4i36su5v3GeuEvi7ke7k+0p0V94Pg4i/05Anor
Lfb/bdD7oMX3Fffd/dfiecD+6BK+F7ejH+aXcD18b60qUf5m3gr920o4H7Bf
4M5S9ifOY5aUcn7j+/D9pcqfwciPvqriyReQH/+sVNUjG2zPK6MecGR5Ge8r
2H25jP5Aj3+0jOsjHvyjjP0Of2LL5rPeyPdenK+tHzgyn/NZ9P+ux41N5crv
aeDQoXK+3zLPfi3X6hu5pYL6EHfzKpT+DsStj8jnEXd+rqDfondQJdeDX152
JeeB6F1SyX7AeaLnhS//3pJ+uLmK8xZxw6xiv4BDi6tYL9H/TBX9Qf/5/au1
+xzMrGY/Id9qrWa+6H+ymvdV9O+tZr+AzbQavvfgcFMN33vR/0SNdh/i3TV8
D8T/b/TvI/W1qr59pB/W1fJ9h1/+rlrqkX7waumX+J9Qp9XXe6xO65/Ajjru
D33m6TrOM8yvcJ8FPB/uZ3TSAvoDDsUWsH7It08u0L6P9FpIfch3Jyzk94j7
VQtZP/jvHF/IeiE/1mMR45hH3thF7Cd8H6hYpM0T07mSD/+M0TbrCw6V2Vp9
7ZW2tn/kNZt+YP/gqHqeB2xZ9TyPzOMV9dq8j71Sz/5DvnesXvXr2zLfihro
J+Z19N4Gzid5715q4H2W9+5oA7/HvA5daqDfyHfvbtT0+JsbqQccPNzI84Kt
C43sP+hxhjWp93AbOPBCE/sFbB5s0t6HsN9Ev6UfhjQzH+eP5zZr74P9YTP9
lffip2ZNnzuwRWM/q4X1hT/BTj0e+0FnL7FVO09gZiv3R9xsb+X50d/hp1v5
/qPeRv82rb6hjDbOM+xvt7RxP3Ak0sbvRf+eK9+Lv9PbNb+cxnbmS39saOf8
A3u723mf0Y+Bc3o8ai9mffFexdcuVn5+L+/frsXa+xU6o3j/MsTtvh3Uj+/9
RztYb3n/tndwPbB1qkP15z6wc3Un15Pfz6FOrgc23+nk/vj9HD7BuDMK+q9a
wv64E3qrlrAfwJEvlmj5rtHF+Q72x3SpeoxAfrC8i34nQe9qlZ95BOz908X3
AxxIWsr3DGyWLuU8x3rhBxR3bwZHt6r8Lf5I8z/MlYjE
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
     PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Agilysys\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NASDAQ:AGYS\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NASDAQ:AGYS\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7015338021927047, 0.26469696613851834`, 
                    0.8735439068466535]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7015338021927047, 0.26469696613851834`, 
                    0.8735439068466535]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7015338021927047, 0.26469696613851834`, 
                    0.8735439068466535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46768920146180315`, 0.17646464409234558`, 
                    0.5823626045644357], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7015338021927047`", ",", "0.26469696613851834`", ",", 
                    "0.8735439068466535`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7015338021927047, 0.26469696613851834`, 
                    0.8735439068466535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7015338021927047, 0.26469696613851834`, 
                    0.8735439068466535], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Expedia\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NASDAQ:EXPE\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NASDAQ:EXPE\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5515624488228787, 0.20185374760720376`, 
                    0.9980450301790378]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5515624488228787, 0.20185374760720376`, 
                    0.9980450301790378]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5515624488228787, 0.20185374760720376`, 
                    0.9980450301790378], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3677082992152525, 0.13456916507146918`, 
                    0.6653633534526919], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5515624488228787`", ",", "0.20185374760720376`", ",", 
                    "0.9980450301790378`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5515624488228787, 0.20185374760720376`, 
                    0.9980450301790378]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5515624488228787, 0.20185374760720376`, 
                    0.9980450301790378], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Norwegian Cruise Line Holdings\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NASDAQ:NCLH\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NASDAQ:NCLH\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9615938734842853, 0.2557337210395154, 
                    0.34438195193202104`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9615938734842853, 0.2557337210395154, 
                    0.34438195193202104`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9615938734842853, 0.2557337210395154, 
                    0.34438195193202104`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6410625823228568, 0.17048914735967696`, 
                    0.2295879679546807], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9615938734842853`", ",", "0.2557337210395154`", ",", 
                    "0.34438195193202104`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9615938734842853, 0.2557337210395154, 
                    0.34438195193202104`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9615938734842853, 0.2557337210395154, 
                    0.34438195193202104`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Travelzoo\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NASDAQ:TZOO\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NASDAQ:TZOO\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8024664229218856, 0.2137722143703107, 
                    0.12462788354650156`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8024664229218856, 0.2137722143703107, 
                    0.12462788354650156`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8024664229218856, 0.2137722143703107, 
                    0.12462788354650156`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5349776152812571, 0.14251480958020712`, 
                    0.08308525569766771], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8024664229218856`", ",", "0.2137722143703107`", ",", 
                    "0.12462788354650156`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8024664229218856, 0.2137722143703107, 
                    0.12462788354650156`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8024664229218856, 0.2137722143703107, 
                    0.12462788354650156`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Carnival\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NYSE:CCL\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NYSE:CCL\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.48163061115586303`, 0.28651640334428286`, 
                    0.137400521843285]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.48163061115586303`, 0.28651640334428286`, 
                    0.137400521843285]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48163061115586303`, 0.28651640334428286`, 
                    0.137400521843285], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3210870741039087, 0.19101093556285526`, 
                    0.09160034789552333], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48163061115586303`", ",", "0.28651640334428286`", ",", 
                    "0.137400521843285`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48163061115586303`, 0.28651640334428286`, 
                    0.137400521843285]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48163061115586303`, 0.28651640334428286`, 
                    0.137400521843285], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Carnival\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NYSE:CUK\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NYSE:CUK\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.10959069030595248`, 0.8906162815178058, 
                    0.3314946894709814]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.10959069030595248`, 0.8906162815178058, 
                    0.3314946894709814]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.10959069030595248`, 0.8906162815178058, 
                    0.3314946894709814], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.07306046020396832, 0.5937441876785372, 
                    0.22099645964732093`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.10959069030595248`", ",", "0.8906162815178058`", ",", 
                    "0.3314946894709814`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.10959069030595248`, 0.8906162815178058, 
                    0.3314946894709814]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.10959069030595248`, 0.8906162815178058, 
                    0.3314946894709814], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"World Fuel\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NYSE:INT\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NYSE:INT\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.455459026392077, 0.4694014495474559, 
                    0.4576828922090783]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.455459026392077, 0.4694014495474559, 
                    0.4576828922090783]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.455459026392077, 0.4694014495474559, 
                    0.4576828922090783], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3036393509280514, 0.31293429969830394`, 
                    0.30512192813938555`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.455459026392077`", ",", "0.4694014495474559`", ",", 
                    "0.4576828922090783`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.455459026392077, 0.4694014495474559, 
                    0.4576828922090783]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.455459026392077, 0.4694014495474559, 
                    0.4576828922090783], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Royal Caribbean\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NYSE:RCL\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NYSE:RCL\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2930781401683862, 0.4672809976862089, 
                    0.6377269841169335]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2930781401683862, 0.4672809976862089, 
                    0.6377269841169335]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2930781401683862, 0.4672809976862089, 
                    0.6377269841169335], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.19538542677892412`, 0.3115206651241393, 
                    0.42515132274462236`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2930781401683862`", ",", "0.4672809976862089`", ",", 
                    "0.6377269841169335`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2930781401683862, 0.4672809976862089, 
                    0.6377269841169335]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2930781401683862, 0.4672809976862089, 
                    0.6377269841169335], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           TemplateBox[{"\"Sabre Corp\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Financial\"", ",", "\"NASDAQ:SABR\""}], "]"}], 
             "\"Entity[\\\"Financial\\\", \\\"NASDAQ:SABR\\\"]\"", 
             "\"financial entity\""}, "Entity"]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6950504257577579, 0.8999534743119197, 
                    0.4212397801716792]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6950504257577579, 0.8999534743119197, 
                    0.4212397801716792]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6950504257577579, 0.8999534743119197, 
                    0.4212397801716792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46336695050517196`, 0.5999689828746132, 
                    0.2808265201144528], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6950504257577579`", ",", "0.8999534743119197`", ",", 
                    "0.4212397801716792`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6950504257577579, 0.8999534743119197, 
                    0.4212397801716792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6950504257577579, 0.8999534743119197, 
                    0.4212397801716792], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.816801266778348*^9, 3.816801319516514*^9, 3.816801418374201*^9, 
   3.816887983176162*^9, 3.816888761595936*^9, 3.816892795717023*^9, 
   3.8168928547615986`*^9, {3.816892896824187*^9, 3.816892912383762*^9}, {
   3.816893041486807*^9, 3.8168930496261687`*^9}, {3.8168934721263337`*^9, 
   3.8168934957384624`*^9}, 3.8168940786570587`*^9, 3.8169585314633665`*^9, 
   3.816962364877282*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"253f7406-498f-4ff5-9d30-38220141eeac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Now", " ", "that", " ", "I", " ", "have", " ", "my", " ", "beefed", " ", 
     "up", " ", "stocks", " ", "graph"}], ",", " ", 
    RowBox[{
    "I", " ", "will", " ", "now", " ", "remake", " ", "the", " ", "percent", 
     " ", "loss", " ", "bar", " ", "chart", " ", "with", " ", "my", " ", 
     "new", " ", "companies"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Starting", " ", "with", " ", "my", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"clPrice", "[", "x_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ts", "=", 
       RowBox[{"FinancialData", "[", 
        RowBox[{"x", ",", 
         NamespaceBox["LinguisticAssistant",
          
          DynamicModuleBox[{Typeset`query$$ = "November 1, 2019", 
           Typeset`boxes$$ = RowBox[{"DateObject", "[", 
             RowBox[{"{", 
               RowBox[{"2019", ",", " ", "11", ",", " ", "1"}], "}"}], "]"}], 
           Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
           Typeset`open$$ = {1, 2}, Typeset`querystate$$ = {
           "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
            0.4760301`7.129179408087492, "Messages" -> {}}}, 
           DynamicBox[ToBoxes[
             AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
              Dynamic[Typeset`query$$], 
              Dynamic[Typeset`boxes$$], 
              Dynamic[Typeset`allassumptions$$], 
              Dynamic[Typeset`assumptions$$], 
              Dynamic[Typeset`open$$], 
              Dynamic[Typeset`querystate$$]], StandardForm],
            ImageSizeCache->{280., {10., 20.}},
            
            TrackedSymbols:>{
             Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
              Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
           DynamicModuleValues:>{},
           UndoTrackedVariables:>{Typeset`open$$}],
          BaseStyle->{"Deploy"},
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"precov", "=", 
       RowBox[{"ts", "[", "\"\<January 1, 2020\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"postcov", "=", 
       RowBox[{"ts", "[", "\"\<April 1, 2020\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"percent2", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"precov", "-", "postcov"}], ")"}], "/", "precov"}]}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{"percentList", "=", 
    RowBox[{"clPrice", "/@", "symblist"}]}]}]}]], "Input",
 CellChangeTimes->{{3.816801099479494*^9, 3.8168011951811724`*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"fb223e19-235f-4338-b812-23f8ee183f43"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.39281529093341705`", ",", "0.52537423011865`", ",", 
   "0.8370863177411761`", ",", "0.6373676815259632`", ",", 
   "0.8276874894329267`", ",", "0.8312480627719859`", ",", 
   "0.4559442996899956`", ",", "0.48412421246714993`", ",", 
   "0.8078013009233515`", ",", "0.7804824085182805`", ",", 
   "0.7732370533986702`"}], "}"}]], "Output",
 CellChangeTimes->{3.8168012668185077`*^9, 3.816801321336948*^9, 
  3.816887986878988*^9, 3.8168887633341064`*^9, 3.8168940803660655`*^9, 
  3.8169585351882143`*^9, 3.816962366551777*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"dfac2a98-03d3-4a22-bca7-9ab7307044d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"percentList", ",", 
   RowBox[{"BarSpacing", "\[Rule]", "Large"}], ",", 
   RowBox[{"ChartStyle", "->", 
    RowBox[{"{", "\"\<Pastel\>\"", "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "symblist", "}"}]}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"percentList", ",", "Axis", ",", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Pi", "/", "4"}]}], "]"}], "&"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Percent Loss of Stock Value, Jan 1 ,2020 - Apr 1, 2020\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8167222094136734`*^9, 3.8167223008965197`*^9}, {
   3.8167224418619614`*^9, 3.816722483259179*^9}, {3.816722734562606*^9, 
   3.8167228055844545`*^9}, {3.8167228395719595`*^9, 3.8167228485668116`*^9}, 
   3.816722921587879*^9, {3.816722976116268*^9, 3.81672297756721*^9}, {
   3.8168001106707883`*^9, 3.816800169248085*^9}, {3.8168001997024455`*^9, 
   3.8168002036870537`*^9}, {3.8168002683841596`*^9, 3.816800275899638*^9}, {
   3.816800371001642*^9, 3.81680037160387*^9}, {3.8168004238177705`*^9, 
   3.8168004553533545`*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"bcf4290d-92dc-4155-93b0-9570ae212a41"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.45333333333333325`, 0.}, {11.333333333333334`, 
       0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.623]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.761959, 0.470832, 0.940597]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.6666666666666666, 0.}, {1.3333333333333335`, 
                0.39281529093341705`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.39281529093341705`]& , TagBoxNote -> 
            "0.39281529093341705"], 
           StyleBox["0.39281529093341705`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.39281529093341705`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.8153769000000001, 0.5918221, 0.9351216]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.6666666666666667`, 0.}, {2.3333333333333335`, 
                0.52537423011865}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.52537423011865]& , 
            TagBoxNote -> "0.52537423011865"], 
           StyleBox["0.52537423011865`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.52537423011865, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.8750956, 0.6580038, 0.746929]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.666666666666667, 0.}, {3.333333333333334, 
                0.8370863177411761}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8370863177411761]& , 
            TagBoxNote -> "0.8370863177411761"], 
           StyleBox["0.8370863177411761`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8370863177411761, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.9177137, 0.7189139, 0.632918]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.6666666666666674`, 0.}, {4.333333333333334, 
                0.6373676815259632}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6373676815259632]& , 
            TagBoxNote -> "0.6373676815259632"], 
           StyleBox["0.6373676815259632`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6373676815259632, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.9440982, 0.7955892, 0.5942686]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.666666666666667, 0.}, {5.333333333333334, 
                0.8276874894329267}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8276874894329267]& , 
            TagBoxNote -> "0.8276874894329267"], 
           StyleBox["0.8276874894329267`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8276874894329267, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.9584254999999999, 0.877884, 0.5906629999999999]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.666666666666667, 0.}, {6.333333333333334, 
                0.8312480627719859}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8312480627719859]& , 
            TagBoxNote -> "0.8312480627719859"], 
           StyleBox["0.8312480627719859`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8312480627719859, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.9537862, 0.937389, 0.6180996]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.666666666666667, 0.}, {7.333333333333334, 
                0.4559442996899956}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.4559442996899956]& , 
            TagBoxNote -> "0.4559442996899956"], 
           StyleBox["0.4559442996899956`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.4559442996899956, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.9082433, 0.9470851, 0.6986154]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.666666666666667, 0.}, {8.333333333333334, 
                0.48412421246714993`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.48412421246714993`]& , TagBoxNote -> 
            "0.48412421246714993"], 
           StyleBox["0.48412421246714993`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.48412421246714993`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.7952328000000001, 0.8988539999999999, 0.8302508]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.666666666666668, 0.}, {9.333333333333334, 
                0.8078013009233515}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8078013009233515]& , 
            TagBoxNote -> "0.8078013009233515"], 
           StyleBox["0.8078013009233515`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8078013009233515, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.6121903000000001, 0.8099801000000001, 0.9455737]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.666666666666668, 0.}, {10.333333333333334`, 
                0.7804824085182805}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.7804824085182805]& , 
            TagBoxNote -> "0.7804824085182805"], 
           StyleBox["0.7804824085182805`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.7804824085182805, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.623]]], 
          RGBColor[0.431296, 0.709773, 0.927077]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.666666666666668`, 0.}, {11.333333333333334`, 
                0.7732370533986702}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.7732370533986702]& , 
            TagBoxNote -> "0.7732370533986702"], 
           StyleBox["0.7732370533986702`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.7732370533986702, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.45333333333333325`, 0.}, {11.550933333333333`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.6666666666666666, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.6666666666666666, 
              0.}]}], 
           LineBox[{{11.333333333333334`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {11.333333333333334`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{1.3333333333333335`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.3333333333333335`, 
                0.}]}], 
             LineBox[{{1.666666666666667, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.666666666666667, 
                0.}]}], 
             LineBox[{{2.3333333333333335`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.3333333333333335`, 
                0.}]}], 
             LineBox[{{2.666666666666667, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.666666666666667, 
                0.}]}], 
             LineBox[{{3.333333333333334, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {3.333333333333334, 
                0.}]}], 
             LineBox[{{3.6666666666666674`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {3.6666666666666674`, 
                0.}]}], 
             LineBox[{{4.333333333333334, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.333333333333334, 
                0.}]}], 
             LineBox[{{4.666666666666668, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.666666666666668, 
                0.}]}], 
             LineBox[{{5.333333333333335, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.333333333333335, 
                0.}]}], 
             LineBox[{{5.666666666666668, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.666666666666668, 
                0.}]}], 
             LineBox[{{6.333333333333335, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {6.333333333333335, 
                0.}]}], 
             LineBox[{{6.666666666666668, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {6.666666666666668, 
                0.}]}], 
             LineBox[{{7.333333333333335, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.333333333333335, 
                0.}]}], 
             LineBox[{{7.666666666666668, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.666666666666668, 
                0.}]}], 
             LineBox[{{8.333333333333334, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {8.333333333333334, 
                0.}]}], 
             LineBox[{{8.666666666666668, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {8.666666666666668, 
                0.}]}], 
             LineBox[{{9.333333333333334, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {9.333333333333334, 
                0.}]}], 
             LineBox[{{9.666666666666668, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {9.666666666666668, 
                0.}]}], 
             LineBox[{{10.333333333333334`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {10.333333333333334`, 
                0.}]}], 
             LineBox[{{10.666666666666668`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {10.666666666666668`, 
                0.}]}]}, {}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox[
                RotationBox[
                "0.39281529093341705`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {1., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.52537423011865`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {2., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.8370863177411761`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {3.0000000000000004`, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.6373676815259632`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {4.000000000000001, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.8276874894329267`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {5.000000000000001, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.8312480627719859`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {6.000000000000001, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.4559442996899956`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {7.000000000000001, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.48412421246714993`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {8., 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.8078013009233515`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {9.000000000000002, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.7804824085182805`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {10.000000000000002`, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                RotationBox[
                "0.7732370533986702`", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{0, -2}, {11.000000000000002`, 0.}], 
               ImageScaled[{
                 Rational[1, 2], 1}], Automatic, {1, 0}]}, {{}}, StripOnInput -> 
             False]}, {"GraphicsLabel"}, StripOnInput -> False]}, {
         "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.45333333333333325`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Percent Loss of Stock Value, Jan 1 ,2020 - Apr 1, 2020\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"AGYS\"", "\"EXPE\"", "\"NCLH\"", "\"TZOO\"", "\"CCL\"", "\"CUK\"", 
       "\"EVI\"", "\"INT\"", "\"RCL\"", "\"SABR\"", "\"LIND\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.8153769000000001, 0.5918221, 0.9351216]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.8750956, 0.6580038, 0.746929]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.9177137, 0.7189139, 0.632918]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.9440982, 0.7955892, 0.5942686]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.9537862, 0.937389, 0.6180996]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.9082433, 0.9470851, 0.6986154]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[
                    0.6121903000000001, 0.8099801000000001, 0.9455737]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.623]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5079726666666667, 0.313888, 0.6270646666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8153769000000001, 0.5918221, 0.9351216], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5435846000000001, 0.3945480666666667, 0.6234144], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8153769000000001`", ",", "0.5918221`", ",", 
                    "0.9351216`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8153769000000001, 0.5918221, 0.9351216]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8153769000000001, 0.5918221, 0.9351216], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8750956, 0.6580038, 0.746929], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5833970666666667, 0.43866920000000004`, 
                    0.49795266666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8750956`", ",", "0.6580038`", ",", "0.746929`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8750956, 0.6580038, 0.746929]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8750956, 0.6580038, 0.746929], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9177137, 0.7189139, 0.632918], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6118091333333333, 0.47927593333333335`, 
                    0.42194533333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9177137`", ",", "0.7189139`", ",", "0.632918`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9177137, 0.7189139, 0.632918]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9177137, 0.7189139, 0.632918], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9440982, 0.7955892, 0.5942686], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6293988, 0.5303928, 0.3961790666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9440982`", ",", "0.7955892`", ",", "0.5942686`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9440982, 0.7955892, 0.5942686]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9440982, 0.7955892, 0.5942686], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6389503333333333, 0.585256, 0.3937753333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9584254999999999`", ",", "0.877884`", ",", 
                    "0.5906629999999999`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9537862, 0.937389, 0.6180996], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6358574666666668, 0.6249260000000001, 0.4120664], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9537862`", ",", "0.937389`", ",", "0.6180996`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9537862, 0.937389, 0.6180996]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9537862, 0.937389, 0.6180996], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9082433, 0.9470851, 0.6986154], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6054955333333334, 0.6313900666666667, 
                    0.46574360000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9082433`", ",", "0.9470851`", ",", "0.6986154`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9082433, 0.9470851, 0.6986154]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9082433, 0.9470851, 0.6986154], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5301552, 0.599236, 0.5535005333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7952328000000001`", ",", "0.8988539999999999`", ",", 
                    "0.8302508`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7952328000000001, 0.8988539999999999, 0.8302508], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6121903000000001, 0.8099801000000001, 0.9455737], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.40812686666666675`, 0.5399867333333335, 
                    0.6303824666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6121903000000001`", ",", "0.8099801000000001`", ",", 
                    "0.9455737`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6121903000000001, 0.8099801000000001, 0.9455737]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6121903000000001, 0.8099801000000001, 0.9455737], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.623`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2875306666666667, 0.473182, 0.6180513333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.816801266882004*^9, 3.816801321551369*^9, 
  3.8168879871118245`*^9, 3.8168887635244603`*^9, 3.8168940805676775`*^9, 
  3.8169585354147367`*^9, 3.816962366729698*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"e6870c97-da38-4091-9a46-86dceb8766d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"^", 
    RowBox[{"Here", "^"}]}], ",", " ", 
   RowBox[{
   "I", " ", "accidentally", " ", "used", " ", "symblist", " ", "instead", 
    " ", "of", " ", 
    RowBox[{"entlistfinal", ".", " ", "I"}], " ", "realized", " ", "I", " ", 
    "was", " ", "able", " ", "to", " ", "access", " ", "the", " ", 
    "financial", " ", "data", " ", "without", " ", "the", " ", "use", " ", 
    "of", " ", "entities", " ", "so", " ", "I", " ", "tried", " ", "it", " ", 
    "with", " ", "my", " ", "clstocks", " ", "function"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.816797421830826*^9, 3.816797529097489*^9}, {
  3.816801220405321*^9, 3.816801235339775*^9}, {3.816893564030099*^9, 
  3.816893599533241*^9}, {3.816894162839036*^9, 3.816894163957532*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"1b0e0939-4914-4b33-9487-0a55160fe67d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fingraph", "=", 
   RowBox[{"clstocks", "/@", "symblist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "fingraph", "]"}]}], "Input",
 CellChangeTimes->{{3.8167975333759956`*^9, 3.8167975344936657`*^9}, {
  3.8167975669310417`*^9, 3.81679759738785*^9}, {3.816892451865382*^9, 
  3.8168924813677483`*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"6defd18a-02c6-4d84-89a0-d5ee8ca17eb2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.9485395071408613, 0.9620444312143248, 0.965289759635332]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.3936533388644883, 0.5665163297318097, 0.9079418879861332]], 
         LineBox[CompressedData["
1:eJxVmHtwlOUVxj9EBFOtK0SRFOvaPyoghE02gIQs+XK/kJAv99tCvtyvJDvT
VmmKZa3DeA8LWGdQoYsIKKOwFVKiorMigmLEtZ2KWtAN1HZGKCxisHTKaPKc
5/wB/2R+c877fs/7vOec71vubuora73OMIwZEwxj/O/YP//bc89ljP0Nbl7c
aI79dXjmge22f9njbLYLR7dHwb4Nws51Z8HBN5m/fmPNOEe+Zn5/Re042y2J
5MOIBwaE/Z5vqsc5PJSozwPHTguHf/412HnzfLA5IvmhJ4TDo++Do4PC0dIh
sCMqbJzYBDbjXJI//ArYl+Ji/izoMfa5eJ7nwK5Twqb7b2B7chLPb+M84fok
6u8CW18Ij60E+69Ppr7PsD6UmEw9zXXQW5PM53WDHQ8n63nBwQluPt9dDz/v
ddOfy2CjSjjouwp2+d18vu2F3t1u6nWBY7NSZP3QANhZnqL3ifXWgylcHwT7
dzG/LRcc+iSF+taBTWsB8w2wr184mJckeo8v4H1ni94ryvHgwAMLmX8R5w1v
W0i/piDuvLyQet8Wfc5FvK98cHSrsNM7H+z4YBH3e0j0XWJ8zz2i7877eF4f
OJgnbMx+Rfw7Iuw/tANsx8ieZ0VvwmI+by84nK18ARzrXczzfSd+TU9lvT4u
ejOE/WdFn6MnlefrxX2Yz6Tq+cGR+CX0O0f8Sxc24/JEbyfZ3Sx6Ny255r4C
b3H98EzxMy2N+Zfgt9WWxvPtlvsOpHH9EdH/RhrvNyb6/8n8Q3L/vmYP62+e
+PmUh88rkvs/IOyPl/szTnuu8dd101Lq2bcS/u1fqvrBzq+W8r5Xg60b07Xf
wH53Ou93MtjxWjr7a5r4eVLzU0XvDSbvuwj9GXSZ1P+qzKs6k/vtkn7/3OT9
JMq8mpjB9cMyr+Zl8L7yEY9VZ2g/VUH/HzK0X8EhI5Pn3VQJP+dk6vnAjkrG
R+aUQ//aTM7TTAv6X9b8jlL4OSuL87p2Gfwsy2I93gK212Tp/MqF/p3kuEX5
0B/Jor42sFWSzfvrKYC/v82mP28VQ/92xkdXQ0/0o2z6mwB2/Deb/k9cDn/v
z2G9JxXB32AOz/MLsPFhjs6PQugfZX78+TzovyuXftRBX2xLrs5L5Dvfz2W/
Z2A/69tcrR883z8zj/W2oAR+vpfHfmrFeXwXGPccE70z8nn/eeBIVj7veyby
jV7l57Ff4Fw+/b+CePj2Ap2f0BMzC/j8Qezn7C7Q+YH11h8LOC9eFD+nFXK/
AtyvY2kh14+CzY5C6h8sg/6NhTofEQ8eJK//K/ZzLVlGf94B263LuH4SOLB+
GevpDnD4deb7toBjZ3R9Kfb3NxXRn38jHnqS7E0X/X8pYv4EnM8xovnTETd/
Usz+CIEjjxVrP6Hejf3FvL/bwa4vi/V9CLanLOd6ExxIXs56XQO2/sF4//4K
6J1UwnpvB4fml7Ae/4z8aG0J/fsS7PuM+SPPIj94ncV6/Cn6MzLX0n5HPxvV
lvYv2PWQxfrPkvnwg0V/1sr3zOxS6p0r86GilP6cwP7W70v1fQA9/pdK6ec2
6HHcU0a+FflmaRn7uxzs+12Zzg9wcAfzN88Q/R+XUd/D2M9eXs7nHwUHVpfT
/53ID7/AuLcE8dhwOf3YA3Z+Tz7UCr2h31Tw+bsRj/6pgud9UvQfq9B+Ev3f
MT56H9jYUsn9/g52Ha3k+bLA9sVK7ncTOPCzKp6nGfuHc6pY/6fB1uEq7Xep
h/NV1L9V6uGOavo9gPuIZlZT/zGZx6uq6c8B8fNsNfUOiZ+31bCeRkS/WcP5
dFb0d9Vwv0LR/3SNzjfxc2ot4wmIOz21ul70t9eynisQ92/Q+BJw6M1a7Qfk
m6l17N+rUs8tdby/C+DgQB392IH8yJDm3yz6z9TRz+1SD431+v6UeniiXt+3
8Cs2WM/7OCj6o/X6vpd6jvPS3z3yvnvUy/xz4u8+L+elE/uZp7zX+OebvELr
GfFg0grW5xHpt9AK6j+F/rK/0PwEeV9fv5L9f1T6MVG5T97XNSu1/uR7/cRK
9stj8r0+oYH6IuDoveTZB5HvqGpgvU0Fm/4G1usl+T0x22a/fiK/J8pt+nFc
vi8etLW/RO8u5b3ye+eXjTzP/8CW1ajve+T7+xtZf++I3hcbqSdZ9B7nevev
5PdOcZO+H8TPB5p0fiIe2dakz5P5Nkx2T0TcdbmJ9dgifv66mfttlPm2tZl6
Lsp8+6CZfp0DW5fIJ2Q//50t7PdJ8nvtebInTn6vHWlhvX2P9b4Y2duAeDCh
lfr/L/qzW6l3mvj7biv3rxR//9NK/U+L/ultOh9Ff0bbNfPA2cO471X5fvum
jfUyRX5vxrcz7hH96e0630V/Zzv9yUR9+Da16/wEG1M72L9hqY80cv9hqee2
DvbrKJ4fCHRw/XHR/0aH1qvUx+JO3V/8be6kH/ukPp7qZD0HpT4OdGo/ST2f
7tR6le9ju4t64vH7PvJ4F9eH8L1tDHZpP6+A/q80boPtG7sZPynf94908/7P
yPf9a91av/J9f7Jb33fyfX9Dj84zcMhF3nwF+5t7e/R8iPs+V85qgP6JqzhP
PhS9Nat4v+fBgU8Z996F/LDRS/8GwLE5vVp/YGdlL/36FGyt7dX+hz/Rq72q
H3HHrD6ebwPYLOvT+ST/f7KGHFci/3+ys4/rx/z4EUQt5pA=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.08293057651409819, 0.8398618672635703, 0.6099760143253414]], 
         LineBox[CompressedData["
1:eJxVl3mMVFUWxh8gMrYaaxxGBFEfUbDZuh90s3T19qoXuumFfr2vQPW+0DSV
uCNqiSG4IDzF0ZAg85AZYJiEqQg9MDiaijOKC2IRjYiiFqCJEdRSBJdoFL5z
PpLqfyq/nPvu/e53lpue1LGipnukYRjjRxjGxd8Lf+GXZ5wJXPzN3bXQvvDr
y50Jjt40uewi273Cwf154NCTwubuMWDvRWFj6kRw7HP9/twX2C/YlSb7v3IO
7K4X9kq2gqP7hc22a/B94qRwfGUm2Lw6Xc9bC448nq56XgbHh9N1/XtgX1zY
ONop+lMsPX9Y9Gdaev6I8ots7LFU/y+IWx8L2yk/gINjZsn3p6uxPtpKPoK4
86GwnbERHL5stsTHDoneNPJh0dskfOFG2M/3sLB9ogXsjcjg9+DY9AzeR/Q2
ZOh994KtsPI2XwX07uL6U4gnUjP1fpvBZq1wcMPzYOf+TM3/ADi8Q9hc809w
5Ijy7oPY33bmqH+BSvi5co6eb4Fjh+eo/vVg46dkdu+eq/uXg6Nb5zLfYPP8
XOoBO+Y8qadDh3B+fItwsKcH7Htjnt5vleg7q+vPvQ4O3Tif9Yr9vJL56vfP
iFuvaXzNafEvofGMs2B3Qpb2w6vgaFGW6ivDfomhLF3/Ljgyzi/+bPpJ9Ab8
6k9M9A762S9Ybz/j5/mS77HZ6sdYyXd+ttZLWPLdn635Gyl6N2bTD8Tdl7LV
rzPSPzk5sl/19ZLvnhzdLyj5dnOYH8n3gRz9fh04/lmO+tcr/dOZSz3oX++J
3KT5ENuXq/5OEP0nlVP2SX9dladxv/T73jzV9wH2Mz/N4/2kv67IZ72VQm9G
PvNdAj9fyGc+iuHn8XzVu6MQei+3qacAei1b9S4JQG+LzXmEePCYrfl4C3F3
VEDn0zs28j8zwPuDE40Bvd+zOdC/OqD5H58NP40Cfp8BP6cV8PtM6K9n/Jo0
6H+wQP2vuAX6/1Gg9ZUxBX6mFqreE5PhZ00hv78V+lcVsn5uhv7thTr/7jSh
P6bxbaFJ8LeqSPU34rzwvUXUNx36txVxflvQ/3aR+rMsHfp/1HhuSir8vatY
89MGfTGvmPUNNt4qpj84zzpXzP6GvuDNC7genHhugfbfaNzPfP0Sww/nuwW8
z23QP7FE62n+NPj5Knk/1oe+KVE/94je8aU6L1LBscJSxsXvoVKtx1cQd8+U
cn4gHr1uofplgBO2sBd6Cfc1ly1UfQnR+5eF1IN4/E9lzCfivrwy7cc00d9X
pvr64H/oqTL2O9j7L9fvRr6s7HLuNwN+dpczH9jf3aDxUK7o/0859eN+iVNc
fxwc7qhg/cDfyLoK6sP38X9XaD9tQX58Jyo0P2twP/vKSq2vo1IPj1bSz6nw
d29l0nnWJ5VazxsQD/5hEesb93FnL2K94L7OR4s43+FHeHQV+3EW9KZX6Xv9
R6nfZnI16jf0QRXnB9Z7Ix2+t+DYDIf5BhuNDvdHP1sPOXyv58LP3xzexw8/
p1ZrPibNRz3UVWv+tqP/nQeq1X8b+4d3knU+3Faj+foV59nVNexHxEP31XA+
IO79vUb9qgLH3qlhP8yGn4tqVf84nOfeU0v/EI8+X6v9uQn+JA7Vcp7AP/OH
WuYH8ypyZx1Z/P1rHf0A+96s47wA29/XsR+wv/FcPf1B3DpYr/l4DPsHv62n
/1jv3tDA+kc8WnyJ8b3z/wb6gfXhrxu0f3aK3usb6S/uGy9opD8yz5Y3Jp3v
nW5Ufw7OhJ9/bqL/YMNuYj2BrQHyEem/p5tY7+DEtc1k9LeZ28z5hbjT28x+
BoefbOZ8BkdebFY9Jah/29+i/XcT9gt1XWLEvfUt3B8c29+ifq7EfsYp8s+I
u+2tqq9A/H28ledJPQy3ch4gbsZbqRfspLTRX6yPP9JG/xD37WlLyp/9cRvn
k/TjmMWcx2Bv1mLeB2xFFnO+It/BDxfreVGwe9kS3hfro2lL2G+IJ5oYj0i/
HV2i50+UeTFiKetT6nn6Uvaf1HODcslWrLfDS1nfqCdjalDvuxZs1QbVn6+x
Pnh/Mrs7gur3arA5pV3r702w47Rrff4o821lO/0VvX9rZ77A8cOM2/JeVHYw
v6hP7+6OpH6Ibe1gfYGNQx3cT+r5fAfvi/2id3Qy3+Lnls6k/jff6Ezy0znb
yf3F7xu79H0oBvs2dyX5a7/WpXr9iIcSXapnJPz0JnSzv8GxIuUTB2S+/a+b
8wrsftXNeS36x/Ww/kV/oEfn3XjRP9jD/cGRL8m3Sz2M7eX+oj+/N1l/f6/2
x7Do36jxTc1SH9f28f2SeZfTx3qReu7p43uHfLhuH+eR1POBvqR8OFn9Wn/T
pT46+3X/daL/iX72k+jf15/03vhO9ifVlxccYD3Ogb+PDbD/8N4YwwN83+X9
+3RA73dM/L9iGfVjfWItuQr7mS9ciuO9dI4v4zzB+vDlg7r/aKyPWIPJ79+/
BvV9PiXv37FB3hf7eaOWM3/zoLdpOesV7L6/XO/zibzXxhD7HZyYNsT5hPVm
/RD7Owt6HxzS8yrwvsd/HWI/gn2pK/T7Kfh/wK5ZwX7C/wOhVSs4n8DedsZX
++3fAeVxplc=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.1640101892802266, 0.43990564192587933`, 0.9787963499140357]], 
         LineBox[CompressedData["
1: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
g/g9FVjbJut7Qfx+2tsm/dL+e+p/3kiaCw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.68846322051006, 0.2929241852801858, 0.6256096143489769]], 
         LineBox[CompressedData["
1:eJxVlXlsVFUUxh+bCGIcEUVQ8KEGWpb20QVKaenrRmlp6etCd8rrNl0pkyAC
VfCpQRQEBkENCeAACogGJyxSQMwEBERRx0QtIMsAkhhBHURwSYzid85pcvvP
5Ndz733f+e45546onVvY0FPTtCE9NO3/3zt/zsdjr6fe+fWtX5Rp3vl1JY8D
m5eGTv2fzUZiZ1A72LOGWK+KBvsOEdvul8DBqyrb9VF0Xv9SsHcVsc+TDA50
Euu7+oLDl4lDBQlg/d5ocOBUG9i/Ipr1loND+4jtzilgV4jYOfIt8jH7GxRf
/QLYE2ewni6wtof4zn+w3zhvKHrtvuMpHrmB9FYSO8nLwdbZ8cr3nd4xpHf4
MZzvjyIObQ2DQ2UxrH8I6X0xhvXVkp89Yml9x17ycwxx4NYOsFbCPPwq6XWI
zdh5WdC7M5bPPwAOR8SxviVgvSiO4+vB1uI4zicH7GyP4/OKwP6v46QesuGn
FU/7szaDPR3xfF8LwcEv4/m8nWDtL5W9CybIfYADmydwvAWs357A9bAdbOkT
KX7txjT4t2ki+2mAXSeJta50sHlzIuurAXuGJUi+YF9WgtQT2DiewPW9C2yH
E5R8vUMnST2S3oxJvP99cLh9Evt1E+wfnMjry8Ch1ES5f9Lblij3Q3rfSGQ/
jsDv4KDJzFvovlMmS30ibjSrbK8Vtqm/DjN3HUW96UlJEgdb7iT29wTY8Sax
v/dTfx3k9V1XqF5/SJJ6pf6pS5Z4BvxcmazMj+D+ZKWftcsSX4+4MWAK+5cL
Du+dwv06n/ReJNaXvkd6+6VIvqQ3NoX9PY3vu3an8H1fSoOf51J4/7VU6L3L
5PzWmNBrmKznTAr0Vph83wcRt8+YrH8Z2NsrlfvxG6wPjEvl9YmIh0tTub8u
TIb+F5jdI8F+LY3n3eF4+Dk6jfu3TwL0z0zj/AKIm8+lSb2Mg/53mTvWjYef
Eens/xOIG4XpnG9rJPQ/my5+Pw7923i9pj0J/cFujoC/+RkKO4uYI6vGQP/W
DLn/aOj/IoP9/Bp6XH9281j4+3SmfB96gr5Mmaejof/z7vgI6L+VKff3GPQ/
NpX9/VuHvxunSn7Qr386VfaPhP7futePgv5Hs2S+Ix/zWJbkh7jn1yzxH/p8
Q6ZJ/2F9MH0a9/MerNfaOd45HOu916fx/XiwPvBQtswPrA+b2Vw/WWC9NVvy
J79fzxa/EA89kMP1fwvnu6bkSP3CT7Mph7/nN6D/tRzun1O4D99HOXxf53Bf
xuTpogf77QbhKPjvXT2d62crvhc4MJ3f8/uwP3xluviN/U5trvhB9fBqrsxX
nBf6MJf9XIr8XJdy5X0k/+/J4/NXUz28kif+oX61vXkyX/E940KezAfSf/cM
/n4s1ntjZij+WN/PEL/hj9Mnn/stGfXpj84Xf6h+y/O5XjrAntP54if2+3pa
0s/g4FhL5g/1X6kl+2Og93lL3jP0b+Bfi9/rH9Hf4cgC9qP/RNRDcQHXw5tx
0L+kQPzA+c6OAqnnWPg5qlDiYLOgUO4H+z3PFPJ5gxH3vVMo9QV9wa8KZX7h
fHtGkcwvsHdhkfQH1ge2dDPyD59SWf+jSO4T/vnnF8t7gnjorWLRB3Z9Vizz
BGz+Xiz9hv3axply/2DjxExlvtk3hLdGQe8jJexvBOKBzG7G+dYnJaIP651f
Sjj/QWD/w6Vyf8g/lFaq5OOaUyrzF+t910olf3DwwTKpf7Bmlkn9gY2WMplP
pH+dyuGB5Xyeg37Sk8tZ/w6q58ZyqX+sd9aUK/3sP1Qu/mG/mVghfqEfPfUV
kh/ivlUVUn/YH+yskHwR165USH0h7q2plHmMfAIrKsV/+BPeV6nkr4cqZT/Y
6l+l+Bd6uUruH/m49lQp74V5vkrpb0/fWXJfYN/4WYofhn+W5Iv7ts/OkvqD
Pm/vauX+A1HVMr+pnsuqed7GU791VYtfiPt7zJZ+pnoeM5vX76N6LpmtvMem
M5u/vwz9o0Xa7HcOzYciW+6X+m+xLf5S/223Zb6D9ZE1XC9nwJZVo8wvp6OG
9cwnvW/XyLwjvV/WcL6bkL8nr1b00vu8oFbxP7i5lvNNA2unapX6MW7Xit/k
51N1yvnhTXVKXD9ZJ/dN9XCzTt4X6sdh9fz9ArBrQ73Mc9yvebxeqS9PuF7m
Ib13QxuUeRHMaJD1YPtog8wfmhc/N8j3kV9gsFvqk967VLfSH3qbW+YJ9dtP
buU9Cg1qlO9TPac0yvtN9dzcqOpfK+s7aV4MbFL0GElN8n5Cj+1uknmB99Pr
bZLz6b0+2CT5Yb01qZnXDwE7dc1K3L+yWeYHvdf7m+V+8H3X5Wbpb5oXdou8
d3hPgstb2P+DqC9tX4v0D9i42CL1SfOuXyvXU0/qt2WtfN9rqL53t7KfA9Af
1rlWeQ+pH+9q4/sxEPcbbVxv1dRvH7RxPlGIe860yXuG99DXaw6td28Da2Vz
pP7xPnu/m6O8rwGtndePxPrw6Ha5f6zXZ7ZLv06A3ufaeV7Nw3se+kc4FuyK
mCv5gs3CudLf2O95VuIFYN+2bo43/wOejbls
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.19061907340598516`, 0.9381881044388329, 0.9832462729584839]], 
         LineBox[CompressedData["
1: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
8nu+doT34f0PXzOi/b0UOPrwiPZ3Y4b1L1CHqZ0=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.8964423770890286, 0.5792973917711646, 0.42098546752414423`]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.23936106767130116`, 0.26418616867743383`, 0.6079234778485563]], 
         LineBox[CompressedData["
1:eJxVVmlsVGUUfYCCosYRUcB1jAmWxTK1FLpN+7pRur/uKzDdpi0tZRJFtIqO
mAqyDopGDdRBFHAJTkAUUcgE3EEYEiOCoFOQxFjUURSXxAXPvcfk9U9zcr/3
feeee+69c1vLwor24YZhTBhmGP/9v/jn3zf1XNbF/8Fnj+eZF/873HcCR8vH
A5sdgs3Ri4F96zTeVwUcfEewx/sYcOSsYOf2ZcCetni97xngwBrBZmIlcHi3
YGfTWuDYaZ7fDey8aprwy38EOLRScHRzADi6a5ryOyb8o4KNYweE/2iXLe6b
Ljh8aBWwsVOwZ/cAsOuUHXtGJch9Rlj4NiYo/0Rg60SC8vEB+y+5S+7/NU74
xgsO+tzCt06wOfic8H1UsLP/oOg5LFHP7xU9pwj2739K+NYoHrtG+PoFh2/p
F76vJNrei8VNVz02i56V0236Wkuma777hP9Wwf6hdcL/qMa9W0RPK0nzjYme
fUn6/lnhezhJ7/tb+P6RpPm9KvVfPEP99rbouWmG5rdL+F2YYfOL5ZypejWI
fgMz1S9Xi34fz9R8T+WC33nGjwD7bk5W/2SJvvnJNv+6PkhWPUtFv5hi92Th
e0MK/YL7wrkp6gdD9O1Nob6Ih8alar5FwNGsVPoD2NGTqt+bwvdpPb99FHBk
bJq+91oO9MsU7FmbjbirS7AxKR3Y82Qa8wMO7E1jP+F7Z3q66nkfsOVNV38u
B/YH0vX+08ChPcQtwNFv0m18fK1urd+zwMHVbvoNOPKWW/O1hP9pN/sd2HVl
hu3+2BsZGr9b+H6dofWIF76XZ6q+Z7LBN5H4dmDHjkzN73cTep7MVP/dAuwb
abJemeDrMrW+K9zg22Cq/vnp0PO4xofKEQ+MyKKf0lD/O7PUP58hHqvVeP8Q
4s6lWVqPTcAhI1vz2T4Dek7O5vszwb86m/2OuPlwNvkC+15WfKwV5424HPYT
4q6KHOafCv4PKu5bnwz+W3K03tsQD0dyOJ+BrbJc7a8/k6Dv/bla33p8H9qc
q/V04f3op7mchyng/zvjPvAJ3pvHeYHzkWAe64nzxsE8nce1wv/XPNYf2HPr
LPIHjm2cpX7fAD7Oj2aRL+LWz7P0PS/i/pvyOe/xnvl+Pv0K7PtR44N9yD84
YbbW+6jwzZnNfha9exVPOil6npttq0f4+gLWW/iaBerv4dDT2V2g+n8rfJ8q
4PwRP1xbyP4WP2QU2viYnYXMX/g/UUh/AAffJfbjvCutiPMRfD3tivu7EQ+s
LeJ58Au/XcT5K/zPFJGP6NlSzH2H70Orim31i75ZrP5Lxn2OwWL6B9i8okTz
uQY48ngJ+w33G2+U6Hw5JPy/KuH9wv+yUuot+t9Vqv3zCc5bX5ayPtDDf2mZ
7qM86b9pZfQT4tH6MtZf9PyijO+JnsMt6gt/RKZazB/3GbUW/Q3sesRiPhnQ
8x+L9QaOTSrnPMK8cFaVa77FmDfWQ+XsZ+Tj31au+dwk/XVHBfUUP5dXaH2W
gp/vgQo93yT8X6qw5Rc5UqH91yvzobRSv9+PeOC+Ss3vPHD4hUrON/CJHapU
fyyS/vuN53eKHxZV2fSLPl9lu9/xSRX1w/fmL4wPl/pvrOb8AHZ9WM364X7P
T9X0j/j3xhr6RfybV8P9KX54r4b1Ez1/qLH1a2h8rW1eRLOJJwI7FtTa+AWH
iKU/I9fV2eajYdbp+x+Kf+fX2fTzrK9TP3SKnmPqVa9xoqe7nv4R/h313CfC
f129zpdB9FvoHZ5fJvMhtUH5HMd9vrYGO/81DeqHVODI7gbOY+F/poHzS/qr
uZHzSfywstHWX7FdjZpPHPzkjDbq/voLcWt0E/2IeHR5E+8HduxsYv8Am6ea
OJ/Fz6Pm6Plmmc8Jc+gvYFdoDvsZ/ec58f954MAlc6mf7Lv4uewnxGN1c5kf
sP/YXPoB50PD5ql/TMSjU+ZxHwj/mnnqx3XSj/55+t4U2W+TPOxv8XOlh/NX
5tkSD+slft6q2LcE2Dmx2TYfLavZ1n/+vmbyw3uhF5vZP9J/h5vpN5lvJS2s
j+znxS22fR3Z1KLzaQD9ZBzi+SXArgvEbum3e1r1+xhwbKCV9ZF99zHjLmDr
fCv7WX5f3NzGfsX7jg1trJf8/vmgTc/3y++fWBv7Xfjf0E5/ST/mtrN+0m8H
2slH9P1ezxthfB8e5+W8k32X5bXNB2ePV/tDfq+FvvNST9l3YztYD+Gf2UE/
CP+uDtt9vift2BjTyXkov3/SO9mv0Mfj7VR/TEgE/0An/QMc3tOpelwp+qZ0
cR6Lvq1d7Afg0OouW32ib3VxPsm+Pt2l960CDnrm2/ZBZMV86oF9Zexi/G5g
19fzNb/bZb9c3s19J/22rJvzG/vQuaOb/sE+tE5208/A/pE9nG/AIVcP5y/e
M1/v4fzFfb7jPJ8vv+9HLLDtX6NuAf2GeODzBdQT94WNXs4j4NjkXtZD9nV1
L+e18H24l/MH90f/6mW9gB1xC6k3sFmheHCP8H1wIfUSvlsW0p8Z5r8bh7Ob

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.8123975495260591, 0.12209698852160678`, 0.45522036909032626`]], 
         LineBox[CompressedData["
1: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
HN44NGH+6P4hns+CWvP/b5/QJw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.6213805738462925, 0.8726814907034903, 0.571020638975394]], 
         LineBox[CompressedData["
1:eJxVlmlwFFUUhRsEkSg6YmQTcFDBsA+EEMgCnY1ASEgnIXuAzp6QEKZKUUSB
VgsXFhnXKqsER1HEpXSKRSKI1YUCgojjHxEEaXD5IS6tCC5VluK571D1+AF8
dW+/d9659903IxqWljb3NAxjcA/D+P/fy3+cD8b9mIX/uVPNy38HMseD3aOd
YLOVXAgOPylsJt8Fju4Vjj7/PDj+nbDdshVsN00AO5lrwZEnhINrOsBut4rv
3wX2z+nxYL+Jwm8/Co6tEzaON4K9XcLm2RWi3xN2h+eJ/oSQ4t6if4qwt8VP
+Z+NHYpLBiEeOi1sd68S/X0mKT1vit5aYSexC2ydnKTWC4OdXpPVestF74TJ
ut4qxUZQ9D48WfMn2iNZWz8+NlntPxZsVDA+QfQ6ycrvFtH7BvkR8TNpiqrX
DvGzTNhb8YzoXynsXtwm+l+botUj9rnKL/lT/LRStH4Jr0hR54+J3mMpWv2N
v1JUf5yQ+t87VauX+9JUzb/gpana+lYwVdXvgPi3OVXp6Rb/Dqdq/WdeSFV+
bxF9w6ZJPLxP/M2fpu0fOqiz7Qsbo+tE75Dp2vpu7nTVH8NT4W+XioeHgWMD
07R8LytNuz+BzjS13x7R+xzjb4l/iekqnib+zUxXfpiitz2d50H/2k+nq++P
giP70tlP4GBGhha3WoTNhEqpdyRD8z+2h/nrRf+3GawHvg83ZtJ/cHSDcLDu
BtG/O1P1T4roP5ep679uhtKXIP25c4ba7zqp/5kZmv9W35na906ycDT/LPYP
bJ/Jfp4CP09dyU+G3qtN1Y+jQtAbMlXcGA+9NSb9Hgs/T5hcfwz8vCqL8wPs
js9S9ykZ7FdmsX9GQv9DWaz3HfDTyFb6Em+Dn2OyuR7yA+XZPC/i5upsrheE
/tezeT/BRlKOnGfj/sHwszSH93849D+Qw/okQv/WHFWfjddDfzyH6yfA3+Jc
nqcf/L0vl9/3h/4tudxvIPR/msv6Yf/An7nUPwj+3pOn5tV5cDyax/XwvfFJ
nuq/4zdB/0Vh53wJ9rNvnaXOm3Qj/N00i/4NgL8fz6JerGf9diUOPc7QfNZ3
KPw8kK/ej0PID/+Sz/qI3sGzVb9eFL05s7me6O2arfz6Gxz5cTb9gB53wBy1
fj7YN+dQn+jtmMPziN5n59AvxL2bClQ/rMH+gRkFKn4KbLYVcJ4Mg/6nCqgP
HH2/QDtvKH0u978FfjbPpf9DoH/jXPoPv9z39Lj/zVzVT9+DnYZCzhtwbH2h
1n/eu4U8D84XOFuo+WNeW6T5EX+8SNvP2FnEfgSHvi7S9V8zj+cHRybP43lx
fuureczH/XB6F1MPODaxmP4i36su5v3GeuEvi7ke7k+0p0V94Pg4i/05Anor
Lfb/bdD7oMX3Fffd/dfiecD+6BK+F7ejH+aXcD18b60qUf5m3gr920o4H7Bf
4M5S9ifOY5aUcn7j+/D9pcqfwciPvqriyReQH/+sVNUjG2zPK6MecGR5Ge8r
2H25jP5Aj3+0jOsjHvyjjP0Of2LL5rPeyPdenK+tHzgyn/NZ9P+ux41N5crv
aeDQoXK+3zLPfi3X6hu5pYL6EHfzKpT+DsStj8jnEXd+rqDfondQJdeDX152
JeeB6F1SyX7AeaLnhS//3pJ+uLmK8xZxw6xiv4BDi6tYL9H/TBX9Qf/5/au1
+xzMrGY/Id9qrWa+6H+ymvdV9O+tZr+AzbQavvfgcFMN33vR/0SNdh/i3TV8
D8T/b/TvI/W1qr59pB/W1fJ9h1/+rlrqkX7waumX+J9Qp9XXe6xO65/Ajjru
D33m6TrOM8yvcJ8FPB/uZ3TSAvoDDsUWsH7It08u0L6P9FpIfch3Jyzk94j7
VQtZP/jvHF/IeiE/1mMR45hH3thF7Cd8H6hYpM0T07mSD/+M0TbrCw6V2Vp9
7ZW2tn/kNZt+YP/gqHqeB2xZ9TyPzOMV9dq8j71Sz/5DvnesXvXr2zLfihro
J+Z19N4Gzid5715q4H2W9+5oA7/HvA5daqDfyHfvbtT0+JsbqQccPNzI84Kt
C43sP+hxhjWp93AbOPBCE/sFbB5s0t6HsN9Ev6UfhjQzH+eP5zZr74P9YTP9
lffip2ZNnzuwRWM/q4X1hT/BTj0e+0FnL7FVO09gZiv3R9xsb+X50d/hp1v5
/qPeRv82rb6hjDbOM+xvt7RxP3Ak0sbvRf+eK9+Lv9PbNb+cxnbmS39saOf8
A3u723mf0Y+Bc3o8ai9mffFexdcuVn5+L+/frsXa+xU6o3j/MsTtvh3Uj+/9
RztYb3n/tndwPbB1qkP15z6wc3Un15Pfz6FOrgc23+nk/vj9HD7BuDMK+q9a
wv64E3qrlrAfwJEvlmj5rtHF+Q72x3SpeoxAfrC8i34nQe9qlZ95BOz908X3
AxxIWsr3DGyWLuU8x3rhBxR3bwZHt6r8Lf5I8z/MlYjE
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.5130453246605204, 0.06132847068025815, 0.6467079243531699]], 
         LineBox[CompressedData["
1:eJxVl1lwFFUYhRsUlbgwShRBCQOKJiyhkyCLyZBOSAiEhHT2Fehsk5Wkq9xR
tNWi3GHcyyrBQVTQB51iUcSlulBxQx1fxAV1wOVBXFoRtypL4fz3pOrykvrq
v33vuedf7jC1Y7ime7RhGBNHGcbJvyf+ea/P+rHoxF8nGp1jnfgbiswGx8tG
mSfZ6lHsRrJPsnu/8IkvwfFXuL4dnPxOONw2Dux0ZYNT1QvAsQ3CzsbRYH+P
cPj5MnBwRPH6meDw2XPAfsYYcOKeOep8A5zarcdDKWEv/XmwlWaKvscmiv65
Ohs7hf3jmWDzS1PpeVv0n56jrfdbc3g+/LI/F/b2HUfcOzVX7rs2XfRm5yo9
2aK3SdhKaxS9t+cqf18TP0flqe8fEj9nKt4aiN6GPOrF+abHuAt2nstT/m8E
B5lzlT9vgcO1wlZeHvJrr5tLfWBv21yVn2Jw4mPFe1ZJPdhXqHrZD3bXCntH
PwYnPxS2Du8FG38L+wfuBceumyf+ZbWB/S3zlL/N4PAf89R+OaIvPF/pnw5O
bZ6v4tXg0LvzVT4s0XdMj7uTF/D8HPhbtkD5/S/Y3K/iGaW58C9Q8bItiMcm
LVR+HQP7JQuZL3AwtJD3BScmXMn7gVNF5EPg0KCwF/kBbD2ieN814GR6vqqP
P8W/wnz6I3r78rX7OA/mq/x8Jf6+pta768TPggItbkcLWF+S75iKb9wn+d5b
oOUn9W0B+xv143ZGeH9w/L6INj+SL0VYP2DjSETpPSD1etYisvT7rkU8T/r9
60VK72awPbZQzYMB6a+8QvbnbPi5o1D59ehM+HmI3DgDek+zOI/AcdPi+ZnQ
2zLCl8PPzyzl92NZ8POUIpXffy5D/mcXcR5ifdBYRP+mQ/9tiqPfXwo/jWLO
p2nwc0Yx+xXxUH0x5wni1i3F/H4S9D+r1lfvmQA/Mxezv8+BnzWLlb6150L/
TSq+/ujZ0P/MYu6P9X5yZH0a/K0q4X3Hwt8bRngc9G8tUfWalg79H5RQzwXQ
/1eJylcG4vFrS8nQk4yXch6HoP/9UuXHeugzj5fyPmdB/5QlPB/xYNMSlc+D
+D78joqXHR4P/b8t4fcXQv/FZdz/fPj51ghDn/tLGee16J24lPMCnFy8lH5h
f2NoKfON/WI/LmW9Y71/wTKuRzywlvG++D48sIzvG9bbDy+j/+Ln+HLuL34u
Kud8xn2s3nLqnQj9D5TTf9RH/NVy+nUR/MxfTr+w3uleznyAYxtH4qgn/+Xl
1Ivzgm+W8/3C/l5HBffH94l7KzR9qRcr9Ho4XMF6wf7WmZX0H5y8q5L3gV5j
VyXzif3NryrpD+LOGSvYL+BY7grtvvYXK+j/FOgdU8X5EYbeOVXUlwG9zVXM
H9a7n1bxvlPh52ib79k06J1lc56hX41Gm/P3Eui91VZ+XIW4/5/N8zAvgqxq
7ftwXTXvj/Psm6t5X+j1tlfTL8RDl9cwf9BjVddw/oLdG4X949tF/9M12n2S
H9XwfcH+zopavvfg2PW11Af2n6zl+fArOFCr/A8mQ/+ftaxncOKaOs5H8feJ
OuYTHHqvjvWC/a3f6zhvETc21Wv5Md+uZz9fDL2/1vP+OC92UQMZcb+0gfMX
cfvNBtYL4t7PDcqfTHDiwkbuDz2p4kb2Pzi0ppH7oT7iRxtZb9CXPL+J+yFu
WE1a3Oxv0urReaiJ/oqf5zXTD3A4Imwc3Aq2e5o1/7z7m1kv4vcrzdwfbF3Z
Qv/QD25XC/sP8fiGFu4HTu5pYX2I/m9G1ks9tLdq9ePf06rO8xAPdrdyfoj+
VKu2v53Wxnki9XBnG++L80I7VTxyt+j/so3zD+vd01eq+ywQ/3NWMl9gM6F4
/YDU8+crNX2xU1cpPe1Sz9mr6P806G9axfpFP3oHFbd9hH5OjFqt8nEJ4qmZ
q3m+vNcNq7X33vJWcz/8HjCyHL7f6H+z1mG/Yb2zzmE/4bzYNkfpt2Q+XNZO
v7Detts1Pd7adva7/L54qp35F70fqvVZbWC3soPzEPePX9eh4ofAyS0d7Bfk
2zjQwXqEf+YfHcyX1MPVnbqfmzvZD4iH31WcMUbm27FO9ivYm9zFepP59ngX
9ch82N+l5kMF4m7QxXqT+Tapm/Uh862km/cDO290s57AsZ+6Vb0clXqYENX0
BUVRxkX/YJT3x/0SP0Q5P8Gp9B5tfaiwR/PH6uth/yC/7oM99AtsnNer+W0W
9Kr6Gif6o73afInFenke2N/bq+XHXtinzQ+vs4/vCdYn7uvj/JB+fKlP65/Q
kT7tPYg7/cwP6jd5d7/SPxps7O5nf6M+za/7tfp1xg4wf4gHdwxQH/ojvGOA
fuD3t31oQOVrHdg7bZDngxPmIN8jfG+9MMj+QNz9bJDvCX6vx09Zw/cRbDSt
4Xsuv+c/WcN6AfvGEPWCgxlD1If/L4TrhzhfwPYtQ8z3LPj57xDrGxzKHGa/
gq2aYdYb/r/i3jTM+Q2OPzPM+TLL+h/F7pn5
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
     PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"AGYS\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6323596714272409, 0.6413629541428832, 
                    0.6435265064235547], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9485395071408613`", ",", "0.9620444312143248`", ",", 
                    "0.965289759635332`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"EXPE\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2624355592429922, 0.37767755315453977`, 
                    0.6052945919907555], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3936533388644883`", ",", "0.5665163297318097`", ",", 
                    "0.9079418879861332`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"NCLH\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.05528705100939879, 0.5599079115090468, 
                    0.4066506762168943], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.08293057651409819`", ",", "0.8398618672635703`", ",", 
                    "0.6099760143253414`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"TZOO\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10934012618681774`, 0.2932704279505862, 
                    0.6525308999426905], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1640101892802266`", ",", "0.43990564192587933`", ",", 
                    "0.9787963499140357`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"CCL\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 0.6256096143489769], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.45897548034004004`, 0.19528279018679057`, 
                    0.4170730762326513], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.68846322051006`", ",", "0.2929241852801858`", ",", 
                    "0.6256096143489769`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 0.6256096143489769]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 0.6256096143489769],
                     Editable -> False, Selectable -> False]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"CUK\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1270793822706568, 0.6254587362925553, 
                    0.6554975153056559], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19061907340598516`", ",", "0.9381881044388329`", ",", 
                    "0.9832462729584839`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"EVI\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5976282513926858, 0.3861982611807764, 
                    0.2806569783494295], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8964423770890286`", ",", "0.5792973917711646`", ",", 
                    "0.42098546752414423`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"INT\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.15957404511420079`, 0.17612411245162257`, 
                    0.4052823185657042], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23936106767130116`", ",", "0.26418616867743383`", ",", 
                    "0.6079234778485563`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"RCL\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5415983663507061, 0.08139799234773785, 
                    0.3034802460602175], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8123975495260591`", ",", "0.12209698852160678`", ",", 
                    "0.45522036909032626`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"SABR\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.41425371589752835`, 0.5817876604689936, 
                    0.380680425983596], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6213805738462925`", ",", "0.8726814907034903`",
                     ",", "0.571020638975394`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"LIND\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.342030216440347, 0.040885647120172106`, 
                    0.43113861623544664`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5130453246605204`", ",", "0.06132847068025815`", ",", 
                    "0.6467079243531699`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8168012669559145`*^9, 3.816801324393157*^9, 3.8168014254840455`*^9, 
   3.8168879897806096`*^9, 3.816888766111163*^9, {3.816892462330892*^9, 
   3.8168924860569353`*^9}, 3.8168935448303394`*^9, 3.816894083154972*^9, 
   3.8169585382784805`*^9, 3.8169623692685127`*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"5e11a71b-a72c-4347-ae0f-e116ac8e7ed0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"It", " ", 
   RowBox[{"worked", "!"}], " ", "EVI", " ", "and", " ", "LIND", " ", "are", 
   " ", "here", " ", "now"}], "*)"}]], "Input",
 CellChangeTimes->{{3.816894171821967*^9, 3.816894177924751*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"dc33e222-4832-40fe-a7c2-53e9e16ac877"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Created", " ", "a", " ", "GIF", " ", "to", " ", "see", " ", "individual", 
    " ", "graphs", " ", "more", " ", "clearly"}], "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"stockgif", "=", 
   RowBox[{"ListAnimate", "[", "fingraph", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8168887353358135`*^9, 3.816888745948868*^9}, {
  3.8168888121632013`*^9, 3.816888851677178*^9}, {3.8168924958023324`*^9, 
  3.816892501612238*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"991603d1-168b-41be-8927-d099e57c9242"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i33$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i33$$ = 1}, 
     "\"max\"" :> {$CellContext`i33$$ = 11}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i33$$], 1, ""}, 1, 11, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i33$$], {1, 11, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->6.639826774597168,
                 AnimationRunning->False,
                 AnimationTimeIndex->1.639826774597168,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], 
                    LineBox[CompressedData["
1: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
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"AGYS\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6323596714272409, 0.6413629541428832, 
                    0.6435265064235547], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9485395071408613`", ",", "0.9620444312143248`",
                     ",", "0.965289759635332`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], 
                    LineBox[CompressedData["
1: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
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"EXPE\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2624355592429922, 0.37767755315453977`, 
                    0.6052945919907555], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3936533388644883`", ",", "0.5665163297318097`",
                     ",", "0.9079418879861332`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], 
                    LineBox[CompressedData["
1:eJxVl3mMVFUWxh8gMrYaaxxGBFEfUbDZuh90s3T19qoXuumFfr2vQPW+0DSV
uCNqiSG4IDzF0ZAg85AZYJiEqQg9MDiaijOKC2IRjYiiFqCJEdRSBJdoFL5z
PpLqfyq/nPvu/e53lpue1LGipnukYRjjRxjGxd8Lf+GXZ5wJXPzN3bXQvvDr
y50Jjt40uewi273Cwf154NCTwubuMWDvRWFj6kRw7HP9/twX2C/YlSb7v3IO
7K4X9kq2gqP7hc22a/B94qRwfGUm2Lw6Xc9bC448nq56XgbHh9N1/XtgX1zY
ONop+lMsPX9Y9Gdaev6I8ots7LFU/y+IWx8L2yk/gINjZsn3p6uxPtpKPoK4
86GwnbERHL5stsTHDoneNPJh0dskfOFG2M/3sLB9ogXsjcjg9+DY9AzeR/Q2
ZOh994KtsPI2XwX07uL6U4gnUjP1fpvBZq1wcMPzYOf+TM3/ADi8Q9hc809w
5Ijy7oPY33bmqH+BSvi5co6eb4Fjh+eo/vVg46dkdu+eq/uXg6Nb5zLfYPP8
XOoBO+Y8qadDh3B+fItwsKcH7Htjnt5vleg7q+vPvQ4O3Tif9Yr9vJL56vfP
iFuvaXzNafEvofGMs2B3Qpb2w6vgaFGW6ivDfomhLF3/Ljgyzi/+bPpJ9Ab8
6k9M9A762S9Ybz/j5/mS77HZ6sdYyXd+ttZLWPLdn635Gyl6N2bTD8Tdl7LV
rzPSPzk5sl/19ZLvnhzdLyj5dnOYH8n3gRz9fh04/lmO+tcr/dOZSz3oX++J
3KT5ENuXq/5OEP0nlVP2SX9dladxv/T73jzV9wH2Mz/N4/2kv67IZ72VQm9G
PvNdAj9fyGc+iuHn8XzVu6MQei+3qacAei1b9S4JQG+LzXmEePCYrfl4C3F3
VEDn0zs28j8zwPuDE40Bvd+zOdC/OqD5H58NP40Cfp8BP6cV8PtM6K9n/Jo0
6H+wQP2vuAX6/1Gg9ZUxBX6mFqreE5PhZ00hv78V+lcVsn5uhv7thTr/7jSh
P6bxbaFJ8LeqSPU34rzwvUXUNx36txVxflvQ/3aR+rMsHfp/1HhuSir8vatY
89MGfTGvmPUNNt4qpj84zzpXzP6GvuDNC7genHhugfbfaNzPfP0Sww/nuwW8
z23QP7FE62n+NPj5Knk/1oe+KVE/94je8aU6L1LBscJSxsXvoVKtx1cQd8+U
cn4gHr1uofplgBO2sBd6Cfc1ly1UfQnR+5eF1IN4/E9lzCfivrwy7cc00d9X
pvr64H/oqTL2O9j7L9fvRr6s7HLuNwN+dpczH9jf3aDxUK7o/0859eN+iVNc
fxwc7qhg/cDfyLoK6sP38X9XaD9tQX58Jyo0P2twP/vKSq2vo1IPj1bSz6nw
d29l0nnWJ5VazxsQD/5hEesb93FnL2K94L7OR4s43+FHeHQV+3EW9KZX6Xv9
R6nfZnI16jf0QRXnB9Z7Ix2+t+DYDIf5BhuNDvdHP1sPOXyv58LP3xzexw8/
p1ZrPibNRz3UVWv+tqP/nQeq1X8b+4d3knU+3Faj+foV59nVNexHxEP31XA+
IO79vUb9qgLH3qlhP8yGn4tqVf84nOfeU0v/EI8+X6v9uQn+JA7Vcp7AP/OH
WuYH8ypyZx1Z/P1rHf0A+96s47wA29/XsR+wv/FcPf1B3DpYr/l4DPsHv62n
/1jv3tDA+kc8WnyJ8b3z/wb6gfXhrxu0f3aK3usb6S/uGy9opD8yz5Y3Jp3v
nW5Ufw7OhJ9/bqL/YMNuYj2BrQHyEem/p5tY7+DEtc1k9LeZ28z5hbjT28x+
BoefbOZ8BkdebFY9Jah/29+i/XcT9gt1XWLEvfUt3B8c29+ifq7EfsYp8s+I
u+2tqq9A/H28ledJPQy3ch4gbsZbqRfspLTRX6yPP9JG/xD37WlLyp/9cRvn
k/TjmMWcx2Bv1mLeB2xFFnO+It/BDxfreVGwe9kS3hfro2lL2G+IJ5oYj0i/
HV2i50+UeTFiKetT6nn6Uvaf1HODcslWrLfDS1nfqCdjalDvuxZs1QbVn6+x
Pnh/Mrs7gur3arA5pV3r702w47Rrff4o821lO/0VvX9rZ77A8cOM2/JeVHYw
v6hP7+6OpH6Ibe1gfYGNQx3cT+r5fAfvi/2id3Qy3+Lnls6k/jff6Ezy0znb
yf3F7xu79H0oBvs2dyX5a7/WpXr9iIcSXapnJPz0JnSzv8GxIuUTB2S+/a+b
8wrsftXNeS36x/Ww/kV/oEfn3XjRP9jD/cGRL8m3Sz2M7eX+oj+/N1l/f6/2
x7Do36jxTc1SH9f28f2SeZfTx3qReu7p43uHfLhuH+eR1POBvqR8OFn9Wn/T
pT46+3X/daL/iX72k+jf15/03vhO9ifVlxccYD3Ogb+PDbD/8N4YwwN83+X9
+3RA73dM/L9iGfVjfWItuQr7mS9ciuO9dI4v4zzB+vDlg7r/aKyPWIPJ79+/
BvV9PiXv37FB3hf7eaOWM3/zoLdpOesV7L6/XO/zibzXxhD7HZyYNsT5hPVm
/RD7Owt6HxzS8yrwvsd/HWI/gn2pK/T7Kfh/wK5ZwX7C/wOhVSs4n8DedsZX
++3fAeVxplc=
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"NCLH\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.05528705100939879, 0.5599079115090468, 
                    0.4066506762168943], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.08293057651409819`", ",", 
                    "0.8398618672635703`", ",", "0.6099760143253414`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], 
                    LineBox[CompressedData["
1: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
g/g9FVjbJut7Qfx+2tsm/dL+e+p/3kiaCw==
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"TZOO\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10934012618681774`, 0.2932704279505862, 
                    0.6525308999426905], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1640101892802266`", ",", 
                    "0.43990564192587933`", ",", "0.9787963499140357`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], 
                    LineBox[CompressedData["
1:eJxVlXlsVFUUxh+bCGIcEUVQ8KEGWpb20QVKaenrRmlp6etCd8rrNl0pkyAC
VfCpQRQEBkENCeAACogGJyxSQMwEBERRx0QtIMsAkhhBHURwSYzid85pcvvP
5Ndz733f+e45546onVvY0FPTtCE9NO3/3zt/zsdjr6fe+fWtX5Rp3vl1JY8D
m5eGTv2fzUZiZ1A72LOGWK+KBvsOEdvul8DBqyrb9VF0Xv9SsHcVsc+TDA50
Euu7+oLDl4lDBQlg/d5ocOBUG9i/Ipr1loND+4jtzilgV4jYOfIt8jH7GxRf
/QLYE2ewni6wtof4zn+w3zhvKHrtvuMpHrmB9FYSO8nLwdbZ8cr3nd4xpHf4
MZzvjyIObQ2DQ2UxrH8I6X0xhvXVkp89Yml9x17ycwxx4NYOsFbCPPwq6XWI
zdh5WdC7M5bPPwAOR8SxviVgvSiO4+vB1uI4zicH7GyP4/OKwP6v46QesuGn
FU/7szaDPR3xfF8LwcEv4/m8nWDtL5W9CybIfYADmydwvAWs357A9bAdbOkT
KX7txjT4t2ki+2mAXSeJta50sHlzIuurAXuGJUi+YF9WgtQT2DiewPW9C2yH
E5R8vUMnST2S3oxJvP99cLh9Evt1E+wfnMjry8Ch1ES5f9Lblij3Q3rfSGQ/
jsDv4KDJzFvovlMmS30ibjSrbK8Vtqm/DjN3HUW96UlJEgdb7iT29wTY8Sax
v/dTfx3k9V1XqF5/SJJ6pf6pS5Z4BvxcmazMj+D+ZKWftcsSX4+4MWAK+5cL
Du+dwv06n/ReJNaXvkd6+6VIvqQ3NoX9PY3vu3an8H1fSoOf51J4/7VU6L3L
5PzWmNBrmKznTAr0Vph83wcRt8+YrH8Z2NsrlfvxG6wPjEvl9YmIh0tTub8u
TIb+F5jdI8F+LY3n3eF4+Dk6jfu3TwL0z0zj/AKIm8+lSb2Mg/53mTvWjYef
Eens/xOIG4XpnG9rJPQ/my5+Pw7923i9pj0J/cFujoC/+RkKO4uYI6vGQP/W
DLn/aOj/IoP9/Bp6XH9281j4+3SmfB96gr5Mmaejof/z7vgI6L+VKff3GPQ/
NpX9/VuHvxunSn7Qr386VfaPhP7futePgv5Hs2S+Ix/zWJbkh7jn1yzxH/p8
Q6ZJ/2F9MH0a9/MerNfaOd45HOu916fx/XiwPvBQtswPrA+b2Vw/WWC9NVvy
J79fzxa/EA89kMP1fwvnu6bkSP3CT7Mph7/nN6D/tRzun1O4D99HOXxf53Bf
xuTpogf77QbhKPjvXT2d62crvhc4MJ3f8/uwP3xluviN/U5trvhB9fBqrsxX
nBf6MJf9XIr8XJdy5X0k/+/J4/NXUz28kif+oX61vXkyX/E940KezAfSf/cM
/n4s1ntjZij+WN/PEL/hj9Mnn/stGfXpj84Xf6h+y/O5XjrAntP54if2+3pa
0s/g4FhL5g/1X6kl+2Og93lL3jP0b+Bfi9/rH9Hf4cgC9qP/RNRDcQHXw5tx
0L+kQPzA+c6OAqnnWPg5qlDiYLOgUO4H+z3PFPJ5gxH3vVMo9QV9wa8KZX7h
fHtGkcwvsHdhkfQH1ge2dDPyD59SWf+jSO4T/vnnF8t7gnjorWLRB3Z9Vizz
BGz+Xiz9hv3axply/2DjxExlvtk3hLdGQe8jJexvBOKBzG7G+dYnJaIP651f
Sjj/QWD/w6Vyf8g/lFaq5OOaUyrzF+t910olf3DwwTKpf7Bmlkn9gY2WMplP
pH+dyuGB5Xyeg37Sk8tZ/w6q58ZyqX+sd9aUK/3sP1Qu/mG/mVghfqEfPfUV
kh/ivlUVUn/YH+yskHwR165USH0h7q2plHmMfAIrKsV/+BPeV6nkr4cqZT/Y
6l+l+Bd6uUruH/m49lQp74V5vkrpb0/fWXJfYN/4WYofhn+W5Iv7ts/OkvqD
Pm/vauX+A1HVMr+pnsuqed7GU791VYtfiPt7zJZ+pnoeM5vX76N6LpmtvMem
M5u/vwz9o0Xa7HcOzYciW+6X+m+xLf5S/223Zb6D9ZE1XC9nwJZVo8wvp6OG
9cwnvW/XyLwjvV/WcL6bkL8nr1b00vu8oFbxP7i5lvNNA2unapX6MW7Xit/k
51N1yvnhTXVKXD9ZJ/dN9XCzTt4X6sdh9fz9ArBrQ73Mc9yvebxeqS9PuF7m
Ib13QxuUeRHMaJD1YPtog8wfmhc/N8j3kV9gsFvqk967VLfSH3qbW+YJ9dtP
buU9Cg1qlO9TPac0yvtN9dzcqOpfK+s7aV4MbFL0GElN8n5Cj+1uknmB99Pr
bZLz6b0+2CT5Yb01qZnXDwE7dc1K3L+yWeYHvdf7m+V+8H3X5Wbpb5oXdou8
d3hPgstb2P+DqC9tX4v0D9i42CL1SfOuXyvXU0/qt2WtfN9rqL53t7KfA9Af
1rlWeQ+pH+9q4/sxEPcbbVxv1dRvH7RxPlGIe860yXuG99DXaw6td28Da2Vz
pP7xPnu/m6O8rwGtndePxPrw6Ha5f6zXZ7ZLv06A3ufaeV7Nw3se+kc4FuyK
mCv5gs3CudLf2O95VuIFYN+2bo43/wOejbls
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"CCL\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 0.6256096143489769], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.45897548034004004`, 0.19528279018679057`, 
                    0.4170730762326513], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.68846322051006`", ",", "0.2929241852801858`", 
                    ",", "0.6256096143489769`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 0.6256096143489769],
                     Editable -> False, Selectable -> False]}], "]"}], "}"}], 
                    ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 6->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], 
                    LineBox[CompressedData["
1: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
8nu+doT34f0PXzOi/b0UOPrwiPZ3Y4b1L1CHqZ0=
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"CUK\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1270793822706568, 0.6254587362925553, 
                    0.6554975153056559], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19061907340598516`", ",", 
                    "0.9381881044388329`", ",", "0.9832462729584839`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 7->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], 
                    LineBox[CompressedData["
1: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
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"EVI\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5976282513926858, 0.3861982611807764, 
                    0.2806569783494295], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8964423770890286`", ",", "0.5792973917711646`",
                     ",", "0.42098546752414423`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 8->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], 
                    LineBox[CompressedData["
1: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

                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"INT\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15957404511420079`, 0.17612411245162257`, 
                    0.4052823185657042], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.23936106767130116`", ",", 
                    "0.26418616867743383`", ",", "0.6079234778485563`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 9->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], 
                    LineBox[CompressedData["
1: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
HN44NGH+6P4hns+CWvP/b5/QJw==
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"RCL\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5415983663507061, 0.08139799234773785, 
                    0.3034802460602175], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8123975495260591`", ",", 
                    "0.12209698852160678`", ",", "0.45522036909032626`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 10->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], 
                    LineBox[CompressedData["
1:eJxVlmlwFFUUhRsEkSg6YmQTcFDBsA+EEMgCnY1ASEgnIXuAzp6QEKZKUUSB
VgsXFhnXKqsER1HEpXSKRSKI1YUCgojjHxEEaXD5IS6tCC5VluK571D1+AF8
dW+/d9659903IxqWljb3NAxjcA/D+P/fy3+cD8b9mIX/uVPNy38HMseD3aOd
YLOVXAgOPylsJt8Fju4Vjj7/PDj+nbDdshVsN00AO5lrwZEnhINrOsBut4rv
3wX2z+nxYL+Jwm8/Co6tEzaON4K9XcLm2RWi3xN2h+eJ/oSQ4t6if4qwt8VP
+Z+NHYpLBiEeOi1sd68S/X0mKT1vit5aYSexC2ydnKTWC4OdXpPVestF74TJ
ut4qxUZQ9D48WfMn2iNZWz8+NlntPxZsVDA+QfQ6ycrvFtH7BvkR8TNpiqrX
DvGzTNhb8YzoXynsXtwm+l+botUj9rnKL/lT/LRStH4Jr0hR54+J3mMpWv2N
v1JUf5yQ+t87VauX+9JUzb/gpana+lYwVdXvgPi3OVXp6Rb/Dqdq/WdeSFV+
bxF9w6ZJPLxP/M2fpu0fOqiz7Qsbo+tE75Dp2vpu7nTVH8NT4W+XioeHgWMD
07R8LytNuz+BzjS13x7R+xzjb4l/iekqnib+zUxXfpiitz2d50H/2k+nq++P
giP70tlP4GBGhha3WoTNhEqpdyRD8z+2h/nrRf+3GawHvg83ZtJ/cHSDcLDu
BtG/O1P1T4roP5ep679uhtKXIP25c4ba7zqp/5kZmv9W35na906ycDT/LPYP
bJ/Jfp4CP09dyU+G3qtN1Y+jQtAbMlXcGA+9NSb9Hgs/T5hcfwz8vCqL8wPs
js9S9ykZ7FdmsX9GQv9DWaz3HfDTyFb6Em+Dn2OyuR7yA+XZPC/i5upsrheE
/tezeT/BRlKOnGfj/sHwszSH93849D+Qw/okQv/WHFWfjddDfzyH6yfA3+Jc
nqcf/L0vl9/3h/4tudxvIPR/msv6Yf/An7nUPwj+3pOn5tV5cDyax/XwvfFJ
nuq/4zdB/0Vh53wJ9rNvnaXOm3Qj/N00i/4NgL8fz6JerGf9diUOPc7QfNZ3
KPw8kK/ej0PID/+Sz/qI3sGzVb9eFL05s7me6O2arfz6Gxz5cTb9gB53wBy1
fj7YN+dQn+jtmMPziN5n59AvxL2bClQ/rMH+gRkFKn4KbLYVcJ4Mg/6nCqgP
HH2/QDtvKH0u978FfjbPpf9DoH/jXPoPv9z39Lj/zVzVT9+DnYZCzhtwbH2h
1n/eu4U8D84XOFuo+WNeW6T5EX+8SNvP2FnEfgSHvi7S9V8zj+cHRybP43lx
fuureczH/XB6F1MPODaxmP4i36su5v3GeuEvi7ke7k+0p0V94Pg4i/05Anor
Lfb/bdD7oMX3Fffd/dfiecD+6BK+F7ejH+aXcD18b60qUf5m3gr920o4H7Bf
4M5S9ifOY5aUcn7j+/D9pcqfwciPvqriyReQH/+sVNUjG2zPK6MecGR5Ge8r
2H25jP5Aj3+0jOsjHvyjjP0Of2LL5rPeyPdenK+tHzgyn/NZ9P+ux41N5crv
aeDQoXK+3zLPfi3X6hu5pYL6EHfzKpT+DsStj8jnEXd+rqDfondQJdeDX152
JeeB6F1SyX7AeaLnhS//3pJ+uLmK8xZxw6xiv4BDi6tYL9H/TBX9Qf/5/au1
+xzMrGY/Id9qrWa+6H+ymvdV9O+tZr+AzbQavvfgcFMN33vR/0SNdh/i3TV8
D8T/b/TvI/W1qr59pB/W1fJ9h1/+rlrqkX7waumX+J9Qp9XXe6xO65/Ajjru
D33m6TrOM8yvcJ8FPB/uZ3TSAvoDDsUWsH7It08u0L6P9FpIfch3Jyzk94j7
VQtZP/jvHF/IeiE/1mMR45hH3thF7Cd8H6hYpM0T07mSD/+M0TbrCw6V2Vp9
7ZW2tn/kNZt+YP/gqHqeB2xZ9TyPzOMV9dq8j71Sz/5DvnesXvXr2zLfihro
J+Z19N4Gzid5715q4H2W9+5oA7/HvA5daqDfyHfvbtT0+JsbqQccPNzI84Kt
C43sP+hxhjWp93AbOPBCE/sFbB5s0t6HsN9Ev6UfhjQzH+eP5zZr74P9YTP9
lffip2ZNnzuwRWM/q4X1hT/BTj0e+0FnL7FVO09gZiv3R9xsb+X50d/hp1v5
/qPeRv82rb6hjDbOM+xvt7RxP3Ak0sbvRf+eK9+Lv9PbNb+cxnbmS39saOf8
A3u723mf0Y+Bc3o8ai9mffFexdcuVn5+L+/frsXa+xU6o3j/MsTtvh3Uj+/9
RztYb3n/tndwPbB1qkP15z6wc3Un15Pfz6FOrgc23+nk/vj9HD7BuDMK+q9a
wv64E3qrlrAfwJEvlmj5rtHF+Q72x3SpeoxAfrC8i34nQe9qlZ95BOz908X3
AxxIWsr3DGyWLuU8x3rhBxR3bwZHt6r8Lf5I8z/MlYjE
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"SABR\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.41425371589752835`, 0.5817876604689936, 
                    0.380680425983596], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6213805738462925`", ",", "0.8726814907034903`",
                     ",", "0.571020638975394`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 11->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], 
                    LineBox[CompressedData["
1:eJxVl1lwFFUYhRsUlbgwShRBCQOKJiyhkyCLyZBOSAiEhHT2Fehsk5Wkq9xR
tNWi3GHcyyrBQVTQB51iUcSlulBxQx1fxAV1wOVBXFoRtypL4fz3pOrykvrq
v33vuedf7jC1Y7ime7RhGBNHGcbJvyf+ea/P+rHoxF8nGp1jnfgbiswGx8tG
mSfZ6lHsRrJPsnu/8IkvwfFXuL4dnPxOONw2Dux0ZYNT1QvAsQ3CzsbRYH+P
cPj5MnBwRPH6meDw2XPAfsYYcOKeOep8A5zarcdDKWEv/XmwlWaKvscmiv65
Ohs7hf3jmWDzS1PpeVv0n56jrfdbc3g+/LI/F/b2HUfcOzVX7rs2XfRm5yo9
2aK3SdhKaxS9t+cqf18TP0flqe8fEj9nKt4aiN6GPOrF+abHuAt2nstT/m8E
B5lzlT9vgcO1wlZeHvJrr5tLfWBv21yVn2Jw4mPFe1ZJPdhXqHrZD3bXCntH
PwYnPxS2Du8FG38L+wfuBceumyf+ZbWB/S3zlL/N4PAf89R+OaIvPF/pnw5O
bZ6v4tXg0LvzVT4s0XdMj7uTF/D8HPhbtkD5/S/Y3K/iGaW58C9Q8bItiMcm
LVR+HQP7JQuZL3AwtJD3BScmXMn7gVNF5EPg0KCwF/kBbD2ieN814GR6vqqP
P8W/wnz6I3r78rX7OA/mq/x8Jf6+pta768TPggItbkcLWF+S75iKb9wn+d5b
oOUn9W0B+xv143ZGeH9w/L6INj+SL0VYP2DjSETpPSD1etYisvT7rkU8T/r9
60VK72awPbZQzYMB6a+8QvbnbPi5o1D59ehM+HmI3DgDek+zOI/AcdPi+ZnQ
2zLCl8PPzyzl92NZ8POUIpXffy5D/mcXcR5ifdBYRP+mQ/9tiqPfXwo/jWLO
p2nwc0Yx+xXxUH0x5wni1i3F/H4S9D+r1lfvmQA/Mxezv8+BnzWLlb6150L/
TSq+/ujZ0P/MYu6P9X5yZH0a/K0q4X3Hwt8bRngc9G8tUfWalg79H5RQzwXQ
/1eJylcG4vFrS8nQk4yXch6HoP/9UuXHeugzj5fyPmdB/5QlPB/xYNMSlc+D
+D78joqXHR4P/b8t4fcXQv/FZdz/fPj51ghDn/tLGee16J24lPMCnFy8lH5h
f2NoKfON/WI/LmW9Y71/wTKuRzywlvG++D48sIzvG9bbDy+j/+Ln+HLuL34u
Kud8xn2s3nLqnQj9D5TTf9RH/NVy+nUR/MxfTr+w3uleznyAYxtH4qgn/+Xl
1Ivzgm+W8/3C/l5HBffH94l7KzR9qRcr9Ho4XMF6wf7WmZX0H5y8q5L3gV5j
VyXzif3NryrpD+LOGSvYL+BY7grtvvYXK+j/FOgdU8X5EYbeOVXUlwG9zVXM
H9a7n1bxvlPh52ib79k06J1lc56hX41Gm/P3Eui91VZ+XIW4/5/N8zAvgqxq
7ftwXTXvj/Psm6t5X+j1tlfTL8RDl9cwf9BjVddw/oLdG4X949tF/9M12n2S
H9XwfcH+zopavvfg2PW11Af2n6zl+fArOFCr/A8mQ/+ftaxncOKaOs5H8feJ
OuYTHHqvjvWC/a3f6zhvETc21Wv5Md+uZz9fDL2/1vP+OC92UQMZcb+0gfMX
cfvNBtYL4t7PDcqfTHDiwkbuDz2p4kb2Pzi0ppH7oT7iRxtZb9CXPL+J+yFu
WE1a3Oxv0urReaiJ/oqf5zXTD3A4Imwc3Aq2e5o1/7z7m1kv4vcrzdwfbF3Z
Qv/QD25XC/sP8fiGFu4HTu5pYX2I/m9G1ks9tLdq9ePf06rO8xAPdrdyfoj+
VKu2v53Wxnki9XBnG++L80I7VTxyt+j/so3zD+vd01eq+ywQ/3NWMl9gM6F4
/YDU8+crNX2xU1cpPe1Sz9mr6P806G9axfpFP3oHFbd9hH5OjFqt8nEJ4qmZ
q3m+vNcNq7X33vJWcz/8HjCyHL7f6H+z1mG/Yb2zzmE/4bzYNkfpt2Q+XNZO
v7Detts1Pd7adva7/L54qp35F70fqvVZbWC3soPzEPePX9eh4ofAyS0d7Bfk
2zjQwXqEf+YfHcyX1MPVnbqfmzvZD4iH31WcMUbm27FO9ivYm9zFepP59ngX
9ch82N+l5kMF4m7QxXqT+Tapm/Uh862km/cDO290s57AsZ+6Vb0clXqYENX0
BUVRxkX/YJT3x/0SP0Q5P8Gp9B5tfaiwR/PH6uth/yC/7oM99AtsnNer+W0W
9Kr6Gif6o73afInFenke2N/bq+XHXtinzQ+vs4/vCdYn7uvj/JB+fKlP65/Q
kT7tPYg7/cwP6jd5d7/SPxps7O5nf6M+za/7tfp1xg4wf4gHdwxQH/ojvGOA
fuD3t31oQOVrHdg7bZDngxPmIN8jfG+9MMj+QNz9bJDvCX6vx09Zw/cRbDSt
4Xsuv+c/WcN6AfvGEPWCgxlD1If/L4TrhzhfwPYtQ8z3LPj57xDrGxzKHGa/
gq2aYdYb/r/i3jTM+Q2OPzPM+TLL+h/F7pn5
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"LIND\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.342030216440347, 0.040885647120172106`, 
                    0.43113861623544664`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5130453246605204`", ",", 
                    "0.06132847068025815`", ",", "0.6467079243531699`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
               Dynamic[$CellContext`i33$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8168887467413607`*^9, 3.816888766545624*^9}, 
   3.8168925045008917`*^9, 3.8168936096231165`*^9, 3.8168940835418787`*^9, 
   3.8169585387459393`*^9, 3.8169623696297417`*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"b2e9f413-a95a-46f6-8ec0-1d456d188dad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "I", " ", "will", " ", "apply", " ", "my", " ", "new", " ", 
    "symblist", " ", "to", " ", "my", " ", "stock", " ", "forcast", " ", 
    "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "=", "symblist"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"financial", "[", "x_", "]"}], ":=", 
    RowBox[{"FinancialData", "[", 
     RowBox[{"x", ",", 
      NamespaceBox["LinguisticAssistant",
       DynamicModuleBox[{Typeset`query$$ = "April 1,2020", Typeset`boxes$$ = 
        RowBox[{"DateObject", "[", 
          RowBox[{"{", 
            RowBox[{"2020", ",", " ", "4", ",", " ", "1"}], "}"}], "]"}], 
        Typeset`allassumptions$$ = {{
         "type" -> "MultiClash", "word" -> "", "template" -> 
          "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
          "Values" -> {{
            "name" -> "DateObject", "word" -> "the input", "desc" -> "a date",
              "input" -> "*MC.%7E-_*DateObject-"}, {
            "name" -> "GivenName", "word" -> "April", "desc" -> 
             "a given name", "input" -> "*MC.%7E-_*GivenName-"}}}}, 
        Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
        Typeset`querystate$$ = {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.7763901`7.341624982418914, "Messages" -> {}}}, 
        DynamicBox[ToBoxes[
          AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
           Dynamic[Typeset`query$$], 
           Dynamic[Typeset`boxes$$], 
           Dynamic[Typeset`allassumptions$$], 
           Dynamic[Typeset`assumptions$$], 
           Dynamic[Typeset`open$$], 
           Dynamic[Typeset`querystate$$]], StandardForm],
         ImageSizeCache->{301., {10., 20.}},
         TrackedSymbols:>{
          Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
           Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
        DynamicModuleValues:>{},
        UndoTrackedVariables:>{Typeset`open$$}],
       BaseStyle->{"Deploy"},
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z", "=", 
     RowBox[{"financial", "[", "p", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"function", "[", "x_", "]"}], ":=", 
    RowBox[{"TimeSeriesModelFit", "[", 
     RowBox[{"financial", "[", "x", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsmstring", "=", 
     RowBox[{"function", "/@", "p"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"for", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"TimeSeriesForecast", "[", 
        RowBox[{
         RowBox[{"tsmstring", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", "156", "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "p", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"forlist", "=", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", "for"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "p"}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8168014624537573`*^9, 3.816801498589367*^9}, {
   3.816803387586594*^9, 3.816803390089902*^9}, {3.81680342402001*^9, 
   3.8168034243683815`*^9}, {3.816803885741666*^9, 3.8168039277269983`*^9}, {
   3.8168881108121405`*^9, 3.8168881241690893`*^9}, 3.8168883794704576`*^9, {
   3.8168913099512496`*^9, 3.81689131763087*^9}, {3.8168914863602605`*^9, 
   3.8168914941188507`*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"c7f77d4a-9914-40d5-9bc9-dee1cc874ced"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlX1sU2UUxq9DPpwmFpwiilhCgkwJdExEBht3G3PYddtd131067a7dm3X
buuaoJFM0avJxO8VwRgSwcoUSUxmg6ITMWlQ/MBFa/yYKOqdS4xxiFdx+hfR
9Tnn/NElS/PLe9/3Puc5z3vuSv+gO5inKMqxuf/sb/bv06rz5XM/yQPL1qtz
v45ZYn38EFi/+S7ikYq1WbYOEqcnXI4s2z8mVvMnwdpfxObQVxuybCyvBtuH
Z8DqaeJkvBQc/4PXfVeDk8t20Hr1yqIsZyp3yH7oUWLEcydhPXGe2ByNg9PX
3S16ocdSiZXJANbtfcRGQQysPUesFu8Em9c4ZR16bGXMM1+Q/l4n+7Piduh/
1sn1P18M/SedOfU4ttTQ/lInWA8Sq1Ml4MRIDeu3oDf9To3ox7o1zesN4+Sn
3yXvB6eecnH/DpD+t1x8/gmcZ5tycb+uwrp6ZS3Xs5f8fZxYD/2C85Q3hUOk
/8darqce9emL6rjepag/saEup37t+zo+fzHWjfn1ki9wan29+IvnTW+9+AGO
f1sv/cfzyTyN9K+YD86sZZ7t3Qi9LRr7lXcH9D6s8fljm+Dnfxr3fxpsFTZw
fgyw3dPA5w/jPO1B5tk1pP8osX2sGmy7xc3PnwarDW65L9gfv98t/SD9r7gl
v6gv87mb9awiP+sauT/9lIddjexfAzh9uFH6j35ZE8RKoY/y/G8j36fd4NS9
HukP9psveiRfWLed8Uj9lIe/PezXBbBysInPuwR2fNSU8z79zyapB/lK3NjM
/p+i/FY1sz9VdL8+aJb8g40LzZI3PJ+6voXf9x7lt6JF9JPegZYcvckZYRX1
Za5t5fc/QvlVW6WflN9oa87z+n7mwpPk5xKv5Avr9lIv52+K9Ie93P896K+x
1yv6wKl3iY1Ts5SHkjbZT/Ohp43zPYTnk8+0cT9S4Mw4r+dvQn6V6Tb251Hk
M9HdLvPkTvj7ZLvoBVvH2zlvXrDd5OfHFoK1fB/r2wg2H/PJvATb3vDJ/Qar
P/j4vLPg+MIOyfNm6C/qYP+Wgx2pDpnnYP07WT+H/YnLO3m+FmM9va5T8gS2
WjtlHoGNyU6+T53g1GVdnJ8zYPO2LvEPbGvukv2k3+iSfMI/pVDP8cPRqMu8
Aeu7db7vR0nvq7p838jP1d1y//E+TWMefo30DnXLeSXQ+3I392812PyMeeQw
no/X+mW+4fzkfX653+DMS37xn/RP+Pm8I2DHP36ZD5SHewIyfykPh3LZ/klA
5hnl4WKA70MabNzUI/eF8vAC8+yv5OeHPTIfKA+W8DrKww3BnH5mtgcl71vg
7/tB7l8+/Ej8HhT/wOmlIek32CoPST/A9v4Q+9VN/v4W4vpayN+CsMwPsG1b
mOfrKPSokXBOP+L7wuI3WFnSK993yvPWXt4foDyHejm/F0l/Qngn6kufIDaH
CsDa5khO/UYgIt+7rdD/dETmFdh8OyLfjzLo/zki/Qcn9Sjr3bUN/j4Rle8b
WDkeZb8WqdD/U5T7q4P1K/pY336wtaeP/VhQDn+P9XG98yqg/1wf1/cl2FjQ
L1wJ/Y5+Ps+zHf6+3s/+FWE9fpbXRx3g5LwBuR9gpXVA5h048c2A1IP3pZUY
v28f2Lo1xvNpBGxvisn3E/u1h2KcryjYvBQTP6DPtmaQ/S0jve5B6T/pfWBQ
+kt6jwzyvPy6Uv0fagf9nw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlX1sU2UUxgu6QCaaOiYfE7X+o5kuWllMBJzcMWFbWbfbtevH1m133bq2
TKGJGsn8qlETicgqYiLK8CKgxoRRMyZTF1IQmc5mThMzo4G0EGPiJhRxEo1G
6XOe9w+W7OOXc95zn/v0Oe9uD21pDs+3WCxvX/ku/C58fb1+tlr+cmhXftjn
hBOl52sLbNy2AazlWusKnB8Utr3Uh37bl8JmbXVDgfXfhY3eDY0FTqyolXkn
7m8qsPaFcPrWsLPA8QusV02g31xeJ/OHasFTNcKW8hXot2xWvAfzkrPC5u6/
UE8vqef7mNCT1+r5/BHMs/UJ24KHcV5/Qzjbf0AvcHaxg/PqXQW2PuTg+Tmw
FnVQ/0gz9O8UNkaPoW6OkQe+wzz7mo305zjYCG/k+SJwckA461oGTn/C/vgg
OH9OnXdhfiLUQH9+QT21nRxcK/o/bmD/PLyfNaf6l6KuXeeU5+1Pgae2Oeln
xg1/jzj5+S0B2884qfdnsLGwkec1cHKlcDrzNFj/ifX+Ix7oLWqS/BRHwKl7
hRMzH6E/G2iif2fA8R/Yn3sL/eZ8nXm8oQV6K4TTc3Ve6PXp9G8r2P68sGW6
xgc//9Ppz3PgfLmLeivQb/O46M805uvPuqhnM/QkPnDRz33QY72zmXwj+jWX
sFbpBsefIufuApsH2b97uej/ppn6XsA8o9HN54+Dk1vd9P899KffZT3YhHo+
46YfQ2DbZfKJMPSmnvDw+R+inn3Hw/fdLvonPGqfRP8frM89ALYMtnDe92D7
eAvfrwZsXGzhvEXg5M1evk835qfXe5n/s2D9pFftu+ThvJf690oelvno9w58
Htl1PuqfwHzroz76c1T8nPFR76j4eZOfecqJfs3P+2lG9G/yc55D9O/yq/tN
/CwJsF6Guq0qoM6L/kiAefagnnhN1deAU58F1D6gX1vdyv39V/Lc08rP7wLY
3NFKPw6if2pU9V8v+s+10s/9koeuNt6PqyUPr7TRjwXwKz/Sxs9jTPRn2V96
TPJcHKS/Q+Dsy0H2z4q/w0HelzbM004Hr/IvvqBd5Rl187525vOU7FuqnfpP
Y7+MH1V/mR/6r+3g/o/LPt6jeAvqeX+Hyl8A/k53cF+2oZ6a10l9U+Ds3eTy
MfRbvZ3MWwlYS3Qyr5fQbyk3uK/fgu1ug35Mgo1nDLVfovd9xYeh13ZHF9/n
b7Cud1FfAP2J/i7m77joPdBFPStF7yTPVz6G83FnSP1/ED+fDKn7E/WpfSH1
PLnfMuTKa1C3/xliHnvEz8e7OW+n3G97u6nnotxvX3XTr1mwfok8LfMSt/Rw
34vA1j3kqmKwdqqHebuM8/E8OdiJulkWpv5/RP/DYepdLP5+Hub8FvH3tzD1
7xL9S3vV/Sj6q3uvug9sj7AePwRO/drLvCxEf7Y0wnqV6F8bUfe76I9F6M86
5CP+ekTdn2BLSZT7m5Z8PEjuPyl57o1yX+fw/GQyyvOTov/TqMqr5GNVTM0X
f7tj9GNY8vFqjHk2JR9HY2qfJM9nYyqvAa1iONAX2DRbbR849OaLmU7tfxKT
vl0=
         "]], 
        LineBox[{{3.8138899878983665`*^9, 127.19559304188874`}, {3.8139552*^9,
          122.75}, {3.8140416*^9, 119.69999694824219`}, {3.814128*^9, 
         117.5}, {3.8142144*^9, 123.44999694824219`}, {3.8144736*^9, 
         123.55999755859375`}, {3.81456*^9, 123.02999877929688`}, {
         3.8146464*^9, 122.5199966430664}, {3.8147328*^9, 
         123.95999908447266`}, {3.8148192*^9, 119.9000015258789}, {
         3.8150784*^9, 122.80000305175781`}, {3.8151648*^9, 
         125.05000305175781`}, {3.8152512*^9, 123.18000030517578`}, {
         3.815424*^9, 123.7300033569336}, {3.8156832*^9, 
         124.48999786376953`}, {3.8157696*^9, 126.22000122070312`}, {
         3.8158206854881215`*^9, 127.19559304188874`}}], 
        LineBox[{{3.816202993133223*^9, 127.19559304188874`}, {3.816288*^9, 
         126.5199966430664}, {3.8163744*^9, 126.27999877929688`}, {
         3.816405301335832*^9, 127.19559304188874`}}], 
        LineBox[{{3.8165851743211837`*^9, 127.19559304188874`}, {3.8166336*^9,
          123.0199966430664}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlWtsU2UYx4/TieIHK05xiniIODaGozAvMJge0DE2djntLl23bjtrt67d
pWuiRDNvR5IFBXTHW8wSwYMX5BM24HSiJg1eUFy0fnGiiJ375hDrZWpIiK7/
53mWnCZN88vz9nn/7/95nvddERzy9uQoinJ0/pv9zX6+rDi3Zf7HHsu/VZv/
dc8RJycn1Swbt2wDqyOz4Mx+4uTy3JVZVj9f4IIs638Qp1+Pr8qyuayS2LNh
dZa1T4UnsD7+G7FWeqwwy3b+dso3VwhO3bdd4livxIiN0ROIW+c4Pn0B8eT1
VeD5DzijEdvxj26D3v4q1pchvS9ViR7E09dW0/rKacRd9xCbeSWkP1LN+iJu
6H+e2AiHwfaHsv5IMfzctEPyrYGfPcRKUQD5rVGOx8tJ//s7RD/Ol5mR9WfA
ZrCG8p/YCX8T+2pEH/6ffpfYmDiA+rima7g+IzifdlUt+bV4Cpx6ulb8LIK/
79Q69nOfJVYDo4gbV9QxX43zWOvrpF9wXv0Hjh9ZBD/M3Hre7+V10LuW2Jy9
BvG0X9izFn5+x1xejfV2jk56pkLg1Bpd6g1WfLrkL4XeJ3X2I3YX/PxPl/OU
wc8iD9djxQb0Q6OH63foDuh/3MP+a8hvHhY2EXet8nK9LmI/zePleswhHn/E
y/1airj9ppf9qgenvvbKPKyHn3UNrH8p9rMebhD/EE++1sDzOQZ/MpPE6eE8
+Kf+0yD1KYG/OxuFyd9XG8UPsOsUx0f6wdpfjTIPyK/sbxJ/EHefbOJ67EF+
4/cm8R/rrZuapf8RT1YsMP6vf9IsfmC9eb6Z5+cw6b3BJ/7ivOmtPvEH612D
Psf+9qyP/Tl5O/y8rkX8Bytai/QT2N0n/A3N34st0u/gzBK/MOZbLffL/YW4
3uuXeQabz/m5Xj5w4gM/66lE/2tlrTx/y5Ev3r3AiNvPtkp+cGqilf0cRj5l
RvgC4lZXG+vbSv7ubZP9qB/G2+Q+QFxNt4lesL44IP5iffqpgPiHuOtYwFE/
7ceA3E80j4va5T4G2+va5Txgd6Jd7lfU2/i+nfdLgq3LOuS8WJ8s6ZB5QzzT
IvEEzdtUB++/jO6LSzqlP6mfiztl/qifm5krD2K9ZnZKf6OflCKDz7sb7G4w
2J/zWG885mTrLYP93gVWC7q4/06Bdb2L+/Nfut+Gu8Rf0vtGl9QLnP5K4hq9
F7VBqS/6034o6JiH1MGg9BdYmQxKPurnv4NyXuRLPhiSepOfB0KO+Ve/CDn8
1P8MSX7y++Zufh8qwK5Xuh3+ap91s94yxOOZbtaTAz/tG3tkvsGp+5mnj9P9
9nGP3Fdg69ceua9J/9Kw9D/p3xLm+y6f9A+EJT848YvwA9QPeb2Sn/Tf2+vU
H+3l+Rgn/S9wfMxP/bEkIu8X3XebI9Iv1M/hiLx3qIdlReQ+on4+HnHUQ98Y
5f4rpv4IRTn/PtL/TFTmifS/F3W8N66fo47+so0+6cc74e+ePpk/vDfKeJ+8
7/T+/dTH5ztN/l/ZL/qxPrNbuB751KMLcbyX+pl+uU+w3rx8gPPnYn3CPeB8
/94e4Pd5ht6/0wNyXuSzLx2U+t0NvS2D0q9g69tBPs9Zeq+VmMw7OLM6JvcT
1qtNMZnvjdD7RIz3q8H7nr4Yk3kEuwqH+P8Fm6HXOyTztAl6Hx2S+wlsH5L4
rjLtf0Fl+nU=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlUlsG1UYx4dAgaYSuGm6pEs6XYAGEAz0xBKYFkrSZunYzmInTjJxbMeO
E9sHKlDYhkMFlCXDdohEYaBsp2K1FMJysMpSlgjMhbAUmFCJAykwLIETgvj/
5m/pWbKsn773vvX/PW+J50PJGkVRji19K7+Vz6d7zu5a+ik1HrxYX/rVFgXr
tXMrKmxuvg2sHm1ZXmHvcJVhVz8S7BSaL6qw8YdgNzgTqLC1sQW89KmvsP6B
YGshWFfhwm8tPA+709Aq/MemwOVbWnl/VYWVXCvvg+2zvn3uyMoKl9bsFfm0
zCO+p++V4qnZqh3njad9+8lF+HNX7RP9mJ1F/MBNVV6D/NOC9fnJtcj/iX3s
B+zOu4LNVAqs3dAm+TOTPi/uANtTbVJ9pbfa2A+wd6ZNys+Kt0tcfKSd8VCf
+0Y746G+wLxg9eACWF/RIe431+J8+aEO3kc+yuuCnelp+Ne+r55fjfwv7KR/
sH1tJ8+jXuNbwVb9UfTHWrafempAvlcLdifr1yPf6H72cx36+ZVgc6YR7NQY
1Be4fKVB/2Cl1+A84V+732A+G9HP/wSbUydV9LMpSL1shh66gqwPbNwbZP/h
z3q1at+Efl4W4rzAejDE+SNe4a4Q8wc7L4V4fwPy/1ywe6QA/2ZnWPhrioHt
O8PMH/WVXghL/fRmw1I/1X/CrAf24oEu5gd2n+viPmE+gU+6eB/z0//qYv44
rxzuFvadO8HaqSrjvvl7tzRve0MP+w8u7ZHZeL+H+kI869ce1gO9Fdf1Mh+c
d3f3SvkHJnqlfJyFXuof/sqrI3y/cF/RI9QT7NpYhPoX+n0qwvmIftZF2X+w
2hzlvMDGaJT+hZ4fj/K+0PM7VTvmpV/fx/xgLyT6OB+w81gf9x9cnumjvsHK
mT7OQ+hhuJ/6xb6UHu5n/6An70Q/4zcif7ef84b+jNoY3z+w+2CM/cX9wPEY
+wX/+ncx1g8uXDAg7ZdzzYBUn1YcYH+xD+Y3A4wPts8blPIrXTXIerBvXmTQ
j3cI+2nNDdI/7MVzhjh/2N0rhnz7AXCgZ0g6r1tD0n4rTabkXwub/vvVDjbv
Mf18asD2Kybjiffh0mFf7w2wG4bM1uSwX9+yLcj3xWF/fqdEvp/x/DT8FTri
7Ifo5x1xqf/l5+OSPpTZuPQeaH/HJf2Vbh+R3gPv2RHehz/14xHpPTP+HGF9
sFubEtI8A88kpPP6hwnqRejBS1BPYGd9kizet1uTfN/B5ntJ1ge2f0nKel6b
kvTo7UrRDr2q4ym+l9BT8ecU8we79aPcH+grcPOoND89Myq9/4UnRzk/zEup
S1PfOK/dmOZ7ADZTaWl/bDvNfiHf0ttp7iPyMa7LcD5gayTDfUJ+xUcz0v+T
+2aG/Rb5/5jh/yvuO+YY4yP/8qEx7hdYOTHGeKhH+2GM/RT6Xp6V9O89kPX7
cxzn1WNZxgcbp7Pcr63I//xx+t+O/LVxnt+G/r7m21M/gQtfj1P/YOfcCfoD
KxHyItj+coL3Ea+k5Khf2L3Lc/48TiO+2p2j3sHGfTnWewn6+W+O+wV7YEee
egDrobz/PmwDF+7O+/39Auy8nPf1snu7/j95O/B4
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVVXtsU2UUv07xMU1scIr4gEskYwMcF+YU0ekFhcnY47Z7dN267bZbu3bd
o4kSzXxdTQgK6opgDIlgdYr8hQ04negfN/jAx6I1MU4UsZN/jEOtj2liYnT9
nXOWfE2am1/O+b7vnN/5nXOWhYd9kSJN047O/Qvfwu/Tzec2zn3S+/cvM+e+
xizjmumlBWwv3QJsTv+jF3D+AGF9R2J5AesfbZHzpQVs/T7vv6KAnetqCBdP
lRWw+QHhuR/syV8Ju0sWlBdwevE9wPboCfhn7yJsVh6DvzbE9okl8E+dI5wb
S8LfvWorsFNyBP55k7B+pAZYT2zlePzwt55j/5kvYM9dUUv4xCzu99xRy/nO
rEb8sVp+L2Mg/mcJu5OTaxD/u4S18tOrwOdt2yQenLcjgitWIv5RwtrUGN5z
3yasBy/H+fzZbcI3zjvhOuED9sxTdVyvEO7LvVnHfO5Afp5pwk71LuL/0nq+
fxTvZZ+sF/5uBL9vMPaux3vGmXrOr47iv7iB36+Ef2pdg8KP9W2D8A1+nAWN
FF+yei3iXdMo/ICvXKCR9TICnPy6UfjE+XSRxfU+A5xdbbF+TNyn+S05vw7x
Psb+o49Xgc//CLuzP64Hn+Ve5qP4Fuih2ct6eP4mxP+IV/jA/c5hr+i5Enyu
8Ikd2PT6pD44n3zQx/ctgj39qk/0hfiyn/P5kS9xv93QxPdvAE490CT9AX/3
5XmM/POTKtb/bpJ6gr/M9mbm/yTsuRebJT5gzyfNzH8Q2PyzWfoN57UDLVJ/
YONkC+vzBtTb/k3wWAXivbaV+S2D3d08j3G/9X6rxAd/55dWzr8EOHO1X+qH
/HOb/Eo+nkE/852Hf3rGL/kDZ69sE/0Da2ab6A/Y6G+T+UTx71NxfmGA73PQ
T3p1gOM/THruC4j+4e/sCSj9nHknIPzhvLmhXfhCPyZ72yU/2NPPtIv+cD47
0S75wq6dbRd9wZ4Kdcg8Rj7u7g7hH/zkxzuU/PVch5wHtoqDCn+5J4JSf+Tj
ORYUfdJ8+y6o9Hfyok6pF3B6bafCh5HplHxRb/ubTtEf4ktd0KXU363okvlN
em7r4nlbRf021SV8wZ45r1v6mfS8qpv9x0nPrd0c3z6cN51ufn8n+kcrt5nv
WpoPTbbUl/rvYVv4pf57zZb5DqyXhlgvp4AtK6TML2ckxPFsp3hfCcm8o3g/
C3G+B5F/sj4s8YLv9P1hhf/sS2HOdxOwNhlW9GP8FRa+ic/7epT78wd7FLv+
cY/Um/TwR4/sF+rH63v5fS+w54Vemeeor/lhr6KvZL5X5iHtu2siyrzI3h0R
f2D7vYjMH5oXP0fkfeTnLoqKPmnfbYwq/aEPRGWeUL/9FFX2Ua6kT94nPd/Z
J/ub9BzvU+PfK/4TNC8WxpR4jNtjsj8Rjx2NybzA/kylYnI/7evjMckP/tat
cfZfDOz0xBV75um4zA/a12/FpT543/NDXPqb5oXdL/sO+yS7q5/5Pw59aeP9
0j/Axvf9ok+ad5ckWE9F1G87E1zvPaTvownm8zL0h3U6IfuQ+vHCAa6PAXvG
GGC9dVG/vT7A+VTAnjw1IPsM+zB9/iD5Rw8Ba22Don/s59RXg8p+dbUh9i+F
f37lkNQf/nrLkPTrzYj30SGeV/din+f+FVwJ7CkblnyBTd+w9DfOJx8Suxc4
fWgeV5n/A+RmBNU=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVVllsG1UUHQplCR+12kApS2q2NmlL6iYgsQWmhZKSZhk7TmInTjK2Y8eO
E8cSVKCwDR9RoVDiQvtRiRZDWCohFatQCJtkhb1E1PwQlgITKvFBCpglgJAQ
xOe+gzSWotHRve+98849975cGhn1xZZomnZk8a/8Lf8+3npq8+LHmve69cWv
Z0Hw4q+qjM3VtwHb3qnVZVw6INiqPHxZGbs/FGzGv7+ijI1fBRdmmteUsXVx
o6wfq1xbxvp7gnON4SvLOPOzYPd4CvHcqm2yfuEQ1hdvEaxXzCJfS29T++1F
fvaUwt5rkV84/3byQ35JF2xOVQG7U4ILVUuRb+xT+Q27ELdXNBFjf9dNgu3J
Ug34J5rUfgevAv/Hm8hvPfi/JVirOVENPW/YTj2w3owJ1uvrhf+EYHdoQvi/
vp33R7x0UnAu8zb2syLNvA9w/tFmxrHefrWZ9cN9XHMqvn8VsH5uC/kBFx8m
DoGf9kqLqs8czvd808L64Tzz7FbmA2frWllPYOOrVqVfxQbwXdqm6lFbC74b
28gPcTvYpu6/DPplPm+jPtA3t8SQ9dMLyC9uMMgPca3LUP6LbwTfB1V+w7FN
0PNfg/tdAz1rvIpPuh5+8Cs8vQP5xv1e+gv7W4e8qr4rEXet9Qnfwzs90NMr
2JzYgnjmHh/vh3juOZ+q/wz4FY/76Bfsb7a2s/64X/Zuwfrc34gXnmF82Trw
n2lX/h1Hvdx/tjvqld/hJ3/Uw37Kr/xUjXzXMb86v0v8/Luf95f6H+hw7O/5
oIP1k/r/0qH6IYN49qJO+g/nF7Z20p/ga7zb6egH66dO9qv494Iu3hf1t7d0
MY71rhHGx3Bebl6wNjuJ9cXzAsrf+4W/HlDxy4X/UMCRb+4NkD9waXmQ69E/
7oYg/YT7GINBh/+tPUHqJXq/GSQ/rNev76YfZL4NdLNfEM891s1+wfriVDf1
BtZOdrNfpb/CPTwfehQe6aG/oFfpaA/nr/jB7uF60b8iRD2A7YdCXC9+eDnE
++I8/euQQ6/MWb30C3BuUy/nmcy3fC/1w/7ml730M3D2jD7WH+cVavtYb/Fz
4H8s82K2j/2O++VP61fv06fij/X91B/5rs5+xzzWrX7qj37TakzVr42YP552
k/yl/+4zlX8bgLMvqPzxeezvXhN2zCPDCLOe4G+NhTnvhO+zYfIXvT8Jsz6i
Z0uE+sh7d1eE9RA/Px1x+mEmQj7wj+ePCN835BfujLLfoW/pYJT1FD98FOW8
ATZ+i7Jfga1LBjg/xA9PDlBPmQ/vD3B+4D6Z0gD9Lu/dhTHqB1y8Ncb+Bzbf
iTn6OftjjO+v8F8Zd9y/tDlO/XB/93Cc/pV58UPc8d7YlYOO+eW6eZD9IvyT
g/Sv8H9iUPljGlhbnnD433NjgvfH+WY8wfqjn7PZhPKjV97rNxL0v8yL65LU
A9iKJpU/5P+J/O4k+xPYfi3pON/1XZL1En+YQ8ovx/GeFHcRT8j7d3TI4VfP
t0P0m/TjOSml/xTipZ0ppbeF/nAfSbH/gI0TKeoNbJ057HjP8p5hvmfoJ/2l
YfYD4pkvmK/Xgf/pI2q/KLAWGOE8AM5+NqL4vyjvtZbme4N4aV1a8f8L2N2h
8KTnavB9IM36A9v/pOlXYFf1qPKDH1j3jfI8vP+Ze0dVfe8Azj0/quq7p07/
D3YH8yc=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlVtsVFUUho8oovWBEauIIg4vSEVhoKLcSk/RUuj1zPQyvUzb02lnem8n
wUaDoqMJwQvYQTGGBHAQrTzpBKzWy8MERRQbGRNjRVFPJTHGog5i1ZgQbf+1
/iZDQqZf1tpr/Xvtf++zONjvC80yDOPY1P/p3+l/nxVeKJj6MXOP321O/Xom
haMnBpZPs337ZuEJLzh9UNjZnu2ZZvcnm3X9JbD1h8aPpMHRhUVg9xtzVk2z
eVJ46q+V0xz5XdgOh8HxBVs0boBT9ws73hHUM/oYjyIeu7BF9X0BTt60FZxc
NBv90qawe+eyXOjtFo5HLiPfenGr9v8J7NxQrLwE+a6Nwu7AGdHfUaz7iyAe
eb5Y+xUiHv+gWPVcD/asL1H9/6C+HSrh/LA+NiicnDwq+t8tUb0T4PT5Eq23
V+YZLNX8pTiPxO7SjPNz3i7lesRd46Wc3wrov66M+0e91NNlPD/0M94q4/xF
//fCydFRsH1Nucxn8EmZ/6ryjPlZ3wobOeeQH51doet3Y7+JFRXafwfYqavg
/mWeX2u8qOUezHOWxf7g1F2W+ukU2PBb3M+90PvETPw+zPM/4Whe8VrMM8cr
+saOgN1VXp4X2HrMq+ezbw30H/Xq/obArjt81I980+vjvNZB/yM+3U8H8uOv
+bReFTh1ZiYfbJdXyvyz5oNjD5PHwMlXKqkX+0mPzuSD3X9X0t/Yf2KgivNA
3Hm5Su/z8GroP11FPyPf/LOK9xP5xsFqre8He04J2yOHsN6+WK1+PwmO3VrD
+eE8koU19Afi1kc1Wu8lcPS3Gj3fw6ifuNmvPI79Opv89DPirl4//SzznPCr
n9dg/qkba+kP0W/W8j0QP3TV8j4jbu9jfqnMc16d3mePzDOvjv2x3monbxM/
7K1jPfRPvF+n8ysSP6yr530AR9rq6Qf4I/5cvfrxNDg1Ihzfv2A99J8n70c8
1tIg+dl94OSzDXw/xM/DDby/4menQe9fAPlWVkD7ZSHuPBVgvvj5eED3nwCb
3wV0/ULRP6dR/TMp81/ZyPcM7Ek0ar1c8fM3jdQnfr6qSf02V/y8vCmjf7q2
id8X9IuOMX8Q8cQVzRn7dZY1Z/R31TTTb6I/2szvD9jIsXn/RW+lrfknxA87
bPoT5x173aaf4Ff3khbqQb5ltfA+iN7tLZl6XyXPFb2ft2S+D2VBfp8Qjz8U
5H1H/dThYMb9MEaD2q9J9P8V1PoVWJ98sJXnJ3441MrzQz/3p+QD4odLrfQ/
/Ba9rY3zA7sOtKlffwabH7dxfuBIuk31Ld4A/beE2F/8/ECI5wO2PwypfwbE
z7+GeD/Ez/PDGl+N+umCsL5feajv7gnze4B44pcwv/+IO9nt5Dzoz29nf7DZ
2c7zRH7khXb6A3FjXoeex06wZ0NHhh47LGyO/yv6Yx06r02ol3xvJh/rrbWd
vM8bMd/WTs4fnNjTSf+BnXeYfxbs+lHjI4vyMV+7i/M2Md9nunR+YbAx3KX7
T4I9PzA+BLav7eb9BKd3dXO+qO8+1s3vHfpb57r5HmM/0at7+D0X/Z4evo9Y
b77Zw/uD+pGzPTxfcPzKXvYvgN7aXu33JeKxr3r5voOTRp++BxdF7519fC/A
7mryNtSzHp+Jg53LfTwfsGtpP99TsOnr1/d6F/YTebSf33OZ91A/95Nv/g89
TQqN
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVln1sU2UUxq/zA0UTK6KIItaYIBOD1UWFwcYFxck+b7uvbuu223107bp1
TZBoptOryYIfIEXxDxLAIoomJtiAU0T/aPADxUVrYpwoaif/GIdaRTQxIbo+
5zwml4Q0v7zvPe/znvOc8+7GnpFAf4lhGAdn/xd/i/8+XX967eyPObf1LnP2
13dWuWwj2L7hPnB+dAe4sFvYKN21osjej4XN6X+wbv0hbEciWHcWVWn8qZVF
Nj8UTu/cCU7+puvTo+VFTi+8H+zMfHF3kXP3CBtT+8BGQrn0JOKnTnO9F+vZ
qzdI/Kq9otcUtreV3Am9ceHs2Z9E7wsb9H5N4PyV1bp/HeJ5KqtdesxoNe8v
+p9TNgxw+j2yg/2+VTVgb+hy6LX7lcfjWE9tq+F+6Mu+I+wcnRD9p2qoR/LZ
U6v1KcP3mS21rvrl3xLO+1cgnme6VvPdBjYvrdP7XAHOPSXsPVCF+MabwtnJ
SdH/fR3ji/6L65lvyf8dwk7Fcey3vq1nfZAP58IGibd4/Srova2BfsJ6vq2B
9Zd8ft3A8ySfJRbzC3/kbrV4f8QzWi31236w73GL96lEPv+1WG9wodQv+w8v
roAfmvx639rV0P+oX+vzOu7jvObX+yyCHs/NAeZT/OwPaH2egL7kwwHdHxL9
rwRc98t9LuzMT2C/Xd+o3x/FeuqhRr3fGXD2pUbN15fQU5hsVH9skv77m/sP
iR82Nbnyl3+xyRXfc7yJ+cP35p9cL5H6726W8/Ylwb5jzawf4tu/N9M/4t/r
WugX8e/6Fs3/HPHDBy2sn+Tz1xZXv2auaXXNi/w68hKwZ7jVpS89Q5b+zF0V
ZD1EvxnU84+JfweDrvzZO4Lqh6jkc16b5muB5LOijf4R/QPK4zOif3ubzpdp
9FvmXe7fLPOhvF31nEC8ZF+7W/+z7eqHcnDucLv6YbnoP9XO+SX9Fe7gfBI/
PNPh6q/CRIfeZyn85M0Lp5PnsG7NDdGPWM8/GWJ8sOdQiP0DNr8LcT6Ln+d0
6v6wzOfbO+kvsC/TyX5G/9nf/L8fnLqgi/nD/uzyLvYT1gvBLt4P7Ex10Q/Y
nzmvW/1jYj2/rJvvgehv6VY/bpd+dLr1vGVgo9Rmf4ufG23OX5lnYzbrJX5+
VTk5BvYuCbvmo2WFXf3njIapD+dlXg6zf6T/PgvTbzLf6npYH/gn/WAP94Nz
e3t0Pu1BPxmT3D8G9v1FrpB+e6BXvy+AC3t6WR957z7hug9snellP4Od6/vY
rzjfs6uP9QKbH/Xp/nFwstDHfhf91/bTX9KP9/azftJv7/dTj+T3F91vZPF9
dkGE807eu7UR13zwDkW0Pw5Iv/0cYT7lvZs/wHqI/jUD9IPojw244iWfd7Mx
L8p5KH//rI6yX5EfOxJVfywsg/5UlP4BZ49ENR+XSX5XxjiPJb+9MfYDOLM1
5qpP/u0Y55O81z/GNN4WcNoedL0HuacHmQ+8V8YE1zeCfT8M6v1ukvflkjjf
O+m3zXHOb7yH3oNx+gfvoXUyTj+DnYuGON/AGd8Q5y/OM98Y4vxFvOQJ7q9a
A/3nD7veXyM4TL9hPfXVMPOJeFkjwXkELtySYD3kvW5OcF6L3scSnD+Inz+X
YL3AnqUjzDfYDChPHxG9j4wwX6J3/wj9WWn+ByJz+hE=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlVtsk2Ucxj/OiMY0METkYLkAmZhRRaOo028cZOzQfe3Wrdu68a3d2m7d
ul5INCj6aUJAQVcOBkkGVlDmhRkVnA7looocFKL1Qjl5+IB4AwhFQb3AA33+
z2vSJUvzy/89PP/nfd73mxXs9XaM1DRt783//G/+79jSS2U3fzIzDy3Ub/66
rgtbF799JM/m3U+BtRMhcG47ubi/NM/Oo8Jm+LCeZ+M3YefgkUV5tqYv4/jp
S/KsHxJ2BvZgfOIKec1FjE9NLQenEqvB2cXkZSPK8qzFy6nvA9STl4TN4X9Q
z9yxHKxPeBic05cXzHfGhO1dCcw33lDjT6BuT6qg3gOL8+x4ooL6jon+KHlw
XDn0bxI2+4LLoP/A/4zxrscqVb9gs0M4tW2b6O8TtopuB2f2V9LvUdg/d571
z6+DrWCVnNf18eD0hirqm4f59kdVnL8Y/TjOCusLNoP1W6u5/37x9xXFp5bC
3w+rOX4S2PUT64kW0T/eLfsffx/15ANunsdGsHHGrc4f/lhjapiv2ZXQO79G
7bccehtr6M8VcOJkjcofxqdGGtKPplVB732G8qsaehuEbc9J1F0vcXxxwAM/
/zWUHi/8LPbI/NJVqDvrPOp8a6D/BQ/zUob9rfc8zMdWN/y8x8v5XWDd46U+
HfMTz3nV+UFf6l2v8guc/cbLfOzE+qa7lv1cRv/JZxWXoJ7ZWct8z4SfueOs
l1aAnX8K26seRP7SK+t4H+eIv28VsuOrOqUfrF+rY7+fYT1tu4/6RqLuOuJT
/mF986pP5U/0Tqvn+fWhnllaz/nnUDe+qFfvi+Thcr3KFzh9Z4PqF/7Yixp4
nn9VQG9Pg8oXOHWxgfMXgLOT/ewvDNZ0v8q36O9SvBBsbvEX9J+b2Mj5u8XP
0saCuhFp5PlaYGtjY4Gf6U+F9bNNmK8/2qTeJ/iRaG/ie5NEPfV6E/NxEJwd
bmI+NmA97bzi29BPsq2Z/g8g35n1zXwPfPArN9RMv95E3Wk3qzyibkwIKEZe
7XUBdR8lz/sCyk/J848B3of14MS4FqUXnLq/kF3pFo6fZsDf0y3M42hwcnQr
6zHcj0xJq/Ib9Zyf9cG1uI/WiVb29xA4PWIF/XOC7XkrOH4K2FG/QvkH1i3F
N8Bascn5NthVa/I+y37mapN5XgdODpjKX3kf5rSp7wHYMBRfgn5rVRvXi4je
d1jXXKL36zbqCWB8ojqo8iJ+PhPk/ZkPf7JvB3nfd6CuHQ9yvxs4T9cfQeqb
jfUyT4fIa8TPHSHmfSrY+WWI65WAjd9DPO+Q6J/RTn8MsKO/nfqF9cPtKg+i
P9euvqfoL3VXB++7F5xd0kE9h8Tfgx3M20rx91fWi9zoLzMlzLxckzyXkXel
wc7usLqP4PSFMP07Le9FUYTr/yJ5fjLC++CXPHdG1H2U93lzRL2n6EebGGU/
s8Tfx6Nqf9wnMxxV75vcx2SUei6AM59EVV4x3ljYST9eBluhTubrKDj9Wie/
p6vB9sednD9Z9J9T48vl+2F20f8z+H5lX+2i/jhYG+piv8OS759ZD48V/2+J
MZ8D4NzaGM/Xxnzn3hj3/w5s/BDjeuvA1thu5q8fnHZ1q/cDrO/ppr9XwYlT
3ZwfrYP+UT0cPwas+XuovxWc/L6H78m+WvipxenfJnDu3jj9mIvxTl9c5dsH
vS9y/PAg6vbfcb4PEbBjbi/3HwLr3l7Wt4ITz/cWrJ/a3cvzmVGr/wdltxHk

         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlVlsG1UUhodCKYQHTBrapkvqAG0TQMWQF7bAtFDSpFnGzmYnTjJ24mzO
4gcqUNiGhwooSwyUh0q0GMrSp2K1FMJSyQpLoUTgJ8JSYEKlPpACAyUgISGI
/3P/SDdSZH065977n/+cubc8Ph5KLDMM4+jif+G38Pf5jnPbFn/MotmV5uJv
YEHYmQ8WF9jeeA84t1BxRYG9A8LuRMmqAvs/FTarqlYX2PpjKV5aYGd9DXjx
b32BzY+F/UdOIj/1m3Bupn5NgTOlO+X86QVw/q6d3A/5xpiwOfcPOH1O2J6c
hp7cqlq1fw3YM2upT/Qma1mP6H1B2KiMIu6urJN42R6c77ujTsVPg81B4cz+
/Rug/7k66gNnPqjT6g3ctovnr4OfCWE3OLUW+id30X/4lXtXj3tnhO3+s2An
Xi/np06As0/Vs36sd9+uZz2ozzdXr/ljXtag+ZF/okE7z3hLxecmwIEfGnT9
lzSyfnD6pkbWi/qt7xqZ74fe5U3UA87e0ER/ke9GhDM1c9gv9XUT9yuDn8ss
6gPnr7c4n+XQ2664uugq6H3UUucfuwZ+/mexHrBXGRQ/psquxjy0BLkf1lsP
B5W/1Ruh/3BQ6V2O83xbQpxP1GMGQ6p/7VifeiCk/ClFfuY1Fa86j/z8lyHV
j+1gu7GZesDp+4X9e+bBuVea6Q/0eDPN3B9x/9/NnHf4k93dwn4j332pRdvf
d6pFzes+0f+nHjcOtCq/bwYHTgobs4ewv/17q9bf9Lo26kM8t6NN6U8ibn1E
nkfc+bWNfoveNe3cD36529t5H4je0XbOA+rJzAs7JVtlHq4Mq++jH3HDDHNe
wIHhMPsl+veF6Q/mzyuOaN+zvzrCeUK+NRBhvuh/NsLvVfS/H+G8gM1bO9T6
veBUX4eqZ0b0P9OhfQ/5KWF/dFL8P6OvT8c6VX9XyDw8qTh6OfzyjndSj8yD
20m/xP+iqNZf9/GoNj++Y1GeD33m91HeZ7i/Uiu6WB++z8yNXfQHHMh2sX/I
t7/t0tanL+qmPuTntnZzPeJeuJv9g//ObDf7hfzsBT2M4z5yr+vhPGG9r61H
u09MZykf/hmVNvsLDjTbWn/th2zt/PQbNv3A+f7NMdYDtqwY65H7eCKm3ffZ
V2OcP+S7X8TUvB6R+60hTj9xX2fui/N+kvfu5Ti/Z3nvZuJcj/s68FecfiM/
d2+vpsc72Es9YP9nvawXbJ3v5fxBj7OhT72Hh8G+F/s4L2Dzkz7tfUh5ffRb
5mFtgvmoP393Qnsf7A8T9Ffei18Smr7c6n6NvW397C/88Y/o8ezPOrslA1o9
vjsHeD7i5tAA68d8p54f4PuPfhvFg1p/A7cP8j7D+Xb/IM8Dp9ODXC/631ta
L/7eMqT55fQOMV/m4+kh3n9g950hfs+YR99PejxjD7O/eK/ye4eVn2fl/Ts+
rL1fgR8VT+9G3L40Sf1Y7z2WZL/l/Tua5H5g63RSzecJsHPxCPfD+5kNjHA/
sPnmCM/fBH+/YdzZDP0XjnI+tkBveJTzAE5/Narl54wx3u9g79ox1Y9y5Ptb
x+h3BfQ+ovKrT4Hdf8f4foB9FeN8z8BmaJz3OfZLPah46iA487rKP+RtMv8H
q9Dc8Q==
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlVlsG1UUhodCWQIIq033NnVbaJMSiqEvbIFpoQ2kWcZ2FidxkrETO3ac
OJagAgUKw0MFlEKG7aESLYay9KlYhULYJKvsEFHzQlgKOFTigRQwS0BCQhD/
5/6RriVr9OncOfc/66yLjgZiCwzDODb3Lz/Lv093nNk298hX7b3YnHv6ZoW9
4fGLymyv3QnOHjgAe+mgsFkx5Smz9yNlr59eXGbr9518f3mZndX19L+kzOb7
81xZ5syvws6JWXB2xa3CM35w4WbhuR/8G2nhbKYO/twzwnY8jvP5pbfxPOwl
U9ipPIr3vSlh79F6nLeeEjanx8DFxQ30v7TMnhuFza1bEY+ZaKDeFdD/uHDR
P7ES+t9uYL5WIZ/X72K+cN6OCdsTVWB3fN6+DPrf2EW9uK90Wrg4Vgn/TrSR
/vF+bn+jpq/4WiP1iP5pYaeuAv7NC5uYf3DhoSbGA73Gq02sJ/z7vmtifmC3
z28W/4czYPfqZi1e65tm5n8t9C5sUfEe8kLvlS3UVwW9nS2sH85nvmxhvOuQ
zwWW6ofP10NvrbA9vv1S6O0Qzk/u3wC991sqH7fDnv/P4n0bkc8av/a+t9XP
+HGfda+f8UKvc8TPfMHu2RRg/aDH9AdUv7wDztwtnJ89IvpfCGjxFE4G1H27
4d9uDqp6bwG7dwWpD5x/Lsj7ka/SZFDlv7QG+v8Osp/Bud2tSv8/kt9nWllP
sOeTVvYL/Jt/tqr8TcJuHGzT6uP7sI3zvBp6f2tj/LjPXdVOhj2/Q/H4Cdit
99rZL7A7v7Sr/FSDc8s76B96its7OP9gz0gH/aE/sjMd7DfoKywJ0R/shhnS
7L6hkNaP9pMh5lfyuaiT+QB764SNqcNga7BTy5/zWCf7RfL9Vif9g83rupg/
zENmoIvzB3v20S76Axcmutgfov/0/Hnph0i31j/5h7vVfQ7spePd3B+iv9it
+bcqwtwn0g8Phhkv7vO8oux1+0T/t2HuP5zPnNej4rlG8n9VD+sF9uUU701J
P3/do+lzz+lVeiLSz1t6mf/10B/qZf9iHp0pxeGTmOfcWX2qHhtgL17ex/vB
nvY+9sdl0O/00d8m5LPGVvvlR8y/L2hz3nDe3mNznnCf+5Kt9JuyHzZGmC+c
t6yIpscZi3DewbnnI6y/6P1Mna8JgzNNUe5DxJ+9M6rsp8CFZ6OcF9TbmIyy
H5E/319R1kv64Y5+PZ+H+jkPsHs/Vly1UPbbH/2cV7CzZoD9Jvvt6QHqkf3w
wYDaD42wZ0oD7DfZbytj7A/Zb7fEGB/YfjfGfgK7P8dUv8xIPyyLa/pK2+K0
i/7hOONHfLmf4tyf4GLloHbec9Oglh8zOcj5QX0zTwwyX2BjUULLt++GhOqv
S0R/PKHtF9dN8D5w/s2EVh/r2qS2P5z+JL8nOJ97JMn9IfP4elKbH88PSe17
kLWHWB/0b2HfkNK/AGwcH+J8oz993w9p/WtfkGL9YC89kKI+zIf3WIr5qIb+
UylVrz1g59xh3g/O+Yb5PcL75svDnA/YM18N83tSA/1nj/D7CDZCI/yeg90v
Rtgv4LyRpl5waXOa+jZDb1ua+wVs3ZdmvWuRz3/T7G+wp3qU8wo2A6Pstyug
955R7m9w9sVR7pda83/6B/CR
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
9sHPy7eGwrpg8sjHCwofRweK/gMQJstH
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.81672*^9, 123.42123956195378`}, {3.8168064*^9, 
         123.82248248084116`}, {3.8168928*^9, 124.22372539972854`}, {
         3.8169792*^9, 124.62496831861591`}, {3.8170656*^9, 
         125.02621123750329`}, {3.817152*^9, 125.42745415639067`}, {
         3.8172384*^9, 125.82869707527804`}, {3.8173248*^9, 
         126.22993999416542`}, {3.8174112*^9, 126.6311829130528}, {
         3.8174976*^9, 127.03242583194017`}, {3.8175327349426394`*^9, 
         127.19559304188874`}}]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
O/Tbk5cmWOm/mgSr/Mi7YzZ33bO2E/wf1auzoQ==
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
GUn6P3NRtBk=
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwlz39U04Uax/G5NHQcaJmIU4JJcthV0gHiEPyxb+bENJjkuHJDXTj8hcRk
oeAPmFNADHITfwWaX9AMze5mGuQPxlTUhMYdpIkKOi+KJl9oGqQxzR4/POc8
5zmv57/36OT0+BQ+j8fbR/vq0jgc6RxTFnTpwV9smPzVw02eNKcobrAFlgZp
OaZJG189vBZWx5FX7R4RENQIG7PJHmdv54e3wbaD5Iq7h7oZDnbZyVM9UhOU
blj8jNwSEmpdJAh/ZWXgao7RxT8NShPB+rlk76ya4vUS2LKGfGT/5t5CGexk
ye9fmL1wrwIWNpDvPHzj4mEVLO8lr/P+NeQHDawNyOAYn4n7dl7QwexssiUx
+XmTAXboyHNyJRqnCeZ9Re441N3QzcLSn8ib6k+GvzDD6idkP9e6Ms9a2Oin
45hqH+a1kY2wTUGOj/ZIlbTBLi25S21vnsTB4jLy1vySqJnu/v6L5HeOJVZ8
JJiI/t/J1qYAQbIItog+45jEp/dXayWwcwa5x+/YjRwZLPyUvP29DKZYAcv3
kscujzxSpoK158kXi/8WHtXALEdWn6jL+lEHO4Zncoy7ZZvzkgHmMeTdfytj
rplgaSo5dIyvpZ2F1bvIP89u831iho215GXpB3N5tbDtNzJ/14oH3o2w6601
HLP/9IS4t9tg8TRypLO3ahwHK5eTfxl01j/K3d+/g/zpOEN+jCAC/WfJQ+bF
dCeIYGcH+dAa74QUCSx8cy3HTN93tUYng+XR5JvnSoMMClibQs58oC42qmB2
O1noFdz7lQZ2nCJ/G9aV9J0O5t0jKxacqDtjgKXeWRxzd2N2SL0JVkeSNxyc
vrOFhY3JZN8rg553mGFbEfn77oYlvVbYVUX+cNiOhtcaYfFd8sPJC8KHtsFK
z2yO2bzYv0zMwfoIsn/ePf4Ed3//YvKpo0dXThVMQn8heb5D2zxHBAtPkn/v
nRT1Hwksv03eNupF+XIZrB28jmOCmAtD1ipgNoxsW1q4Ok8FO5LIHxfF3SjR
wLwC8p/HfZgKHSw9TjZdv1VpMcDqW+SQF+XCWhNsHLSeYy4HLs+ys7BtAjk5
Zrzzlhl2JZJfpPXMemSFxVvIe0tOm5/ZYeV/yeGn9L4ebbC+hdx4W5Hrw8EW
/gaOWTHQ68E77v7+EPLAsb/Ehglk6P83+UDcl1VyESzfRI7KXOwfJ4G135Kv
lQblL5TB7DWy1tbZlaqAHS/Jnh3HVetUMG/sRo457JlVs1UDS+eTmdBpQXt0
sDqH3JowsPhrA2ysJK/dUN9zwgTbmslDK4xJ51nY9Zz83eWEOocZFgfncExM
l1/IHSusnEduH9pe0mWH9evJOZFH3O5W2PI1WbQofYmAg53/I5/cHNEwwt3f
30eOO+IOCxZEon9MLsc8ajxXGiGCtbHkvJ4C/vsSmM0ii0fGroyXwY4K8pnp
w5rVCphnJyek3JycroKlT8mPt7HlGzWwerSeY4osS4cU6WDjHHLwryGrSw2w
LZN83v2kpdIEuw6QF44+Ja9mYXE9+Zkit/KiGVb2kEtWzRRetcJ6/00cM36H
Z9b/7bAlhnyluumOqxV2ZpA1bXtmveyEhfvJL/mLzF7u/v7L5FLJGF8/wWT0
PyZHxD7KGSuC2VEGjnHoLB2REtgxk5z65ZrYWTKYpyW/XjulSqWApaXk8nt8
f40KVteRpwiu5GVoYGM3+fqE7V16HWwbsZljMlQq1XYD7HqP7LV+VM1+EyxO
I1eyd8ccY2HlHvKMS98UnTbD+nPk251pPT9ZYUsnOfvNiUnX7bDTZwvHDJP1
XbjfCgvlZHOSbVxPJyxfSf7AkF/Cd/f37yTf/2auWyiIQr+VrLcPXRIggh0P
yaP+aKl/VwLz3srjmKoRB8KmyGDpVPK8aSmlHyhg9TIyt2QcP1EFG03kgsLH
K5ZpYNsZcqC5uilTB7vuk2uubpy8xQCLhfkcs6BvRvkOE6yMIv8RIBhSzsJ6
DfmLmQ6t2QxbviD/K3V3S40Vdv5IrjMmyX+2w8J28uKqwMqbrbDcq4Bj+m49
fOO3TlgrI+8aYF77tK+//xOyNDjzziBBNPo/JzfMjZ41TATzqshLMwaYAyWw
1EkesPfy8FAZrBZs5Zh9NcU50xWwcSJZ1v5Rx4cq2LaI3Dx4ZGySBnZtJaeN
d/6wUgeLT5AHzz/8drYBVraRD2avyiswwXqPQo6ZdiCsaxcLW0LJN+qezT9k
hp0fkz97ZD37vTVa/g/n0Lkj
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zU1mYprsf13Luh4=
         "]]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.820772010369985*^9, 127.19559304188874`}, {
         3.8207808*^9, -10.040890994520872`}, {
         3.8207839579422383`*^9, -59.3259884031479}}], 
        LineBox[{{3.8227612301509676`*^9, -59.3259884031479}, {3.822768*^9, 
         41.24789137636288}, {3.8227713834875455`*^9, 127.19559304188874`}}], 
        LineBox[{{3.8175950845119653`*^9, -59.3259884031479}, {
         3.817631865032258*^9, 127.19559304188874`}}], 
        LineBox[{{3.8181642226163735`*^9, 127.19559304188874`}, {
         3.818188198010542*^9, -59.3259884031479}}], 
        LineBox[{{3.820183491580212*^9, -59.3259884031479}, {
         3.820198606573697*^9, 127.19559304188874`}}], 
        LineBox[{{3.8233792450306606`*^9, 127.19559304188874`}, {
         3.823386032951168*^9, -59.3259884031479}}], 
        LineBox[{{3.8253285345671573`*^9, -59.3259884031479}, {
         3.8253353013949227`*^9, 127.19559304188874`}}], 
        LineBox[{{3.8259889179713264`*^9, 127.19559304188874`}, {
         3.8259930635717626`*^9, -59.3259884031479}}], 
        LineBox[{{3.827492014286996*^9, -59.3259884031479}, {
         3.8274963858484335`*^9, 127.19559304188874`}}], 
        LineBox[{{3.827530539666792*^9, 127.19559304188874`}, {
         3.8275324908188705`*^9, -59.3259884031479}}], 
        LineBox[{{3.8278934097760067`*^9, -59.3259884031479}, {
         3.8278973794858704`*^9, 127.19559304188874`}}], 
        LineBox[{{3.828601495156992*^9, 127.19559304188874`}, {
         3.8286041719666834`*^9, -59.3259884031479}}], 
        LineBox[{{3.8300487380182457`*^9, -59.3259884031479}, {
         3.8300515681703844`*^9, 127.19559304188874`}}]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Odlf/+6Irx2s9SH/5GM0r9TFV/B/bQTs4w==
         "]]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
H1jxJXmGsdL7+hpYHURO6WzO3hbMF/wLeMawGw==
         "]]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
d2fTgTh4Mfp/II8Oj4GPo//NihId/wMhS9Ne
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.794688*^9, 3.830112*^9}, {-59.3259884031479, 
      127.19559304188874`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"AGYS\"", "\"EXPE\"", "\"NCLH\"", "\"TZOO\"", "\"CCL\"", "\"CUK\"", 
       "\"EVI\"", "\"INT\"", "\"RCL\"", "\"SABR\"", "\"LIND\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8168039392926364`*^9, 3.8168879900279617`*^9, 
  3.8168882289508066`*^9, 3.816888379940573*^9, 3.816888767251402*^9, 
  3.8168913261405315`*^9, 3.816894089977439*^9, 3.8169585470754223`*^9, 
  3.8169623758839636`*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"cc1f019e-03fb-48ad-b1a4-566b3b02057f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "I", " ", "realize", " ", "now", " ", "that", " ", "my", " ", "code", " ", 
   "was", " ", "not", " ", "robust", " ", "enough", " ", "for", " ", "me", 
   " ", "to", " ", "create", " ", "a", " ", 
   RowBox[{"GIF", ".", " ", "I"}], " ", "needed", " ", "to", " ", "get", " ", 
   "a", " ", "string", " ", "of", " ", "forecasts"}], "*)"}]], "Input",
 CellChangeTimes->{{3.816891347239204*^9, 3.8168913475034475`*^9}, {
   3.8168914076215153`*^9, 3.8168914493457437`*^9}, 3.816891499185772*^9, {
   3.8168915401194477`*^9, 3.816891567813947*^9}, {3.816891599371018*^9, 
   3.8168916272650213`*^9}, {3.8168916581664104`*^9, 3.816891660205243*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"7362c33f-5356-4e1b-a82f-463607b53956"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Here", " ", "I", " ", "redo", " ", "my", " ", "code", " ", "above"}], ",",
    " ", 
   RowBox[{
   "with", " ", "the", " ", "intention", " ", "of", " ", "only", " ", 
    "inputting", " ", "symblist", " ", "once"}], ",", " ", 
   RowBox[{
   "and", " ", "being", " ", "able", " ", "to", " ", "create", " ", "a", " ", 
    "GIF", " ", "from", " ", "the", " ", "result"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.816891664039335*^9, 3.816891766817839*^9}, {
  3.8168917993206778`*^9, 3.8168917997306867`*^9}, {3.8168918731198773`*^9, 
  3.8168918740719166`*^9}, {3.8168921506365395`*^9, 3.8168922016327915`*^9}, {
  3.8168923781519356`*^9, 3.816892384129426*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"c1e4fedb-dada-43ed-818f-207e44373005"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "financial", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "stocks", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"financial", "[", "x_", "]"}], ":=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"x", ",", 
     NamespaceBox["LinguisticAssistant",
      DynamicModuleBox[{Typeset`query$$ = "April 1,2020", Typeset`boxes$$ = 
       RowBox[{"DateObject", "[", 
         RowBox[{"{", 
           RowBox[{"2020", ",", " ", "4", ",", " ", "1"}], "}"}], "]"}], 
       Typeset`allassumptions$$ = {{
        "type" -> "MultiClash", "word" -> "", "template" -> 
         "Assuming ${word1} is referring to ${desc1}. Use \"${word2}\" as \
${desc2}.", "count" -> "2", 
         "Values" -> {{
           "name" -> "DateObject", "word" -> "the input", "desc" -> "a date", 
            "input" -> "*MC.%7E-_*DateObject-"}, {
           "name" -> "GivenName", "word" -> "April", "desc" -> "a given name",
             "input" -> "*MC.%7E-_*GivenName-"}}}}, 
       Typeset`assumptions$$ = {}, Typeset`open$$ = {1, 2}, 
       Typeset`querystate$$ = {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.7763901`7.341624982418914, "Messages" -> {}}}, 
       DynamicBox[ToBoxes[
         AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
          Dynamic[Typeset`query$$], 
          Dynamic[Typeset`boxes$$], 
          Dynamic[Typeset`allassumptions$$], 
          Dynamic[Typeset`assumptions$$], 
          Dynamic[Typeset`open$$], 
          Dynamic[Typeset`querystate$$]], StandardForm],
        ImageSizeCache->{301., {10., 20.}},
        TrackedSymbols:>{
         Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
          Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
       DynamicModuleValues:>{},
       UndoTrackedVariables:>{Typeset`open$$}],
      BaseStyle->{"Deploy"},
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "stocks", " ", "is", " ", "my", " ", "first", " ", "important", " ", 
    "list", " ", "for", " ", "DateListPlot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stocks", "=", 
   RowBox[{"financial", "/@", "symblist"}]}], ";"}]}], "Input",
 CellLabel->
  "In[384]:=",ExpressionUUID->"00ec5ca1-b8a6-4542-99fb-377420b74117"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "eproc", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "forecast", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "forecastlist", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eproc", "=", 
   RowBox[{"TimeSeriesModelFit", "/@", "stocks"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"forecast", "[", "x_", "]"}], ":=", 
   RowBox[{"TimeSeriesForecast", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", "156", "}"}]}], "]"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{"156", 
    RowBox[{"(", "weeks", ")"}], " ", "shows", " ", "up", " ", "again", " ", 
    "because", " ", "I", " ", "want", " ", "to", " ", "forecast", " ", "the", 
    " ", "next", " ", "3", " ", "years"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "forecastlist", " ", "is", " ", "my", " ", "second", " ", "important", " ",
     "list"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcastlist", "=", 
   RowBox[{"forecast", "/@", "eproc"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.816891798206107*^9, 3.8168918088423805`*^9}, {
  3.81689187646609*^9, 3.8168919267685328`*^9}, {3.8168922075932245`*^9, 
  3.8168922337996063`*^9}, {3.816958699678254*^9, 3.816958788098831*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"82bdc71f-cb56-4327-8a55-6b8604a86049"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Iterating", " ", "both", " ", "lists", " ", "in", " ", "one", " ", 
    "table", " ", "gives", " ", "me", " ", "the", " ", "list", " ", "of", " ",
     "stock", " ", "forecasts", " ", "I", " ", "need"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "graphlist", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graphlist", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DateListPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"stocks", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"forcastlist", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"symblist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{
           RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
           RowBox[{"i", "/", "10"}], "]"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<3-year Stock Forecast\>\""}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "stocks", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.81689197612319*^9, 3.8168919864896946`*^9}, {
  3.816892092309843*^9, 3.816892093739911*^9}, {3.8168922487540584`*^9, 
  3.816892307115418*^9}, {3.816894919276514*^9, 3.816894923808675*^9}, {
  3.8168949547863817`*^9, 3.816894956244973*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"15faea6a-b989-45ad-83bc-b5cef74cbf50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "graphlist", "]"}]], "Input",
 CellLabel->
  "In[396]:=",ExpressionUUID->"a9d98bff-c3c8-4c56-b961-b5e7d9533c11"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2748608, 0.1822636, 0.7272788]], 
         LineBox[CompressedData["
1:eJxVlX1sU2UUxq9DPpwmFpwiilhCgkwJdExEBht3G3PYddtd131067a7dm3X
buuaoJFM0avJxO8VwRgSwcoUSUxmg6ITMWlQ/MBFa/yYKOqdS4xxiFdx+hfR
9Tnn/NElS/PLe9/3Puc5z3vuSv+gO5inKMqxuf/sb/bv06rz5XM/yQPL1qtz
v45ZYn38EFi/+S7ikYq1WbYOEqcnXI4s2z8mVvMnwdpfxObQVxuybCyvBtuH
Z8DqaeJkvBQc/4PXfVeDk8t20Hr1yqIsZyp3yH7oUWLEcydhPXGe2ByNg9PX
3S16ocdSiZXJANbtfcRGQQysPUesFu8Em9c4ZR16bGXMM1+Q/l4n+7Piduh/
1sn1P18M/SedOfU4ttTQ/lInWA8Sq1Ml4MRIDeu3oDf9To3ox7o1zesN4+Sn
3yXvB6eecnH/DpD+t1x8/gmcZ5tycb+uwrp6ZS3Xs5f8fZxYD/2C85Q3hUOk
/8darqce9emL6rjepag/saEup37t+zo+fzHWjfn1ki9wan29+IvnTW+9+AGO
f1sv/cfzyTyN9K+YD86sZZ7t3Qi9LRr7lXcH9D6s8fljm+Dnfxr3fxpsFTZw
fgyw3dPA5w/jPO1B5tk1pP8osX2sGmy7xc3PnwarDW65L9gfv98t/SD9r7gl
v6gv87mb9awiP+sauT/9lIddjexfAzh9uFH6j35ZE8RKoY/y/G8j36fd4NS9
HukP9psveiRfWLed8Uj9lIe/PezXBbBysInPuwR2fNSU8z79zyapB/lK3NjM
/p+i/FY1sz9VdL8+aJb8g40LzZI3PJ+6voXf9x7lt6JF9JPegZYcvckZYRX1
Za5t5fc/QvlVW6WflN9oa87z+n7mwpPk5xKv5Avr9lIv52+K9Ie93P896K+x
1yv6wKl3iY1Ts5SHkjbZT/Ohp43zPYTnk8+0cT9S4Mw4r+dvQn6V6Tb251Hk
M9HdLvPkTvj7ZLvoBVvH2zlvXrDd5OfHFoK1fB/r2wg2H/PJvATb3vDJ/Qar
P/j4vLPg+MIOyfNm6C/qYP+Wgx2pDpnnYP07WT+H/YnLO3m+FmM9va5T8gS2
WjtlHoGNyU6+T53g1GVdnJ8zYPO2LvEPbGvukv2k3+iSfMI/pVDP8cPRqMu8
Aeu7db7vR0nvq7p838jP1d1y//E+TWMefo30DnXLeSXQ+3I392812PyMeeQw
no/X+mW+4fzkfX653+DMS37xn/RP+Pm8I2DHP36ZD5SHewIyfykPh3LZ/klA
5hnl4WKA70MabNzUI/eF8vAC8+yv5OeHPTIfKA+W8DrKww3BnH5mtgcl71vg
7/tB7l8+/Ej8HhT/wOmlIek32CoPST/A9v4Q+9VN/v4W4vpayN+CsMwPsG1b
mOfrKPSokXBOP+L7wuI3WFnSK993yvPWXt4foDyHejm/F0l/Qngn6kufIDaH
CsDa5khO/UYgIt+7rdD/dETmFdh8OyLfjzLo/zki/Qcn9Sjr3bUN/j4Rle8b
WDkeZb8WqdD/U5T7q4P1K/pY336wtaeP/VhQDn+P9XG98yqg/1wf1/cl2FjQ
L1wJ/Y5+Ps+zHf6+3s/+FWE9fpbXRx3g5LwBuR9gpXVA5h048c2A1IP3pZUY
v28f2Lo1xvNpBGxvisn3E/u1h2KcryjYvBQTP6DPtmaQ/S0jve5B6T/pfWBQ
+kt6jwzyvPy6Uv0fagf9nw==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2748608, 0.1822636, 0.7272788]], 
         LineBox[CompressedData["
1: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
9sHPy7eGwrpg8sjHCwofRweK/gMQJstH
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2484884, 0.3863264, 0.813373]], 
         LineBox[CompressedData["
1:eJxVlXtQVGUYxleNNLrMhuSFLLd/KsypTaaZ0siDpFxk4SwssAsLHC7LnWVn
qskhy22apizD9dIfNGLHvNQ0E2wqScU4q5kUMkTNJF3UFpmmmSBcM3Jscop9
3uf7Q2cUf/O+33ue85zn/bivpr3QN9disRye/Rv/Gf9zZv1UhvwvV5v9xz4j
HEyezoqzsXwDWBsvy45zrFvY9moL+m1fCZtZGXlx1v8UNuo35Mc5uCxL5p18
rCDO2pfCkXt9jjgHLrGePoR+c2m2zO/JAo9mCltSl6Hf4le8B/NCU8Jm1zXU
I4ty+D4m9MS0HD6/D/NsLcI2by/O628LRzsO6HGOLszlvBxnnK1P5fL8DFhr
zKX+vkLo3yls9B9H3Rwgb/8O8+xrNtKfE2DDt5HnE8Ch7cJR5xJw5FP2B7rB
sQl13on5wZo8+vMb6uFtZO9a0f9JHvvn4P2s46p/MerarQ553v4weHSrg34O
F8Hfow5+v0Vg+wUH9f4KNhbk87wGDq0SjgxvBus/s95x1AW9CQWSn8QGcPgR
4eDkx+iPegro3wVw4Af2j7+DfnOuzjzeUQy9K4UjM9kl0Fuq079NYPvLwpax
zFL4+Z9Of7aAY6lO6l2JfpvLSX/GMF9/yUk9fugJfuCkn/ugx/pAIflO9GtO
YS2tCBx4gTy+AmweZH/XUtH/TSH1vYJ5Rn4Rnz8IDm0qov+H0B95j3VvAeqx
4SL60QO2XSWf9EFv+DkXn/8h6tF3XXzfbaJ/yKX2SfT/xfrM42BLdzHnfQ+2
Dxbz/TLBxuVizrsNHLq7hO9Ti/mR9SXM/0WwfqpE7bvkYbqE+vdKHpaU0u9O
fI/oulLqH8J8a1sp/Tkmfk6WUm+/+HmXm3kaF/2am/fTpOhvdnNerujf7Vb3
m/iZ5GE9BXVbukedF/0NHubZhXpwh6qvAYc/96h9QL+2uoz7e13yXFfG73cJ
bHaW0Y+D6B/tV/23i/6JMvq5X/JQXc77cbXk4c1y+jEffsX6yvk9BkR/lP3J
xyXPiV762wOOvu5l/5T4e8TL+9KGedp57w3+BeZXqDyjbj5awXyeln0LV1D/
eeyX8ZPqT3FD/02V3P9B2ceHFbejHnNXqvx54O9YJfdlK+rhOVXUNwqOPkRO
HUC/taSKeUsCa8Eq5vUK+i2pBvf1W7C9yKAfI2DjRUPtl+h9X3Ev9Nrur+b7
/APW9Wrq86A/2FHN/J0QvQeqqWeV6B3h+bRncD7gqFG/H8TP52vU/Yn66L4a
9Ty534bJafNQt/9dwzzWiZ/P1nLeTrnf9tZSz2W5376upV9TYP0KeUzmBe+p
474ngK17yOmJYO10HfN2FecDMbK3CnUzxUf9/4r+p33Uu1D8/cLH+cXi7x8+
6t8t+hfXq/tR9GfU33Af2FpZD3wEDv9ez7wsQH80uYH1dNG/tkHd76K/qYH+
rEM+Arsa1P0JtiQ1cn8jko8nyR2nJM/1jdzXGTw/FGrk+RHR/1mjyqvk44km
NV/8rW2iH0ckH281Mc+m5ONYk9onyfPFJpVXsGk0U0+yAX/faOb5cCX09zWr
fa6A/l9U3QAbt7Swfg79sdda+P0nwLbDLSq/YP1ci/p9Bw7e3KruM3DYTu66
hvlab6t6P9QDPyrOrIL+eW28T86IXncbv+80OHSWde9y9EcsfvrXCY6t8Kv8
gW3Ffvp1Fqxv8av9hz/R636lH3Xrg+18vx1grbBd3U/oD2wmJxaAzUPtPD/r
x/+pYyWs
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2484884, 0.3863264, 0.813373]], 
         LineBox[CompressedData["
1:eJwl1X9U0lcfwHHm7Ml+6DBHLdcYUsY52REsW65Y4+aotMbQimz0BIoWay4p
xSSHonNoWmFp4ZYVj1nLNRpWhy0tol8Hi1qsx55pjYaVbtl3hFaHbfTj+fT5
3nPuued1/7jnvs+559y4nILMvDAGg9EM8+UKw+MpoIjX7Nr95OZq0cuNELiD
b9p24DFaEK+hiNklq8qIUry08iNwkYJd+oKHrteBM4L9G6wE7TwATjRZ1XI5
OnAVPIanVYzSojl/gf9wCGU/bEdLuRsoclEW/mHeYbRhCbjF706NOYe2FYPL
jQ1zzt5C+yzgVWx5UsETNNMNfkse3bh9pPKlRU/AY3laU97raM3bGykSGu6p
FcahLWngQYfQGJOI9hSCe2stFYNz0Ix94C5ZuP7sQrSgC/wDV13StAytHAYf
8rsLC7LR9ZMKKbKrg1+wYD3auQBcZWxY91YpOqABF2YG8x5Xozl7wDlseba7
ES29CM4YdKxq+Q/a8BAssnOzdEfRtolFFOFXGpdKO9G+VDBbMijhdaGZ68GR
sZL05910fxP4aX+7+EYf3X8O/KCdRb7z0/0U+KZeJ/wiRPeP11LkUpp39scR
2dhPwD+yyMwkFlrwKfibvtbECC5auQu82xox7bdEdP0Z8Je6/Hj7XLTzPrhI
7OFsW4QOxBRTRBWdPCl3OZozD5zpNU+Ym4OWqsGkLTRuXAHasBMs0Cqi7pei
bafAb5Pzo5w1aN8AOCqSN8K8C82M3kSRZz21jPUtaNFcMNXqD33wPVqTB76l
yQy+eQptMYEvC+3Dw11oz0nwyYhY/6UbdP898OFu/X3LHbo/qgTev6Xv3qaH
dH8K2Jgv9kme0v05YG1K2634UTnYvxWcGx75y1MWOmAHL/Vorv+Xi+b0gec3
d1/9lo+WjtFRJEmdcqlCiDbMAnOSmy9kpaFtCvBrcC5fhvZtAT93qzr/pUIz
T4D/NLvs3gK06Db4V1XCsROfozURmyni5pusdVvQlhngjtDw4ZzdaM8qcJtL
1vruATSjGtzU0LGfaUML2sHVCvae30+hlbfAxQmVux2X0PUjSimSF+zfset/
dD8fvOx82rb8u3T/SnCqyVqTGqD7q8Az5NFVsc/o/qPgOJ62fGiUCvt7wMxH
PZu7xqNtYZ9T5IVDWLx/Mto3HeyvtWwoFqCZK8BeWfhnH76HFlWAr3DV6inp
aM0RcKffrQrJ0JYb4G87+IrrKrTnBfgrY8PHbRo0Y5qeIjWZweUGPVqwDLyJ
Lc9YUYtWloHXDDqWJJrR9YfBy+3cRSNa0c7r4A8qjam/2tCBp+CZksF5x0+j
ObwyinBjJXNqL6OlGeDogfZZ2b/Q/aVgxjFWUso9uv8g+KFeN/21Ibr/Gvh2
mpc38Izu/wd8lUUmnx6di/1Tyilyqq+V3TgBrZGAj1gjYj+dgraUgL/W5bPm
J6E9LeAtYg9z4jw04yq4JDp5bCAdLQiC13rNI10r0Mo4A0VkbaGwfbno+sVg
sVbxvGgD2qkFJ5Pzfy8uQwf2gydH8p5w69Ccy+BxvbWBv81o6WPwKwf9Dzyt
aAO7giIBTebv37SjbYvAvwntd8ocaN9G8E8RsbeXu9HMveDT3fre6T10vwv8
naWv+9V+un8IvCdf7Lk5RPe/WUmR2pQ2d/tzul8M1oVHumrG5GG/Bqz2aM4p
3kALvgavaO4+/U48WnkBvECdcjJyBrreD56V3Hzi3jy0840vKDIF7t25GB2Y
D465ojqyMwvN+Qwc1uQ69EkeWmoGD6kSWkQb0YazYB/ftHdCOdr2AHwtNNzk
r0P7WFUUcbhkjReb0EwR2NrQYWo+iBatAzcr2HWFx9CaRnBdQqUx/Qza4gBv
DvZXxF1Be/4Af3I+Tf9XD90f8yVFskzWkmv9dP974IXy6KJDw3T/WvA7PG2B
/gXdvwMc/6hn3bKxa7C/E/z6GeGahInoQD/41TpLdthUNIdppMiwLPzfvTPQ
0jngPq46y/Y+2pAL9vjdS6uXoG3bwWc6+B+tXon2/Qg+amxIn7UGzbwL3psZ
FI8tRIsiqymylS0nd8vRmtngUvjwO7aiLdngdXZuyo6v0J468MpK40z1ITTD
Dl4kGUx8/zha4APPjpVMG+9EK0fXUGTqQHv8n1fQ9clg1jFW3IVeun81OLxM
N2nPAN1fA36U5p2w8RHdfxx8h0Vi0hhrsd8L/rmvNYoTiTaM3EIRpzVidHAi
2pYE/l6XP+KnqWifHLxP7GEcnLlW9H/IDMrP
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], 
         LineBox[CompressedData["
1:eJxVlWtsU2UYx4/TieIHK05xiniIODaGozAvMJge0DE2djntLl23bjtrt67d
pWuiRDNvR5IFBXTHW8wSwYMX5BM24HSiJg1eUFy0fnGiiJ375hDrZWpIiK7/
53mWnCZN88vz9nn/7/95nvddERzy9uQoinJ0/pv9zX6+rDi3Zf7HHsu/VZv/
dc8RJycn1Swbt2wDqyOz4Mx+4uTy3JVZVj9f4IIs638Qp1+Pr8qyuayS2LNh
dZa1T4UnsD7+G7FWeqwwy3b+dso3VwhO3bdd4livxIiN0ROIW+c4Pn0B8eT1
VeD5DzijEdvxj26D3v4q1pchvS9ViR7E09dW0/rKacRd9xCbeSWkP1LN+iJu
6H+e2AiHwfaHsv5IMfzctEPyrYGfPcRKUQD5rVGOx8tJ//s7RD/Ol5mR9WfA
ZrCG8p/YCX8T+2pEH/6ffpfYmDiA+rima7g+IzifdlUt+bV4Cpx6ulb8LIK/
79Q69nOfJVYDo4gbV9QxX43zWOvrpF9wXv0Hjh9ZBD/M3Hre7+V10LuW2Jy9
BvG0X9izFn5+x1xejfV2jk56pkLg1Bpd6g1WfLrkL4XeJ3X2I3YX/PxPl/OU
wc8iD9djxQb0Q6OH63foDuh/3MP+a8hvHhY2EXet8nK9LmI/zePleswhHn/E
y/1airj9ppf9qgenvvbKPKyHn3UNrH8p9rMebhD/EE++1sDzOQZ/MpPE6eE8
+Kf+0yD1KYG/OxuFyd9XG8UPsOsUx0f6wdpfjTIPyK/sbxJ/EHefbOJ67EF+
4/cm8R/rrZuapf8RT1YsMP6vf9IsfmC9eb6Z5+cw6b3BJ/7ivOmtPvEH612D
Psf+9qyP/Tl5O/y8rkX8Bytai/QT2N0n/A3N34st0u/gzBK/MOZbLffL/YW4
3uuXeQabz/m5Xj5w4gM/66lE/2tlrTx/y5Ev3r3AiNvPtkp+cGqilf0cRj5l
RvgC4lZXG+vbSv7ubZP9qB/G2+Q+QFxNt4lesL44IP5iffqpgPiHuOtYwFE/
7ceA3E80j4va5T4G2+va5Txgd6Jd7lfU2/i+nfdLgq3LOuS8WJ8s6ZB5QzzT
IvEEzdtUB++/jO6LSzqlP6mfiztl/qifm5krD2K9ZnZKf6OflCKDz7sb7G4w
2J/zWG885mTrLYP93gVWC7q4/06Bdb2L+/Nfut+Gu8Rf0vtGl9QLnP5K4hq9
F7VBqS/6034o6JiH1MGg9BdYmQxKPurnv4NyXuRLPhiSepOfB0KO+Ve/CDn8
1P8MSX7y++Zufh8qwK5Xuh3+ap91s94yxOOZbtaTAz/tG3tkvsGp+5mnj9P9
9nGP3Fdg69ceua9J/9Kw9D/p3xLm+y6f9A+EJT848YvwA9QPeb2Sn/Tf2+vU
H+3l+Rgn/S9wfMxP/bEkIu8X3XebI9Iv1M/hiLx3qIdlReQ+on4+HnHUQ98Y
5f4rpv4IRTn/PtL/TFTmifS/F3W8N66fo47+so0+6cc74e+ePpk/vDfKeJ+8
7/T+/dTH5ztN/l/ZL/qxPrNbuB751KMLcbyX+pl+uU+w3rx8gPPnYn3CPeB8
/94e4Pd5ht6/0wNyXuSzLx2U+t0NvS2D0q9g69tBPs9Zeq+VmMw7OLM6JvcT
1qtNMZnvjdD7RIz3q8H7nr4Yk3kEuwqH+P8Fm6HXOyTztAl6Hx2S+wlsH5L4
rjLtf0Fl+nU=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.38822480000000004`, 0.674195, 0.6035436000000001]], 
         LineBox[CompressedData["
1:eJxVlUlsG1UYx4dAgaYSuGm6pEs6XYAGEAz0xBKYFkrSZunYzmInTjJxbMeO
E9sHKlDYhkMFlCXDdohEYaBsp2K1FMJysMpSlgjMhbAUmFCJAykwLIETgvj/
5m/pWbKsn773vvX/PW+J50PJGkVRji19K7+Vz6d7zu5a+ik1HrxYX/rVFgXr
tXMrKmxuvg2sHm1ZXmHvcJVhVz8S7BSaL6qw8YdgNzgTqLC1sQW89KmvsP6B
YGshWFfhwm8tPA+709Aq/MemwOVbWnl/VYWVXCvvg+2zvn3uyMoKl9bsFfm0
zCO+p++V4qnZqh3njad9+8lF+HNX7RP9mJ1F/MBNVV6D/NOC9fnJtcj/iX3s
B+zOu4LNVAqs3dAm+TOTPi/uANtTbVJ9pbfa2A+wd6ZNys+Kt0tcfKSd8VCf
+0Y746G+wLxg9eACWF/RIe431+J8+aEO3kc+yuuCnelp+Ne+r55fjfwv7KR/
sH1tJ8+jXuNbwVb9UfTHWrafempAvlcLdifr1yPf6H72cx36+ZVgc6YR7NQY
1Be4fKVB/2Cl1+A84V+732A+G9HP/wSbUydV9LMpSL1shh66gqwPbNwbZP/h
z3q1at+Efl4W4rzAejDE+SNe4a4Q8wc7L4V4fwPy/1ywe6QA/2ZnWPhrioHt
O8PMH/WVXghL/fRmw1I/1X/CrAf24oEu5gd2n+viPmE+gU+6eB/z0//qYv44
rxzuFvadO8HaqSrjvvl7tzRve0MP+w8u7ZHZeL+H+kI869ce1gO9Fdf1Mh+c
d3f3SvkHJnqlfJyFXuof/sqrI3y/cF/RI9QT7NpYhPoX+n0qwvmIftZF2X+w
2hzlvMDGaJT+hZ4fj/K+0PM7VTvmpV/fx/xgLyT6OB+w81gf9x9cnumjvsHK
mT7OQ+hhuJ/6xb6UHu5n/6An70Q/4zcif7ef84b+jNoY3z+w+2CM/cX9wPEY
+wX/+ncx1g8uXDAg7ZdzzYBUn1YcYH+xD+Y3A4wPts8blPIrXTXIerBvXmTQ
j3cI+2nNDdI/7MVzhjh/2N0rhnz7AXCgZ0g6r1tD0n4rTabkXwub/vvVDjbv
Mf18asD2Kybjiffh0mFf7w2wG4bM1uSwX9+yLcj3xWF/fqdEvp/x/DT8FTri
7Ifo5x1xqf/l5+OSPpTZuPQeaH/HJf2Vbh+R3gPv2RHehz/14xHpPTP+HGF9
sFubEtI8A88kpPP6hwnqRejBS1BPYGd9kizet1uTfN/B5ntJ1ge2f0nKel6b
kvTo7UrRDr2q4ym+l9BT8ecU8we79aPcH+grcPOoND89Myq9/4UnRzk/zEup
S1PfOK/dmOZ7ADZTaWl/bDvNfiHf0ttp7iPyMa7LcD5gayTDfUJ+xUcz0v+T
+2aG/Rb5/5jh/yvuO+YY4yP/8qEx7hdYOTHGeKhH+2GM/RT6Xp6V9O89kPX7
cxzn1WNZxgcbp7Pcr63I//xx+t+O/LVxnt+G/r7m21M/gQtfj1P/YOfcCfoD
KxHyItj+coL3Ea+k5Khf2L3Lc/48TiO+2p2j3sHGfTnWewn6+W+O+wV7YEee
egDrobz/PmwDF+7O+/39Auy8nPf1snu7/j95O/B4
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.38822480000000004`, 0.674195, 0.6035436000000001]], 
         LineBox[CompressedData["
1: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
O/Tbk5cmWOm/mgSr/Mi7YzZ33bO2E/wf1auzoQ==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.513417, 0.72992, 0.440682]], 
         LineBox[CompressedData["
1:eJxVVXtsU2UUv07xMU1scIr4gEskYwMcF+YU0ekFhcnY47Z7dN267bZbu3bd
o4kSzXxdTQgK6opgDIlgdYr8hQ04negfN/jAx6I1MU4UsZN/jEOtj2liYnT9
nXOWfE2am1/O+b7vnN/5nXOWhYd9kSJN047O/Qvfwu/Tzec2zn3S+/cvM+e+
xizjmumlBWwv3QJsTv+jF3D+AGF9R2J5AesfbZHzpQVs/T7vv6KAnetqCBdP
lRWw+QHhuR/syV8Ju0sWlBdwevE9wPboCfhn7yJsVh6DvzbE9okl8E+dI5wb
S8LfvWorsFNyBP55k7B+pAZYT2zlePzwt55j/5kvYM9dUUv4xCzu99xRy/nO
rEb8sVp+L2Mg/mcJu5OTaxD/u4S18tOrwOdt2yQenLcjgitWIv5RwtrUGN5z
3yasBy/H+fzZbcI3zjvhOuED9sxTdVyvEO7LvVnHfO5Afp5pwk71LuL/0nq+
fxTvZZ+sF/5uBL9vMPaux3vGmXrOr47iv7iB36+Ef2pdg8KP9W2D8A1+nAWN
FF+yei3iXdMo/ICvXKCR9TICnPy6UfjE+XSRxfU+A5xdbbF+TNyn+S05vw7x
Psb+o49Xgc//CLuzP64Hn+Ve5qP4Fuih2ct6eP4mxP+IV/jA/c5hr+i5Enyu
8Ikd2PT6pD44n3zQx/ctgj39qk/0hfiyn/P5kS9xv93QxPdvAE490CT9AX/3
5XmM/POTKtb/bpJ6gr/M9mbm/yTsuRebJT5gzyfNzH8Q2PyzWfoN57UDLVJ/
YONkC+vzBtTb/k3wWAXivbaV+S2D3d08j3G/9X6rxAd/55dWzr8EOHO1X+qH
/HOb/Eo+nkE/852Hf3rGL/kDZ69sE/0Da2ab6A/Y6G+T+UTx71NxfmGA73PQ
T3p1gOM/THruC4j+4e/sCSj9nHknIPzhvLmhXfhCPyZ72yU/2NPPtIv+cD47
0S75wq6dbRd9wZ4Kdcg8Rj7u7g7hH/zkxzuU/PVch5wHtoqDCn+5J4JSf+Tj
ORYUfdJ8+y6o9Hfyok6pF3B6bafCh5HplHxRb/ubTtEf4ktd0KXU363okvlN
em7r4nlbRf021SV8wZ45r1v6mfS8qpv9x0nPrd0c3z6cN51ufn8n+kcrt5nv
WpoPTbbUl/rvYVv4pf57zZb5DqyXhlgvp4AtK6TML2ckxPFsp3hfCcm8o3g/
C3G+B5F/sj4s8YLv9P1hhf/sS2HOdxOwNhlW9GP8FRa+ic/7epT78wd7FLv+
cY/Um/TwR4/sF+rH63v5fS+w54Vemeeor/lhr6KvZL5X5iHtu2siyrzI3h0R
f2D7vYjMH5oXP0fkfeTnLoqKPmnfbYwq/aEPRGWeUL/9FFX2Ua6kT94nPd/Z
J/ub9BzvU+PfK/4TNC8WxpR4jNtjsj8Rjx2NybzA/kylYnI/7evjMckP/tat
cfZfDOz0xBV75um4zA/a12/FpT543/NDXPqb5oXdL/sO+yS7q5/5Pw59aeP9
0j/Axvf9ok+ad5ckWE9F1G87E1zvPaTvownm8zL0h3U6IfuQ+vHCAa6PAXvG
GGC9dVG/vT7A+VTAnjw1IPsM+zB9/iD5Rw8Ba22Don/s59RXg8p+dbUh9i+F
f37lkNQf/nrLkPTrzYj30SGeV/din+f+FVwJ7CkblnyBTd+w9DfOJx8Suxc4
fWgeV5n/A+RmBNU=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.513417, 0.72992, 0.440682]], 
         LineBox[CompressedData["
1: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
GUn6P3NRtBk=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.6660832000000001, 0.7430418, 0.32293540000000004`]], 
         LineBox[CompressedData["
1:eJxVVllsG1UUHQplCR+12kApS2q2NmlL6iYgsQWmhZKSZhk7TmInTjK2Y8eO
E8cSVKCwDR9RoVDiQvtRiRZDWCohFatQCJtkhb1E1PwQlgITKvFBCpglgJAQ
xOe+gzSWotHRve+98849975cGhn1xZZomnZk8a/8Lf8+3npq8+LHmve69cWv
Z0Hw4q+qjM3VtwHb3qnVZVw6INiqPHxZGbs/FGzGv7+ijI1fBRdmmteUsXVx
o6wfq1xbxvp7gnON4SvLOPOzYPd4CvHcqm2yfuEQ1hdvEaxXzCJfS29T++1F
fvaUwt5rkV84/3byQ35JF2xOVQG7U4ILVUuRb+xT+Q27ELdXNBFjf9dNgu3J
Ug34J5rUfgevAv/Hm8hvPfi/JVirOVENPW/YTj2w3owJ1uvrhf+EYHdoQvi/
vp33R7x0UnAu8zb2syLNvA9w/tFmxrHefrWZ9cN9XHMqvn8VsH5uC/kBFx8m
DoGf9kqLqs8czvd808L64Tzz7FbmA2frWllPYOOrVqVfxQbwXdqm6lFbC74b
28gPcTvYpu6/DPplPm+jPtA3t8SQ9dMLyC9uMMgPca3LUP6LbwTfB1V+w7FN
0PNfg/tdAz1rvIpPuh5+8Cs8vQP5xv1e+gv7W4e8qr4rEXet9Qnfwzs90NMr
2JzYgnjmHh/vh3juOZ+q/wz4FY/76Bfsb7a2s/64X/Zuwfrc34gXnmF82Trw
n2lX/h1Hvdx/tjvqld/hJ3/Uw37Kr/xUjXzXMb86v0v8/Luf95f6H+hw7O/5
oIP1k/r/0qH6IYN49qJO+g/nF7Z20p/ga7zb6egH66dO9qv494Iu3hf1t7d0
MY71rhHGx3Bebl6wNjuJ9cXzAsrf+4W/HlDxy4X/UMCRb+4NkD9waXmQ69E/
7oYg/YT7GINBh/+tPUHqJXq/GSQ/rNev76YfZL4NdLNfEM891s1+wfriVDf1
BtZOdrNfpb/CPTwfehQe6aG/oFfpaA/nr/jB7uF60b8iRD2A7YdCXC9+eDnE
++I8/euQQ6/MWb30C3BuUy/nmcy3fC/1w/7ml730M3D2jD7WH+cVavtYb/Fz
4H8s82K2j/2O++VP61fv06fij/X91B/5rs5+xzzWrX7qj37TakzVr42YP552
k/yl/+4zlX8bgLMvqPzxeezvXhN2zCPDCLOe4G+NhTnvhO+zYfIXvT8Jsz6i
Z0uE+sh7d1eE9RA/Px1x+mEmQj7wj+ePCN835BfujLLfoW/pYJT1FD98FOW8
ATZ+i7Jfga1LBjg/xA9PDlBPmQ/vD3B+4D6Z0gD9Lu/dhTHqB1y8Ncb+Bzbf
iTn6OftjjO+v8F8Zd9y/tDlO/XB/93Cc/pV58UPc8d7YlYOO+eW6eZD9IvyT
g/Sv8H9iUPljGlhbnnD433NjgvfH+WY8wfqjn7PZhPKjV97rNxL0v8yL65LU
A9iKJpU/5P+J/O4k+xPYfi3pON/1XZL1En+YQ8ovx/GeFHcRT8j7d3TI4VfP
t0P0m/TjOSml/xTipZ0ppbeF/nAfSbH/gI0TKeoNbJ057HjP8p5hvmfoJ/2l
YfYD4pkvmK/Xgf/pI2q/KLAWGOE8AM5+NqL4vyjvtZbme4N4aV1a8f8L2N2h
8KTnavB9IM36A9v/pOlXYFf1qPKDH1j3jfI8vP+Ze0dVfe8Azj0/quq7p07/
D3YH8yc=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.6660832000000001, 0.7430418, 0.32293540000000004`]], 
         LineBox[CompressedData["
1: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
hp0fkz97ZD37vTVa/g/n0Lkj
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.8083416, 0.7110806, 0.255976]], 
         LineBox[CompressedData["
1:eJxVlVtsVFUUho8oovWBEauIIg4vSEVhoKLcSk/RUuj1zPQyvUzb02lnem8n
wUaDoqMJwQvYQTGGBHAQrTzpBKzWy8MERRQbGRNjRVFPJTHGog5i1ZgQbf+1
/iZDQqZf1tpr/Xvtf++zONjvC80yDOPY1P/p3+l/nxVeKJj6MXOP321O/Xom
haMnBpZPs337ZuEJLzh9UNjZnu2ZZvcnm3X9JbD1h8aPpMHRhUVg9xtzVk2z
eVJ46q+V0xz5XdgOh8HxBVs0boBT9ws73hHUM/oYjyIeu7BF9X0BTt60FZxc
NBv90qawe+eyXOjtFo5HLiPfenGr9v8J7NxQrLwE+a6Nwu7AGdHfUaz7iyAe
eb5Y+xUiHv+gWPVcD/asL1H9/6C+HSrh/LA+NiicnDwq+t8tUb0T4PT5Eq23
V+YZLNX8pTiPxO7SjPNz3i7lesRd46Wc3wrov66M+0e91NNlPD/0M94q4/xF
//fCydFRsH1Nucxn8EmZ/6ryjPlZ3wobOeeQH51doet3Y7+JFRXafwfYqavg
/mWeX2u8qOUezHOWxf7g1F2W+ukU2PBb3M+90PvETPw+zPM/4Whe8VrMM8cr
+saOgN1VXp4X2HrMq+ezbw30H/Xq/obArjt81I980+vjvNZB/yM+3U8H8uOv
+bReFTh1ZiYfbJdXyvyz5oNjD5PHwMlXKqkX+0mPzuSD3X9X0t/Yf2KgivNA
3Hm5Su/z8GroP11FPyPf/LOK9xP5xsFqre8He04J2yOHsN6+WK1+PwmO3VrD
+eE8koU19Afi1kc1Wu8lcPS3Gj3fw6ifuNmvPI79Opv89DPirl4//SzznPCr
n9dg/qkba+kP0W/W8j0QP3TV8j4jbu9jfqnMc16d3mePzDOvjv2x3monbxM/
7K1jPfRPvF+n8ysSP6yr530AR9rq6Qf4I/5cvfrxNDg1Ihzfv2A99J8n70c8
1tIg+dl94OSzDXw/xM/DDby/4menQe9fAPlWVkD7ZSHuPBVgvvj5eED3nwCb
3wV0/ULRP6dR/TMp81/ZyPcM7Ek0ar1c8fM3jdQnfr6qSf02V/y8vCmjf7q2
id8X9IuOMX8Q8cQVzRn7dZY1Z/R31TTTb6I/2szvD9jIsXn/RW+lrfknxA87
bPoT5x173aaf4Ff3khbqQb5ltfA+iN7tLZl6XyXPFb2ft2S+D2VBfp8Qjz8U
5H1H/dThYMb9MEaD2q9J9P8V1PoVWJ98sJXnJ3441MrzQz/3p+QD4odLrfQ/
/Ba9rY3zA7sOtKlffwabH7dxfuBIuk31Ld4A/beE2F/8/ECI5wO2PwypfwbE
z7+GeD/Ez/PDGl+N+umCsL5feajv7gnze4B44pcwv/+IO9nt5Dzoz29nf7DZ
2c7zRH7khXb6A3FjXoeex06wZ0NHhh47LGyO/yv6Yx06r02ol3xvJh/rrbWd
vM8bMd/WTs4fnNjTSf+BnXeYfxbs+lHjI4vyMV+7i/M2Md9nunR+YbAx3KX7
T4I9PzA+BLav7eb9BKd3dXO+qO8+1s3vHfpb57r5HmM/0at7+D0X/Z4evo9Y
b77Zw/uD+pGzPTxfcPzKXvYvgN7aXu33JeKxr3r5voOTRp++BxdF7519fC/A
7mryNtSzHp+Jg53LfTwfsGtpP99TsOnr1/d6F/YTebSf33OZ91A/95Nv/g89
TQqN
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.8083416, 0.7110806, 0.255976]], 
         LineBox[CompressedData["
1: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
zU1mYprsf13Luh4=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.8935136, 0.6004149999999999, 0.2205464]], 
         LineBox[CompressedData["
1:eJxVln1sU2UUxq/zA0UTK6KIItaYIBOD1UWFwcYFxck+b7uvbuu223107bp1
TZBoptOryYIfIEXxDxLAIoomJtiAU0T/aPADxUVrYpwoaif/GIdaRTQxIbo+
5zwml4Q0v7zvPe/znvOc8+7GnpFAf4lhGAdn/xd/i/8+XX967eyPObf1LnP2
13dWuWwj2L7hPnB+dAe4sFvYKN21osjej4XN6X+wbv0hbEciWHcWVWn8qZVF
Nj8UTu/cCU7+puvTo+VFTi+8H+zMfHF3kXP3CBtT+8BGQrn0JOKnTnO9F+vZ
qzdI/Kq9otcUtreV3Am9ceHs2Z9E7wsb9H5N4PyV1bp/HeJ5KqtdesxoNe8v
+p9TNgxw+j2yg/2+VTVgb+hy6LX7lcfjWE9tq+F+6Mu+I+wcnRD9p2qoR/LZ
U6v1KcP3mS21rvrl3xLO+1cgnme6VvPdBjYvrdP7XAHOPSXsPVCF+MabwtnJ
SdH/fR3ji/6L65lvyf8dwk7Fcey3vq1nfZAP58IGibd4/Srova2BfsJ6vq2B
9Zd8ft3A8ySfJRbzC3/kbrV4f8QzWi31236w73GL96lEPv+1WG9wodQv+w8v
roAfmvx639rV0P+oX+vzOu7jvObX+yyCHs/NAeZT/OwPaH2egL7kwwHdHxL9
rwRc98t9LuzMT2C/Xd+o3x/FeuqhRr3fGXD2pUbN15fQU5hsVH9skv77m/sP
iR82Nbnyl3+xyRXfc7yJ+cP35p9cL5H6726W8/Ylwb5jzawf4tu/N9M/4t/r
WugX8e/6Fs3/HPHDBy2sn+Tz1xZXv2auaXXNi/w68hKwZ7jVpS89Q5b+zF0V
ZD1EvxnU84+JfweDrvzZO4Lqh6jkc16b5muB5LOijf4R/QPK4zOif3ubzpdp
9FvmXe7fLPOhvF31nEC8ZF+7W/+z7eqHcnDucLv6YbnoP9XO+SX9Fe7gfBI/
PNPh6q/CRIfeZyn85M0Lp5PnsG7NDdGPWM8/GWJ8sOdQiP0DNr8LcT6Ln+d0
6v6wzOfbO+kvsC/TyX5G/9nf/L8fnLqgi/nD/uzyLvYT1gvBLt4P7Ex10Q/Y
nzmvW/1jYj2/rJvvgehv6VY/bpd+dLr1vGVgo9Rmf4ufG23OX5lnYzbrJX5+
VTk5BvYuCbvmo2WFXf3njIapD+dlXg6zf6T/PgvTbzLf6npYH/gn/WAP94Nz
e3t0Pu1BPxmT3D8G9v1FrpB+e6BXvy+AC3t6WR957z7hug9snellP4Od6/vY
rzjfs6uP9QKbH/Xp/nFwstDHfhf91/bTX9KP9/azftJv7/dTj+T3F91vZPF9
dkGE807eu7UR13zwDkW0Pw5Iv/0cYT7lvZs/wHqI/jUD9IPojw244iWfd7Mx
L8p5KH//rI6yX5EfOxJVfywsg/5UlP4BZ49ENR+XSX5XxjiPJb+9MfYDOLM1
5qpP/u0Y55O81z/GNN4WcNoedL0HuacHmQ+8V8YE1zeCfT8M6v1ukvflkjjf
O+m3zXHOb7yH3oNx+gfvoXUyTj+DnYuGON/AGd8Q5y/OM98Y4vxFvOQJ7q9a
A/3nD7veXyM4TL9hPfXVMPOJeFkjwXkELtySYD3kvW5OcF6L3scSnD+Inz+X
YL3AnqUjzDfYDChPHxG9j4wwX6J3/wj9WWn+ByJz+hE=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.8935136, 0.6004149999999999, 0.2205464]], 
         LineBox[CompressedData["
1:eJwl0n9Q03Ucx/FBm8AoGWZI5Y2hkXZxB1mcCBfHdxBogIy0LwGDJgdnw4rx
O8RsCwK1GYtfTn45GBYIyhiEihSLBOcBd/NuDAzcIXqY7XtBCLud2K335+3u
drvH9/vHPs/v6+ufmftRtiuLxUqCL/mFj8mUy1A0b896zFGVgVzYAN+Snhxf
W6shDg6QMVSPehvLovyBWJIIrjob0vn5DSWxqhR87TL3XvwRBbFBC9aK80p9
fGTEK1PgpMFS57Otp4gFDvAXHLOyoq2cWLQjj6GaIndNcNeLieXxYNdDQplL
I1pXDH5El40dWxQTL2jAo4a0w+a3CiPBvAmwn5/8aoavjDhyHTxv77+1e7qI
WOaXz1B1ZW+KtZ+UEGsOgD/0zLIfzckjNhWAxS+VtwtdyolZreA0Xew+NUuE
/UYw51BX6nxPFfavgs1rRreE22rs317AUKspkx6DhzuxPwZ88C5Xai3swH4Z
OCReJxh6ghY0geczwlXU++ewfwy8q2U827r/IvYvg53fNrG/yWrB/lcLGcrq
z03ISGvH/ijw0+rMMNqO+/C+BMflbgTVcnC/SDW4ejbfvbWjkVg2Cm5ye31A
GNxGrGHAv/77LP1OOp7H5FPEUJJfpvoCNi7g/hT4n3cteUJpK/YfAzfTfyg0
ih+xvx7sW3V8bFhyAvtHwNu5/Q6/Ofw/w2Pwf8lKhaO9HvtfLmao2HOTN//u
er5/BNgSesY2tYrPU/QZmH96b8qIIxP7a8C23zY10rVKsoduGHxwfTExx36K
eGEJvKVbP5QapsL9vUvgeXgKNwe1oCPDwaMf8N3CfvoO988GR0zcbZ611eH+
1eAXad9Ly1vfwP7r4HrvV5Zn9uF5WQ/BM8LL1gTOz9i/+SuGqkl8rS9FfxX7
Q8F1ZxtW4nL7sT8T3BBojvW8gTYowS4HJpwCuxb7B8HX7d9HUTl4X3Af7K0N
nxIY8X0ReZYy1L0K6ddhj3uxPwQ8U5mqH855vv+n4KwH9OS29/B9WzhN7jum
TTd5eD7eAPh2b/lsVPEV3N8Kbv09WZ4k1+P+7scZKmjnycqBLT24/x5wfpmx
8uM/L2G/GCx6weNIBt2M/VXg6BW6xyKVY38fmAncFP2kGc8rmQNbuqL6+RLs
U3HKGOqMlyd7Ma0O+4PAsiJ/Xpy0FvtTwO+E1j8auhBNnr+gAhyzyB94WtJG
LLoCTtBVcM0uGmL5LLh7bskZ4NWB+7ueYCiP3RHuO/johUBw0tyDuDj6PO6f
DN7vvG9bSr+I+yvAbNVfumvsAty/G2zZy7b1vq3B/mnwSHAD4zTpDXfKvDsf
gmXRRrXX+JDhf6wQKMs=
          "]], 
         LineBox[{{3.8238349407447767`*^9, -6854.060925022801}, {
          3.8238912*^9, -3826.915497017809}, {
          3.8239527169206085`*^9, -6854.060925022801}}], 
         LineBox[{{3.8240086165645*^9, -6854.060925022801}, {
          3.824064*^9, -4667.663923963414}, {
          3.8241504*^9, -6278.034029994283}, {
          3.8242368*^9, -2424.384044061956}, {
          3.8243232*^9, -1887.6620208890452`}, {
          3.8244096*^9, -4476.914080813161}, {
          3.824496*^9, -6106.826568285002}, {
          3.8245383265025597`*^9, -6854.060925022801}}], 
         LineBox[{{3.8246144653583937`*^9, -6854.060925022801}, {
          3.8246688*^9, -5535.613940357946}, {
          3.8247552*^9, -5309.4812409918295`}, {
          3.8248416*^9, -2422.0827205000633`}, {
          3.824928*^9, -163.22685885646968`}, {
          3.8250144*^9, -5018.072462285085}, {
          3.8251008*^9, -3808.2942227574813`}, {
          3.8251872*^9, -1703.872554901153}, {
          3.8252736*^9, -1573.5484124378634`}, {3.82536*^9, 
          807.9906477024202}, {3.825431732527494*^9, 4158.276554403329}}], 
         LineBox[{{3.8257638006229057`*^9, 4158.276554403329}, {3.825792*^9, 
          3504.3044105815443`}, {3.825824143073297*^9, 4158.276554403329}}], 
         LineBox[{{3.8259019506366076`*^9, 4158.276554403329}, {3.8259648*^9, 
          1212.3272216630671`}, {3.8260512*^9, -2675.038404760214}, {
          3.826132980211621*^9, -6854.060925022801}}], 
         LineBox[{{3.8264635749627557`*^9, -6854.060925022801}, {
          3.8264832*^9, -5045.347389668511}, {
          3.8265056994820304`*^9, -6854.060925022801}}], 
         LineBox[{{3.8266443885914345`*^9, -6854.060925022801}, {
          3.826656*^9, -6056.523264928567}, {
          3.8266820739748797`*^9, -6854.060925022801}}], 
         LineBox[{{3.826767848415067*^9, -6854.060925022801}, {
          3.8268288*^9, -2434.5630320562477`}, {
          3.8269152*^9, -1629.5594115289994`}, {
          3.8270016*^9, -6031.0527790130645`}, {
          3.8270289100645213`*^9, -6854.060925022801}}], 
         LineBox[{{3.8273556733383346`*^9, -6854.060925022801}, {
          3.8274336*^9, -2551.690637651316}, {3.82752*^9, 
          1134.741513962021}, {3.827603568712875*^9, -6854.060925022801}}], 
         LineBox[{{3.8276179762508574`*^9, -6854.060925022801}, {
          3.8276928*^9, -5104.6436203258845`}, {
          3.8277792*^9, -1611.6901729996}, {
          3.8278656*^9, -1366.0016847532108`}, {3.827952*^9, 
          2693.6059919364275`}, {3.8279705102279835`*^9, 4158.276554403329}}], 
         LineBox[{{3.82854434209361*^9, 4158.276554403329}, {3.8285568*^9, 
          3241.5788798899043`}, {3.8286432*^9, -2778.820959685425}, {
          3.828695650217914*^9, -6854.060925022801}}], 
         LineBox[{{3.829067791005442*^9, -6854.060925022801}, {
          3.8290752*^9, -5756.800244272574}, {
          3.8290840423080034`*^9, -6854.060925022801}}], 
         LineBox[{{3.829247645961424*^9, -6854.060925022801}, {
          3.829248*^9, -6814.461475459641}, {
          3.8292488341931257`*^9, -6854.060925022801}}], 
         LineBox[{{3.829370843884913*^9, -6854.060925022801}, {
          3.8294208*^9, -1286.2204511669722`}, {
          3.8295072*^9, -140.91440869034057`}, {
          3.829589716549921*^9, -6854.060925022801}}], 
         LineBox[{{3.829964454897575*^9, -6854.060925022801}, {
          3.8300256*^9, -1584.240389789357}, {3.830112*^9, 
          4109.963966072041}}]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.8929546, 0.3896616, 0.1794008]], 
         LineBox[CompressedData["
1:eJxVlVtsk2Ucxj/OiMY0METkYLkAmZhRRaOo028cZOzQfe3Wrdu68a3d2m7d
ul5INCj6aUJAQVcOBkkGVlDmhRkVnA7looocFKL1Qjl5+IB4AwhFQb3AA33+
z2vSJUvzy/89PP/nfd73mxXs9XaM1DRt783//G/+79jSS2U3fzIzDy3Ub/66
rgtbF799JM/m3U+BtRMhcG47ubi/NM/Oo8Jm+LCeZ+M3YefgkUV5tqYv4/jp
S/KsHxJ2BvZgfOIKec1FjE9NLQenEqvB2cXkZSPK8qzFy6nvA9STl4TN4X9Q
z9yxHKxPeBic05cXzHfGhO1dCcw33lDjT6BuT6qg3gOL8+x4ooL6jon+KHlw
XDn0bxI2+4LLoP/A/4zxrscqVb9gs0M4tW2b6O8TtopuB2f2V9LvUdg/d571
z6+DrWCVnNf18eD0hirqm4f59kdVnL8Y/TjOCusLNoP1W6u5/37x9xXFp5bC
3w+rOX4S2PUT64kW0T/eLfsffx/15ANunsdGsHHGrc4f/lhjapiv2ZXQO79G
7bccehtr6M8VcOJkjcofxqdGGtKPplVB732G8qsaehuEbc9J1F0vcXxxwAM/
/zWUHi/8LPbI/NJVqDvrPOp8a6D/BQ/zUob9rfc8zMdWN/y8x8v5XWDd46U+
HfMTz3nV+UFf6l2v8guc/cbLfOzE+qa7lv1cRv/JZxWXoJ7ZWct8z4SfueOs
l1aAnX8K26seRP7SK+t4H+eIv28VsuOrOqUfrF+rY7+fYT1tu4/6RqLuOuJT
/mF986pP5U/0Tqvn+fWhnllaz/nnUDe+qFfvi+Thcr3KFzh9Z4PqF/7Yixp4
nn9VQG9Pg8oXOHWxgfMXgLOT/ewvDNZ0v8q36O9SvBBsbvEX9J+b2Mj5u8XP
0saCuhFp5PlaYGtjY4Gf6U+F9bNNmK8/2qTeJ/iRaG/ie5NEPfV6E/NxEJwd
bmI+NmA97bzi29BPsq2Z/g8g35n1zXwPfPArN9RMv95E3Wk3qzyibkwIKEZe
7XUBdR8lz/sCyk/J848B3of14MS4FqUXnLq/kF3pFo6fZsDf0y3M42hwcnQr
6zHcj0xJq/Ib9Zyf9cG1uI/WiVb29xA4PWIF/XOC7XkrOH4K2FG/QvkH1i3F
N8Bascn5NthVa/I+y37mapN5XgdODpjKX3kf5rSp7wHYMBRfgn5rVRvXi4je
d1jXXKL36zbqCWB8ojqo8iJ+PhPk/ZkPf7JvB3nfd6CuHQ9yvxs4T9cfQeqb
jfUyT4fIa8TPHSHmfSrY+WWI65WAjd9DPO+Q6J/RTn8MsKO/nfqF9cPtKg+i
P9euvqfoL3VXB++7F5xd0kE9h8Tfgx3M20rx91fWi9zoLzMlzLxckzyXkXel
wc7usLqP4PSFMP07Le9FUYTr/yJ5fjLC++CXPHdG1H2U93lzRL2n6EebGGU/
s8Tfx6Nqf9wnMxxV75vcx2SUei6AM59EVV4x3ljYST9eBluhTubrKDj9Wie/
p6vB9sednD9Z9J9T48vl+2F20f8z+H5lX+2i/jhYG+piv8OS759ZD48V/2+J
MZ8D4NzaGM/Xxnzn3hj3/w5s/BDjeuvA1thu5q8fnHZ1q/cDrO/ppr9XwYlT
3ZwfrYP+UT0cPwas+XuovxWc/L6H78m+WvipxenfJnDu3jj9mIvxTl9c5dsH
vS9y/PAg6vbfcb4PEbBjbi/3HwLr3l7Wt4ITz/cWrJ/a3cvzmVGr/wdltxHk

          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.8929546, 0.3896616, 0.1794008]], 
         LineBox[CompressedData["
1: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
Odlf/+6Irx2s9SH/5GM0r9TFV/B/bQTs4w==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]], 
         LineBox[CompressedData["
1:eJxVlVlsG1UUhodCKYQHTBrapkvqAG0TQMWQF7bAtFDSpFnGzmYnTjJ24mzO
4gcqUNiGhwooSwyUh0q0GMrSp2K1FMJSyQpLoUTgJ8JSYEKlPpACAyUgISGI
/3P/SDdSZH065977n/+cubc8Ph5KLDMM4+jif+G38Pf5jnPbFn/MotmV5uJv
YEHYmQ8WF9jeeA84t1BxRYG9A8LuRMmqAvs/FTarqlYX2PpjKV5aYGd9DXjx
b32BzY+F/UdOIj/1m3Bupn5NgTOlO+X86QVw/q6d3A/5xpiwOfcPOH1O2J6c
hp7cqlq1fw3YM2upT/Qma1mP6H1B2KiMIu6urJN42R6c77ujTsVPg81B4cz+
/Rug/7k66gNnPqjT6g3ctovnr4OfCWE3OLUW+id30X/4lXtXj3tnhO3+s2An
Xi/np06As0/Vs36sd9+uZz2ozzdXr/ljXtag+ZF/okE7z3hLxecmwIEfGnT9
lzSyfnD6pkbWi/qt7xqZ74fe5U3UA87e0ER/ke9GhDM1c9gv9XUT9yuDn8ss
6gPnr7c4n+XQ2664uugq6H3UUucfuwZ+/mexHrBXGRQ/psquxjy0BLkf1lsP
B5W/1Ruh/3BQ6V2O83xbQpxP1GMGQ6p/7VifeiCk/ClFfuY1Fa86j/z8lyHV
j+1gu7GZesDp+4X9e+bBuVea6Q/0eDPN3B9x/9/NnHf4k93dwn4j332pRdvf
d6pFzes+0f+nHjcOtCq/bwYHTgobs4ewv/17q9bf9Lo26kM8t6NN6U8ibn1E
nkfc+bWNfoveNe3cD36529t5H4je0XbOA+rJzAs7JVtlHq4Mq++jH3HDDHNe
wIHhMPsl+veF6Q/mzyuOaN+zvzrCeUK+NRBhvuh/NsLvVfS/H+G8gM1bO9T6
veBUX4eqZ0b0P9OhfQ/5KWF/dFL8P6OvT8c6VX9XyDw8qTh6OfzyjndSj8yD
20m/xP+iqNZf9/GoNj++Y1GeD33m91HeZ7i/Uiu6WB++z8yNXfQHHMh2sX/I
t7/t0tanL+qmPuTntnZzPeJeuJv9g//ObDf7hfzsBT2M4z5yr+vhPGG9r61H
u09MZykf/hmVNvsLDjTbWn/th2zt/PQbNv3A+f7NMdYDtqwY65H7eCKm3ffZ
V2OcP+S7X8TUvB6R+60hTj9xX2fui/N+kvfu5Ti/Z3nvZuJcj/s68FecfiM/
d2+vpsc72Es9YP9nvawXbJ3v5fxBj7OhT72Hh8G+F/s4L2Dzkz7tfUh5ffRb
5mFtgvmoP393Qnsf7A8T9Ffei18Smr7c6n6NvW397C/88Y/o8ezPOrslA1o9
vjsHeD7i5tAA68d8p54f4PuPfhvFg1p/A7cP8j7D+Xb/IM8Dp9ODXC/631ta
L/7eMqT55fQOMV/m4+kh3n9g950hfs+YR99PejxjD7O/eK/ye4eVn2fl/Ts+
rL1fgR8VT+9G3L40Sf1Y7z2WZL/l/Tua5H5g63RSzecJsHPxCPfD+5kNjHA/
sPnmCM/fBH+/YdzZDP0XjnI+tkBveJTzAE5/Narl54wx3u9g79ox1Y9y5Ptb
x+h3BfQ+ovKrT4Hdf8f4foB9FeN8z8BmaJz3OfZLPah46iA487rKP+RtMv8H
q9Dc8Q==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]], 
         LineBox[CompressedData["
1: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
H1jxJXmGsdL7+hpYHURO6WzO3hbMF/wLeMawGw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]], 
         LineBox[CompressedData["
1:eJxVlVlsG1UUhodCWQIIq033NnVbaJMSiqEvbIFpoQ2kWcZ2FidxkrETO3ac
OJagAgUKw0MFlEKG7aESLYay9KlYhULYJKvsEFHzQlgKOFTigRQwS0BCQhD/
5/6RriVr9OncOfc/66yLjgZiCwzDODb3Lz/Lv093nNk298hX7b3YnHv6ZoW9
4fGLymyv3QnOHjgAe+mgsFkx5Smz9yNlr59eXGbr9518f3mZndX19L+kzOb7
81xZ5syvws6JWXB2xa3CM35w4WbhuR/8G2nhbKYO/twzwnY8jvP5pbfxPOwl
U9ipPIr3vSlh79F6nLeeEjanx8DFxQ30v7TMnhuFza1bEY+ZaKDeFdD/uHDR
P7ES+t9uYL5WIZ/X72K+cN6OCdsTVWB3fN6+DPrf2EW9uK90Wrg4Vgn/TrSR
/vF+bn+jpq/4WiP1iP5pYaeuAv7NC5uYf3DhoSbGA73Gq02sJ/z7vmtifmC3
z28W/4czYPfqZi1e65tm5n8t9C5sUfEe8kLvlS3UVwW9nS2sH85nvmxhvOuQ
zwWW6ofP10NvrbA9vv1S6O0Qzk/u3wC991sqH7fDnv/P4n0bkc8av/a+t9XP
+HGfda+f8UKvc8TPfMHu2RRg/aDH9AdUv7wDztwtnJ89IvpfCGjxFE4G1H27
4d9uDqp6bwG7dwWpD5x/Lsj7ka/SZFDlv7QG+v8Osp/Bud2tSv8/kt9nWllP
sOeTVvYL/Jt/tqr8TcJuHGzT6uP7sI3zvBp6f2tj/LjPXdVOhj2/Q/H4Cdit
99rZL7A7v7Sr/FSDc8s76B96its7OP9gz0gH/aE/sjMd7DfoKywJ0R/shhnS
7L6hkNaP9pMh5lfyuaiT+QB764SNqcNga7BTy5/zWCf7RfL9Vif9g83rupg/
zENmoIvzB3v20S76Axcmutgfov/0/Hnph0i31j/5h7vVfQ7spePd3B+iv9it
+bcqwtwn0g8Phhkv7vO8oux1+0T/t2HuP5zPnNej4rlG8n9VD+sF9uUU701J
P3/do+lzz+lVeiLSz1t6mf/10B/qZf9iHp0pxeGTmOfcWX2qHhtgL17ex/vB
nvY+9sdl0O/00d8m5LPGVvvlR8y/L2hz3nDe3mNznnCf+5Kt9JuyHzZGmC+c
t6yIpscZi3DewbnnI6y/6P1Mna8JgzNNUe5DxJ+9M6rsp8CFZ6OcF9TbmIyy
H5E/319R1kv64Y5+PZ+H+jkPsHs/Vly1UPbbH/2cV7CzZoD9Jvvt6QHqkf3w
wYDaD42wZ0oD7DfZbytj7A/Zb7fEGB/YfjfGfgK7P8dUv8xIPyyLa/pK2+K0
i/7hOONHfLmf4tyf4GLloHbec9Oglh8zOcj5QX0zTwwyX2BjUULLt++GhOqv
S0R/PKHtF9dN8D5w/s2EVh/r2qS2P5z+JL8nOJ97JMn9IfP4elKbH88PSe17
kLWHWB/0b2HfkNK/AGwcH+J8oz993w9p/WtfkGL9YC89kKI+zIf3WIr5qIb+
UylVrz1g59xh3g/O+Yb5PcL75svDnA/YM18N83tSA/1nj/D7CDZCI/yeg90v
Rtgv4LyRpl5waXOa+jZDb1ua+wVs3ZdmvWuRz3/T7G+wp3qU8wo2A6Pstyug
955R7m9w9sVR7pda83/6B/CR
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]], 
         LineBox[CompressedData["
1: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
d2fTgTh4Mfp/II8Oj4GPo//NihId/wMhS9Ne
          "]]}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
     PlotRange -> {{3.794688*^9, 3.830112*^9}, {0, 60.92830147177477}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox["\"AGYS\"", TraditionalForm]}, {
        FormBox["\"EXPE\"", TraditionalForm]}, {
        FormBox["\"NCLH\"", TraditionalForm]}, {
        FormBox["\"TZOO\"", TraditionalForm]}, {
        FormBox["\"CCL\"", TraditionalForm]}, {
        FormBox["\"CUK\"", TraditionalForm]}, {
        FormBox["\"EVI\"", TraditionalForm]}, {
        FormBox["\"INT\"", TraditionalForm]}, {
        FormBox["\"RCL\"", TraditionalForm]}, {
        FormBox["\"SABR\"", TraditionalForm]}, {
        FormBox["\"LIND\"", TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8168920180447607`*^9, 3.8168921011448193`*^9, 3.8168940947501774`*^9, {
   3.8168949331440287`*^9, 3.81689496117949*^9}, 3.816958551975214*^9, {
   3.8169587124182167`*^9, 3.8169587358274126`*^9}, {3.8169587957752004`*^9, 
   3.816958803960077*^9}, 3.816962380509277*^9},
 CellLabel->
  "Out[396]=",ExpressionUUID->"b1e8b192-87f5-4654-bed9-34a6c0c64fe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "GIF", " ", "to", " ", "show", " ", "graphs", " ", "individually"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"forecgif", "=", 
   RowBox[{"ListAnimate", "[", "graphlist", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.816892022374044*^9, 3.8168920295141215`*^9}, {
  3.8168923200479064`*^9, 3.8168923354342985`*^9}, {3.816892929410458*^9, 
  3.816892937186396*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"260bc130-90ce-4d57-9b78-689e5a67ecd2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i34$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i34$$ = 1}, 
     "\"max\"" :> {$CellContext`i34$$ = 11}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i34$$], 1, ""}, 1, 11, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i34$$], {1, 11, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->7.188558578491211,
                 AnimationRunning->False,
                 AnimationTimeIndex->2.188558578491211,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2748608, 0.1822636, 0.7272788]], 
                    LineBox[CompressedData["
1:eJxVlX1sU2UUxq9DPpwmFpwiilhCgkwJdExEBht3G3PYddtd131067a7dm3X
buuaoJFM0avJxO8VwRgSwcoUSUxmg6ITMWlQ/MBFa/yYKOqdS4xxiFdx+hfR
9Tnn/NElS/PLe9/3Puc5z3vuSv+gO5inKMqxuf/sb/bv06rz5XM/yQPL1qtz
v45ZYn38EFi/+S7ikYq1WbYOEqcnXI4s2z8mVvMnwdpfxObQVxuybCyvBtuH
Z8DqaeJkvBQc/4PXfVeDk8t20Hr1yqIsZyp3yH7oUWLEcydhPXGe2ByNg9PX
3S16ocdSiZXJANbtfcRGQQysPUesFu8Em9c4ZR16bGXMM1+Q/l4n+7Piduh/
1sn1P18M/SedOfU4ttTQ/lInWA8Sq1Ml4MRIDeu3oDf9To3ox7o1zesN4+Sn
3yXvB6eecnH/DpD+t1x8/gmcZ5tycb+uwrp6ZS3Xs5f8fZxYD/2C85Q3hUOk
/8darqce9emL6rjepag/saEup37t+zo+fzHWjfn1ki9wan29+IvnTW+9+AGO
f1sv/cfzyTyN9K+YD86sZZ7t3Qi9LRr7lXcH9D6s8fljm+Dnfxr3fxpsFTZw
fgyw3dPA5w/jPO1B5tk1pP8osX2sGmy7xc3PnwarDW65L9gfv98t/SD9r7gl
v6gv87mb9awiP+sauT/9lIddjexfAzh9uFH6j35ZE8RKoY/y/G8j36fd4NS9
HukP9psveiRfWLed8Uj9lIe/PezXBbBysInPuwR2fNSU8z79zyapB/lK3NjM
/p+i/FY1sz9VdL8+aJb8g40LzZI3PJ+6voXf9x7lt6JF9JPegZYcvckZYRX1
Za5t5fc/QvlVW6WflN9oa87z+n7mwpPk5xKv5Avr9lIv52+K9Ie93P896K+x
1yv6wKl3iY1Ts5SHkjbZT/Ohp43zPYTnk8+0cT9S4Mw4r+dvQn6V6Tb251Hk
M9HdLvPkTvj7ZLvoBVvH2zlvXrDd5OfHFoK1fB/r2wg2H/PJvATb3vDJ/Qar
P/j4vLPg+MIOyfNm6C/qYP+Wgx2pDpnnYP07WT+H/YnLO3m+FmM9va5T8gS2
WjtlHoGNyU6+T53g1GVdnJ8zYPO2LvEPbGvukv2k3+iSfMI/pVDP8cPRqMu8
Aeu7db7vR0nvq7p838jP1d1y//E+TWMefo30DnXLeSXQ+3I392812PyMeeQw
no/X+mW+4fzkfX653+DMS37xn/RP+Pm8I2DHP36ZD5SHewIyfykPh3LZ/klA
5hnl4WKA70MabNzUI/eF8vAC8+yv5OeHPTIfKA+W8DrKww3BnH5mtgcl71vg
7/tB7l8+/Ej8HhT/wOmlIek32CoPST/A9v4Q+9VN/v4W4vpayN+CsMwPsG1b
mOfrKPSokXBOP+L7wuI3WFnSK993yvPWXt4foDyHejm/F0l/Qngn6kufIDaH
CsDa5khO/UYgIt+7rdD/dETmFdh8OyLfjzLo/zki/Qcn9Sjr3bUN/j4Rle8b
WDkeZb8WqdD/U5T7q4P1K/pY336wtaeP/VhQDn+P9XG98yqg/1wf1/cl2FjQ
L1wJ/Y5+Ps+zHf6+3s/+FWE9fpbXRx3g5LwBuR9gpXVA5h048c2A1IP3pZUY
v28f2Lo1xvNpBGxvisn3E/u1h2KcryjYvBQTP6DPtmaQ/S0jve5B6T/pfWBQ
+kt6jwzyvPy6Uv0fagf9nw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2748608, 0.1822636, 0.7272788]], 
                    LineBox[CompressedData["
1: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
9sHPy7eGwrpg8sjHCwofRweK/gMQJstH
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 60.92830147177477}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"AGYS\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2484884, 0.3863264, 0.813373]], 
                    LineBox[CompressedData["
1:eJxVlXtQVGUYxleNNLrMhuSFLLd/KsypTaaZ0siDpFxk4SwssAsLHC7LnWVn
qskhy22apizD9dIfNGLHvNQ0E2wqScU4q5kUMkTNJF3UFpmmmSBcM3Jscop9
3uf7Q2cUf/O+33ue85zn/bivpr3QN9disRye/Rv/Gf9zZv1UhvwvV5v9xz4j
HEyezoqzsXwDWBsvy45zrFvY9moL+m1fCZtZGXlx1v8UNuo35Mc5uCxL5p18
rCDO2pfCkXt9jjgHLrGePoR+c2m2zO/JAo9mCltSl6Hf4le8B/NCU8Jm1zXU
I4ty+D4m9MS0HD6/D/NsLcI2by/O628LRzsO6HGOLszlvBxnnK1P5fL8DFhr
zKX+vkLo3yls9B9H3Rwgb/8O8+xrNtKfE2DDt5HnE8Ch7cJR5xJw5FP2B7rB
sQl13on5wZo8+vMb6uFtZO9a0f9JHvvn4P2s46p/MerarQ553v4weHSrg34O
F8Hfow5+v0Vg+wUH9f4KNhbk87wGDq0SjgxvBus/s95x1AW9CQWSn8QGcPgR
4eDkx+iPegro3wVw4Af2j7+DfnOuzjzeUQy9K4UjM9kl0Fuq079NYPvLwpax
zFL4+Z9Of7aAY6lO6l2JfpvLSX/GMF9/yUk9fugJfuCkn/ugx/pAIflO9GtO
YS2tCBx4gTy+AmweZH/XUtH/TSH1vYJ5Rn4Rnz8IDm0qov+H0B95j3VvAeqx
4SL60QO2XSWf9EFv+DkXn/8h6tF3XXzfbaJ/yKX2SfT/xfrM42BLdzHnfQ+2
Dxbz/TLBxuVizrsNHLq7hO9Ti/mR9SXM/0WwfqpE7bvkYbqE+vdKHpaU0u9O
fI/oulLqH8J8a1sp/Tkmfk6WUm+/+HmXm3kaF/2am/fTpOhvdnNerujf7Vb3
m/iZ5GE9BXVbukedF/0NHubZhXpwh6qvAYc/96h9QL+2uoz7e13yXFfG73cJ
bHaW0Y+D6B/tV/23i/6JMvq5X/JQXc77cbXk4c1y+jEffsX6yvk9BkR/lP3J
xyXPiV762wOOvu5l/5T4e8TL+9KGedp57w3+BeZXqDyjbj5awXyeln0LV1D/
eeyX8ZPqT3FD/02V3P9B2ceHFbejHnNXqvx54O9YJfdlK+rhOVXUNwqOPkRO
HUC/taSKeUsCa8Eq5vUK+i2pBvf1W7C9yKAfI2DjRUPtl+h9X3Ev9Nrur+b7
/APW9Wrq86A/2FHN/J0QvQeqqWeV6B3h+bRncD7gqFG/H8TP52vU/Yn66L4a
9Ty534bJafNQt/9dwzzWiZ/P1nLeTrnf9tZSz2W5376upV9TYP0KeUzmBe+p
474ngK17yOmJYO10HfN2FecDMbK3CnUzxUf9/4r+p33Uu1D8/cLH+cXi7x8+
6t8t+hfXq/tR9GfU33Af2FpZD3wEDv9ez7wsQH80uYH1dNG/tkHd76K/qYH+
rEM+Arsa1P0JtiQ1cn8jko8nyR2nJM/1jdzXGTw/FGrk+RHR/1mjyqvk44km
NV/8rW2iH0ckH281Mc+m5ONYk9onyfPFJpVXsGk0U0+yAX/faOb5cCX09zWr
fa6A/l9U3QAbt7Swfg79sdda+P0nwLbDLSq/YP1ci/p9Bw7e3KruM3DYTu66
hvlab6t6P9QDPyrOrIL+eW28T86IXncbv+80OHSWde9y9EcsfvrXCY6t8Kv8
gW3Ffvp1Fqxv8av9hz/R636lH3Xrg+18vx1grbBd3U/oD2wmJxaAzUPtPD/r
x/+pYyWs
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2484884, 0.3863264, 0.813373]], 
                    LineBox[CompressedData["
1:eJwl1X9U0lcfwHHm7Ml+6DBHLdcYUsY52REsW65Y4+aotMbQimz0BIoWay4p
xSSHonNoWmFp4ZYVj1nLNRpWhy0tol8Hi1qsx55pjYaVbtl3hFaHbfTj+fT5
3nPuued1/7jnvs+559y4nILMvDAGg9EM8+UKw+MpoIjX7Nr95OZq0cuNELiD
b9p24DFaEK+hiNklq8qIUry08iNwkYJd+oKHrteBM4L9G6wE7TwATjRZ1XI5
OnAVPIanVYzSojl/gf9wCGU/bEdLuRsoclEW/mHeYbRhCbjF706NOYe2FYPL
jQ1zzt5C+yzgVWx5UsETNNMNfkse3bh9pPKlRU/AY3laU97raM3bGykSGu6p
FcahLWngQYfQGJOI9hSCe2stFYNz0Ix94C5ZuP7sQrSgC/wDV13StAytHAYf
8rsLC7LR9ZMKKbKrg1+wYD3auQBcZWxY91YpOqABF2YG8x5Xozl7wDlseba7
ES29CM4YdKxq+Q/a8BAssnOzdEfRtolFFOFXGpdKO9G+VDBbMijhdaGZ68GR
sZL05910fxP4aX+7+EYf3X8O/KCdRb7z0/0U+KZeJ/wiRPeP11LkUpp39scR
2dhPwD+yyMwkFlrwKfibvtbECC5auQu82xox7bdEdP0Z8Je6/Hj7XLTzPrhI
7OFsW4QOxBRTRBWdPCl3OZozD5zpNU+Ym4OWqsGkLTRuXAHasBMs0Cqi7pei
bafAb5Pzo5w1aN8AOCqSN8K8C82M3kSRZz21jPUtaNFcMNXqD33wPVqTB76l
yQy+eQptMYEvC+3Dw11oz0nwyYhY/6UbdP898OFu/X3LHbo/qgTev6Xv3qaH
dH8K2Jgv9kme0v05YG1K2634UTnYvxWcGx75y1MWOmAHL/Vorv+Xi+b0gec3
d1/9lo+WjtFRJEmdcqlCiDbMAnOSmy9kpaFtCvBrcC5fhvZtAT93qzr/pUIz
T4D/NLvs3gK06Db4V1XCsROfozURmyni5pusdVvQlhngjtDw4ZzdaM8qcJtL
1vruATSjGtzU0LGfaUML2sHVCvae30+hlbfAxQmVux2X0PUjSimSF+zfset/
dD8fvOx82rb8u3T/SnCqyVqTGqD7q8Az5NFVsc/o/qPgOJ62fGiUCvt7wMxH
PZu7xqNtYZ9T5IVDWLx/Mto3HeyvtWwoFqCZK8BeWfhnH76HFlWAr3DV6inp
aM0RcKffrQrJ0JYb4G87+IrrKrTnBfgrY8PHbRo0Y5qeIjWZweUGPVqwDLyJ
Lc9YUYtWloHXDDqWJJrR9YfBy+3cRSNa0c7r4A8qjam/2tCBp+CZksF5x0+j
ObwyinBjJXNqL6OlGeDogfZZ2b/Q/aVgxjFWUso9uv8g+KFeN/21Ibr/Gvh2
mpc38Izu/wd8lUUmnx6di/1Tyilyqq+V3TgBrZGAj1gjYj+dgraUgL/W5bPm
J6E9LeAtYg9z4jw04yq4JDp5bCAdLQiC13rNI10r0Mo4A0VkbaGwfbno+sVg
sVbxvGgD2qkFJ5Pzfy8uQwf2gydH8p5w69Ccy+BxvbWBv81o6WPwKwf9Dzyt
aAO7giIBTebv37SjbYvAvwntd8ocaN9G8E8RsbeXu9HMveDT3fre6T10vwv8
naWv+9V+un8IvCdf7Lk5RPe/WUmR2pQ2d/tzul8M1oVHumrG5GG/Bqz2aM4p
3kALvgavaO4+/U48WnkBvECdcjJyBrreD56V3Hzi3jy0840vKDIF7t25GB2Y
D465ojqyMwvN+Qwc1uQ69EkeWmoGD6kSWkQb0YazYB/ftHdCOdr2AHwtNNzk
r0P7WFUUcbhkjReb0EwR2NrQYWo+iBatAzcr2HWFx9CaRnBdQqUx/Qza4gBv
DvZXxF1Be/4Af3I+Tf9XD90f8yVFskzWkmv9dP974IXy6KJDw3T/WvA7PG2B
/gXdvwMc/6hn3bKxa7C/E/z6GeGahInoQD/41TpLdthUNIdppMiwLPzfvTPQ
0jngPq46y/Y+2pAL9vjdS6uXoG3bwWc6+B+tXon2/Qg+amxIn7UGzbwL3psZ
FI8tRIsiqymylS0nd8vRmtngUvjwO7aiLdngdXZuyo6v0J468MpK40z1ITTD
Dl4kGUx8/zha4APPjpVMG+9EK0fXUGTqQHv8n1fQ9clg1jFW3IVeun81OLxM
N2nPAN1fA36U5p2w8RHdfxx8h0Vi0hhrsd8L/rmvNYoTiTaM3EIRpzVidHAi
2pYE/l6XP+KnqWifHLxP7GEcnLlW9H/IDMrP
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 185.61389198949922`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"EXPE\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], 
                    LineBox[CompressedData["
1:eJxVlWtsU2UYx4/TieIHK05xiniIODaGozAvMJge0DE2djntLl23bjtrt67d
pWuiRDNvR5IFBXTHW8wSwYMX5BM24HSiJg1eUFy0fnGiiJ375hDrZWpIiK7/
53mWnCZN88vz9nn/7/95nvddERzy9uQoinJ0/pv9zX6+rDi3Zf7HHsu/VZv/
dc8RJycn1Swbt2wDqyOz4Mx+4uTy3JVZVj9f4IIs638Qp1+Pr8qyuayS2LNh
dZa1T4UnsD7+G7FWeqwwy3b+dso3VwhO3bdd4livxIiN0ROIW+c4Pn0B8eT1
VeD5DzijEdvxj26D3v4q1pchvS9ViR7E09dW0/rKacRd9xCbeSWkP1LN+iJu
6H+e2AiHwfaHsv5IMfzctEPyrYGfPcRKUQD5rVGOx8tJ//s7RD/Ol5mR9WfA
ZrCG8p/YCX8T+2pEH/6ffpfYmDiA+rima7g+IzifdlUt+bV4Cpx6ulb8LIK/
79Q69nOfJVYDo4gbV9QxX43zWOvrpF9wXv0Hjh9ZBD/M3Hre7+V10LuW2Jy9
BvG0X9izFn5+x1xejfV2jk56pkLg1Bpd6g1WfLrkL4XeJ3X2I3YX/PxPl/OU
wc8iD9djxQb0Q6OH63foDuh/3MP+a8hvHhY2EXet8nK9LmI/zePleswhHn/E
y/1airj9ppf9qgenvvbKPKyHn3UNrH8p9rMebhD/EE++1sDzOQZ/MpPE6eE8
+Kf+0yD1KYG/OxuFyd9XG8UPsOsUx0f6wdpfjTIPyK/sbxJ/EHefbOJ67EF+
4/cm8R/rrZuapf8RT1YsMP6vf9IsfmC9eb6Z5+cw6b3BJ/7ivOmtPvEH612D
Psf+9qyP/Tl5O/y8rkX8Bytai/QT2N0n/A3N34st0u/gzBK/MOZbLffL/YW4
3uuXeQabz/m5Xj5w4gM/66lE/2tlrTx/y5Ev3r3AiNvPtkp+cGqilf0cRj5l
RvgC4lZXG+vbSv7ubZP9qB/G2+Q+QFxNt4lesL44IP5iffqpgPiHuOtYwFE/
7ceA3E80j4va5T4G2+va5Txgd6Jd7lfU2/i+nfdLgq3LOuS8WJ8s6ZB5QzzT
IvEEzdtUB++/jO6LSzqlP6mfiztl/qifm5krD2K9ZnZKf6OflCKDz7sb7G4w
2J/zWG885mTrLYP93gVWC7q4/06Bdb2L+/Nfut+Gu8Rf0vtGl9QLnP5K4hq9
F7VBqS/6034o6JiH1MGg9BdYmQxKPurnv4NyXuRLPhiSepOfB0KO+Ve/CDn8
1P8MSX7y++Zufh8qwK5Xuh3+ap91s94yxOOZbtaTAz/tG3tkvsGp+5mnj9P9
9nGP3Fdg69ceua9J/9Kw9D/p3xLm+y6f9A+EJT848YvwA9QPeb2Sn/Tf2+vU
H+3l+Rgn/S9wfMxP/bEkIu8X3XebI9Iv1M/hiLx3qIdlReQ+on4+HnHUQ98Y
5f4rpv4IRTn/PtL/TFTmifS/F3W8N66fo47+so0+6cc74e+ePpk/vDfKeJ+8
7/T+/dTH5ztN/l/ZL/qxPrNbuB751KMLcbyX+pl+uU+w3rx8gPPnYn3CPeB8
/94e4Pd5ht6/0wNyXuSzLx2U+t0NvS2D0q9g69tBPs9Zeq+VmMw7OLM6JvcT
1qtNMZnvjdD7RIz3q8H7nr4Yk3kEuwqH+P8Fm6HXOyTztAl6Hx2S+wlsH5L4
rjLtf0Fl+nU=
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], 
                    LineBox[CompressedData["
1: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
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 41.45779687267259}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"NCLH\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38822480000000004`, 0.674195, 0.6035436000000001]], 
                    LineBox[CompressedData["
1:eJxVlUlsG1UYx4dAgaYSuGm6pEs6XYAGEAz0xBKYFkrSZunYzmInTjJxbMeO
E9sHKlDYhkMFlCXDdohEYaBsp2K1FMJysMpSlgjMhbAUmFCJAykwLIETgvj/
5m/pWbKsn773vvX/PW+J50PJGkVRji19K7+Vz6d7zu5a+ik1HrxYX/rVFgXr
tXMrKmxuvg2sHm1ZXmHvcJVhVz8S7BSaL6qw8YdgNzgTqLC1sQW89KmvsP6B
YGshWFfhwm8tPA+709Aq/MemwOVbWnl/VYWVXCvvg+2zvn3uyMoKl9bsFfm0
zCO+p++V4qnZqh3njad9+8lF+HNX7RP9mJ1F/MBNVV6D/NOC9fnJtcj/iX3s
B+zOu4LNVAqs3dAm+TOTPi/uANtTbVJ9pbfa2A+wd6ZNys+Kt0tcfKSd8VCf
+0Y746G+wLxg9eACWF/RIe431+J8+aEO3kc+yuuCnelp+Ne+r55fjfwv7KR/
sH1tJ8+jXuNbwVb9UfTHWrafempAvlcLdifr1yPf6H72cx36+ZVgc6YR7NQY
1Be4fKVB/2Cl1+A84V+732A+G9HP/wSbUydV9LMpSL1shh66gqwPbNwbZP/h
z3q1at+Efl4W4rzAejDE+SNe4a4Q8wc7L4V4fwPy/1ywe6QA/2ZnWPhrioHt
O8PMH/WVXghL/fRmw1I/1X/CrAf24oEu5gd2n+viPmE+gU+6eB/z0//qYv44
rxzuFvadO8HaqSrjvvl7tzRve0MP+w8u7ZHZeL+H+kI869ce1gO9Fdf1Mh+c
d3f3SvkHJnqlfJyFXuof/sqrI3y/cF/RI9QT7NpYhPoX+n0qwvmIftZF2X+w
2hzlvMDGaJT+hZ4fj/K+0PM7VTvmpV/fx/xgLyT6OB+w81gf9x9cnumjvsHK
mT7OQ+hhuJ/6xb6UHu5n/6An70Q/4zcif7ef84b+jNoY3z+w+2CM/cX9wPEY
+wX/+ncx1g8uXDAg7ZdzzYBUn1YcYH+xD+Y3A4wPts8blPIrXTXIerBvXmTQ
j3cI+2nNDdI/7MVzhjh/2N0rhnz7AXCgZ0g6r1tD0n4rTabkXwub/vvVDjbv
Mf18asD2Kybjiffh0mFf7w2wG4bM1uSwX9+yLcj3xWF/fqdEvp/x/DT8FTri
7Ifo5x1xqf/l5+OSPpTZuPQeaH/HJf2Vbh+R3gPv2RHehz/14xHpPTP+HGF9
sFubEtI8A88kpPP6hwnqRejBS1BPYGd9kizet1uTfN/B5ntJ1ge2f0nKel6b
kvTo7UrRDr2q4ym+l9BT8ecU8we79aPcH+grcPOoND89Myq9/4UnRzk/zEup
S1PfOK/dmOZ7ADZTaWl/bDvNfiHf0ttp7iPyMa7LcD5gayTDfUJ+xUcz0v+T
+2aG/Rb5/5jh/yvuO+YY4yP/8qEx7hdYOTHGeKhH+2GM/RT6Xp6V9O89kPX7
cxzn1WNZxgcbp7Pcr63I//xx+t+O/LVxnt+G/r7m21M/gQtfj1P/YOfcCfoD
KxHyItj+coL3Ea+k5Khf2L3Lc/48TiO+2p2j3sHGfTnWewn6+W+O+wV7YEee
egDrobz/PmwDF+7O+/39Auy8nPf1snu7/j95O/B4
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38822480000000004`, 0.674195, 0.6035436000000001]], 
                    LineBox[CompressedData["
1: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
O/Tbk5cmWOm/mgSr/Mi7YzZ33bO2E/wf1auzoQ==
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 15.585593385211503`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"TZOO\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.513417, 0.72992, 0.440682]], 
                    LineBox[CompressedData["
1:eJxVVXtsU2UUv07xMU1scIr4gEskYwMcF+YU0ekFhcnY47Z7dN267bZbu3bd
o4kSzXxdTQgK6opgDIlgdYr8hQ04negfN/jAx6I1MU4UsZN/jEOtj2liYnT9
nXOWfE2am1/O+b7vnN/5nXOWhYd9kSJN047O/Qvfwu/Tzec2zn3S+/cvM+e+
xizjmumlBWwv3QJsTv+jF3D+AGF9R2J5AesfbZHzpQVs/T7vv6KAnetqCBdP
lRWw+QHhuR/syV8Ju0sWlBdwevE9wPboCfhn7yJsVh6DvzbE9okl8E+dI5wb
S8LfvWorsFNyBP55k7B+pAZYT2zlePzwt55j/5kvYM9dUUv4xCzu99xRy/nO
rEb8sVp+L2Mg/mcJu5OTaxD/u4S18tOrwOdt2yQenLcjgitWIv5RwtrUGN5z
3yasBy/H+fzZbcI3zjvhOuED9sxTdVyvEO7LvVnHfO5Afp5pwk71LuL/0nq+
fxTvZZ+sF/5uBL9vMPaux3vGmXrOr47iv7iB36+Ef2pdg8KP9W2D8A1+nAWN
FF+yei3iXdMo/ICvXKCR9TICnPy6UfjE+XSRxfU+A5xdbbF+TNyn+S05vw7x
Psb+o49Xgc//CLuzP64Hn+Ve5qP4Fuih2ct6eP4mxP+IV/jA/c5hr+i5Enyu
8Ikd2PT6pD44n3zQx/ctgj39qk/0hfiyn/P5kS9xv93QxPdvAE490CT9AX/3
5XmM/POTKtb/bpJ6gr/M9mbm/yTsuRebJT5gzyfNzH8Q2PyzWfoN57UDLVJ/
YONkC+vzBtTb/k3wWAXivbaV+S2D3d08j3G/9X6rxAd/55dWzr8EOHO1X+qH
/HOb/Eo+nkE/852Hf3rGL/kDZ69sE/0Da2ab6A/Y6G+T+UTx71NxfmGA73PQ
T3p1gOM/THruC4j+4e/sCSj9nHknIPzhvLmhXfhCPyZ72yU/2NPPtIv+cD47
0S75wq6dbRd9wZ4Kdcg8Rj7u7g7hH/zkxzuU/PVch5wHtoqDCn+5J4JSf+Tj
ORYUfdJ8+y6o9Hfyok6pF3B6bafCh5HplHxRb/ubTtEf4ktd0KXU363okvlN
em7r4nlbRf021SV8wZ45r1v6mfS8qpv9x0nPrd0c3z6cN51ufn8n+kcrt5nv
WpoPTbbUl/rvYVv4pf57zZb5DqyXhlgvp4AtK6TML2ckxPFsp3hfCcm8o3g/
C3G+B5F/sj4s8YLv9P1hhf/sS2HOdxOwNhlW9GP8FRa+ic/7epT78wd7FLv+
cY/Um/TwR4/sF+rH63v5fS+w54Vemeeor/lhr6KvZL5X5iHtu2siyrzI3h0R
f2D7vYjMH5oXP0fkfeTnLoqKPmnfbYwq/aEPRGWeUL/9FFX2Ua6kT94nPd/Z
J/ub9BzvU+PfK/4TNC8WxpR4jNtjsj8Rjx2NybzA/kylYnI/7evjMckP/tat
cfZfDOz0xBV75um4zA/a12/FpT543/NDXPqb5oXdL/sO+yS7q5/5Pw59aeP9
0j/Axvf9ok+ad5ckWE9F1G87E1zvPaTvownm8zL0h3U6IfuQ+vHCAa6PAXvG
GGC9dVG/vT7A+VTAnjw1IPsM+zB9/iD5Rw8Ba22Don/s59RXg8p+dbUh9i+F
f37lkNQf/nrLkPTrzYj30SGeV/din+f+FVwJ7CkblnyBTd+w9DfOJx8Suxc4
fWgeV5n/A+RmBNU=
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.513417, 0.72992, 0.440682]], 
                    LineBox[CompressedData["
1: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
GUn6P3NRtBk=
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 32.35457552893672}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"CCL\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 6->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6660832000000001, 0.7430418, 0.32293540000000004`]], 
                    LineBox[CompressedData["
1:eJxVVllsG1UUHQplCR+12kApS2q2NmlL6iYgsQWmhZKSZhk7TmInTjK2Y8eO
E8cSVKCwDR9RoVDiQvtRiRZDWCohFatQCJtkhb1E1PwQlgITKvFBCpglgJAQ
xOe+gzSWotHRve+98849975cGhn1xZZomnZk8a/8Lf8+3npq8+LHmve69cWv
Z0Hw4q+qjM3VtwHb3qnVZVw6INiqPHxZGbs/FGzGv7+ijI1fBRdmmteUsXVx
o6wfq1xbxvp7gnON4SvLOPOzYPd4CvHcqm2yfuEQ1hdvEaxXzCJfS29T++1F
fvaUwt5rkV84/3byQ35JF2xOVQG7U4ILVUuRb+xT+Q27ELdXNBFjf9dNgu3J
Ug34J5rUfgevAv/Hm8hvPfi/JVirOVENPW/YTj2w3owJ1uvrhf+EYHdoQvi/
vp33R7x0UnAu8zb2syLNvA9w/tFmxrHefrWZ9cN9XHMqvn8VsH5uC/kBFx8m
DoGf9kqLqs8czvd808L64Tzz7FbmA2frWllPYOOrVqVfxQbwXdqm6lFbC74b
28gPcTvYpu6/DPplPm+jPtA3t8SQ9dMLyC9uMMgPca3LUP6LbwTfB1V+w7FN
0PNfg/tdAz1rvIpPuh5+8Cs8vQP5xv1e+gv7W4e8qr4rEXet9Qnfwzs90NMr
2JzYgnjmHh/vh3juOZ+q/wz4FY/76Bfsb7a2s/64X/Zuwfrc34gXnmF82Trw
n2lX/h1Hvdx/tjvqld/hJ3/Uw37Kr/xUjXzXMb86v0v8/Luf95f6H+hw7O/5
oIP1k/r/0qH6IYN49qJO+g/nF7Z20p/ga7zb6egH66dO9qv494Iu3hf1t7d0
MY71rhHGx3Bebl6wNjuJ9cXzAsrf+4W/HlDxy4X/UMCRb+4NkD9waXmQ69E/
7oYg/YT7GINBh/+tPUHqJXq/GSQ/rNev76YfZL4NdLNfEM891s1+wfriVDf1
BtZOdrNfpb/CPTwfehQe6aG/oFfpaA/nr/jB7uF60b8iRD2A7YdCXC9+eDnE
++I8/euQQ6/MWb30C3BuUy/nmcy3fC/1w/7ml730M3D2jD7WH+cVavtYb/Fz
4H8s82K2j/2O++VP61fv06fij/X91B/5rs5+xzzWrX7qj37TakzVr42YP552
k/yl/+4zlX8bgLMvqPzxeezvXhN2zCPDCLOe4G+NhTnvhO+zYfIXvT8Jsz6i
Z0uE+sh7d1eE9RA/Px1x+mEmQj7wj+ePCN835BfujLLfoW/pYJT1FD98FOW8
ATZ+i7Jfga1LBjg/xA9PDlBPmQ/vD3B+4D6Z0gD9Lu/dhTHqB1y8Ncb+Bzbf
iTn6OftjjO+v8F8Zd9y/tDlO/XB/93Cc/pV58UPc8d7YlYOO+eW6eZD9IvyT
g/Sv8H9iUPljGlhbnnD433NjgvfH+WY8wfqjn7PZhPKjV97rNxL0v8yL65LU
A9iKJpU/5P+J/O4k+xPYfi3pON/1XZL1En+YQ8ovx/GeFHcRT8j7d3TI4VfP
t0P0m/TjOSml/xTipZ0ppbeF/nAfSbH/gI0TKeoNbJ057HjP8p5hvmfoJ/2l
YfYD4pkvmK/Xgf/pI2q/KLAWGOE8AM5+NqL4vyjvtZbme4N4aV1a8f8L2N2h
8KTnavB9IM36A9v/pOlXYFf1qPKDH1j3jfI8vP+Ze0dVfe8Azj0/quq7p07/
D3YH8yc=
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6660832000000001, 0.7430418, 0.32293540000000004`]], 
                    LineBox[CompressedData["
1:eJwlz39U04Uax/G5NHQcaJmIU4JJcthV0gHiEPyxb+bENJjkuHJDXTj8hcRk
oeAPmFNADHITfwWaX9AMze5mGuQPxlTUhMYdpIkKOi+KJl9oGqQxzR4/POc8
5zmv57/36OT0+BQ+j8fbR/vq0jgc6RxTFnTpwV9smPzVw02eNKcobrAFlgZp
OaZJG189vBZWx5FX7R4RENQIG7PJHmdv54e3wbaD5Iq7h7oZDnbZyVM9UhOU
blj8jNwSEmpdJAh/ZWXgao7RxT8NShPB+rlk76ya4vUS2LKGfGT/5t5CGexk
ye9fmL1wrwIWNpDvPHzj4mEVLO8lr/P+NeQHDawNyOAYn4n7dl7QwexssiUx
+XmTAXboyHNyJRqnCeZ9Re441N3QzcLSn8ib6k+GvzDD6idkP9e6Ms9a2Oin
45hqH+a1kY2wTUGOj/ZIlbTBLi25S21vnsTB4jLy1vySqJnu/v6L5HeOJVZ8
JJiI/t/J1qYAQbIItog+45jEp/dXayWwcwa5x+/YjRwZLPyUvP29DKZYAcv3
kscujzxSpoK158kXi/8WHtXALEdWn6jL+lEHO4Zncoy7ZZvzkgHmMeTdfytj
rplgaSo5dIyvpZ2F1bvIP89u831iho215GXpB3N5tbDtNzJ/14oH3o2w6601
HLP/9IS4t9tg8TRypLO3ahwHK5eTfxl01j/K3d+/g/zpOEN+jCAC/WfJQ+bF
dCeIYGcH+dAa74QUCSx8cy3HTN93tUYng+XR5JvnSoMMClibQs58oC42qmB2
O1noFdz7lQZ2nCJ/G9aV9J0O5t0jKxacqDtjgKXeWRxzd2N2SL0JVkeSNxyc
vrOFhY3JZN8rg553mGFbEfn77oYlvVbYVUX+cNiOhtcaYfFd8sPJC8KHtsFK
z2yO2bzYv0zMwfoIsn/ePf4Ed3//YvKpo0dXThVMQn8heb5D2zxHBAtPkn/v
nRT1Hwksv03eNupF+XIZrB28jmOCmAtD1ipgNoxsW1q4Ok8FO5LIHxfF3SjR
wLwC8p/HfZgKHSw9TjZdv1VpMcDqW+SQF+XCWhNsHLSeYy4HLs+ys7BtAjk5
Zrzzlhl2JZJfpPXMemSFxVvIe0tOm5/ZYeV/yeGn9L4ebbC+hdx4W5Hrw8EW
/gaOWTHQ68E77v7+EPLAsb/Ehglk6P83+UDcl1VyESzfRI7KXOwfJ4G135Kv
lQblL5TB7DWy1tbZlaqAHS/Jnh3HVetUMG/sRo457JlVs1UDS+eTmdBpQXt0
sDqH3JowsPhrA2ysJK/dUN9zwgTbmslDK4xJ51nY9Zz83eWEOocZFgfncExM
l1/IHSusnEduH9pe0mWH9evJOZFH3O5W2PI1WbQofYmAg53/I5/cHNEwwt3f
30eOO+IOCxZEon9MLsc8ajxXGiGCtbHkvJ4C/vsSmM0ii0fGroyXwY4K8pnp
w5rVCphnJyek3JycroKlT8mPt7HlGzWwerSeY4osS4cU6WDjHHLwryGrSw2w
LZN83v2kpdIEuw6QF44+Ja9mYXE9+Zkit/KiGVb2kEtWzRRetcJ6/00cM36H
Z9b/7bAlhnyluumOqxV2ZpA1bXtmveyEhfvJL/mLzF7u/v7L5FLJGF8/wWT0
PyZHxD7KGSuC2VEGjnHoLB2REtgxk5z65ZrYWTKYpyW/XjulSqWApaXk8nt8
f40KVteRpwiu5GVoYGM3+fqE7V16HWwbsZljMlQq1XYD7HqP7LV+VM1+EyxO
I1eyd8ccY2HlHvKMS98UnTbD+nPk251pPT9ZYUsnOfvNiUnX7bDTZwvHDJP1
XbjfCgvlZHOSbVxPJyxfSf7AkF/Cd/f37yTf/2auWyiIQr+VrLcPXRIggh0P
yaP+aKl/VwLz3srjmKoRB8KmyGDpVPK8aSmlHyhg9TIyt2QcP1EFG03kgsLH
K5ZpYNsZcqC5uilTB7vuk2uubpy8xQCLhfkcs6BvRvkOE6yMIv8RIBhSzsJ6
DfmLmQ6t2QxbviD/K3V3S40Vdv5IrjMmyX+2w8J28uKqwMqbrbDcq4Bj+m49
fOO3TlgrI+8aYF77tK+//xOyNDjzziBBNPo/JzfMjZ41TATzqshLMwaYAyWw
1EkesPfy8FAZrBZs5Zh9NcU50xWwcSJZ1v5Rx4cq2LaI3Dx4ZGySBnZtJaeN
d/6wUgeLT5AHzz/8drYBVraRD2avyiswwXqPQo6ZdiCsaxcLW0LJN+qezT9k
hp0fkz97ZD37vTVa/g/n0Lkj
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 27.7449148145774}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"CUK\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 7->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8083416, 0.7110806, 0.255976]], 
                    LineBox[CompressedData["
1:eJxVlVtsVFUUho8oovWBEauIIg4vSEVhoKLcSk/RUuj1zPQyvUzb02lnem8n
wUaDoqMJwQvYQTGGBHAQrTzpBKzWy8MERRQbGRNjRVFPJTHGog5i1ZgQbf+1
/iZDQqZf1tpr/Xvtf++zONjvC80yDOPY1P/p3+l/nxVeKJj6MXOP321O/Xom
haMnBpZPs337ZuEJLzh9UNjZnu2ZZvcnm3X9JbD1h8aPpMHRhUVg9xtzVk2z
eVJ46q+V0xz5XdgOh8HxBVs0boBT9ws73hHUM/oYjyIeu7BF9X0BTt60FZxc
NBv90qawe+eyXOjtFo5HLiPfenGr9v8J7NxQrLwE+a6Nwu7AGdHfUaz7iyAe
eb5Y+xUiHv+gWPVcD/asL1H9/6C+HSrh/LA+NiicnDwq+t8tUb0T4PT5Eq23
V+YZLNX8pTiPxO7SjPNz3i7lesRd46Wc3wrov66M+0e91NNlPD/0M94q4/xF
//fCydFRsH1Nucxn8EmZ/6ryjPlZ3wobOeeQH51doet3Y7+JFRXafwfYqavg
/mWeX2u8qOUezHOWxf7g1F2W+ukU2PBb3M+90PvETPw+zPM/4Whe8VrMM8cr
+saOgN1VXp4X2HrMq+ezbw30H/Xq/obArjt81I980+vjvNZB/yM+3U8H8uOv
+bReFTh1ZiYfbJdXyvyz5oNjD5PHwMlXKqkX+0mPzuSD3X9X0t/Yf2KgivNA
3Hm5Su/z8GroP11FPyPf/LOK9xP5xsFqre8He04J2yOHsN6+WK1+PwmO3VrD
+eE8koU19Afi1kc1Wu8lcPS3Gj3fw6ifuNmvPI79Opv89DPirl4//SzznPCr
n9dg/qkba+kP0W/W8j0QP3TV8j4jbu9jfqnMc16d3mePzDOvjv2x3monbxM/
7K1jPfRPvF+n8ysSP6yr530AR9rq6Qf4I/5cvfrxNDg1Ihzfv2A99J8n70c8
1tIg+dl94OSzDXw/xM/DDby/4menQe9fAPlWVkD7ZSHuPBVgvvj5eED3nwCb
3wV0/ULRP6dR/TMp81/ZyPcM7Ek0ar1c8fM3jdQnfr6qSf02V/y8vCmjf7q2
id8X9IuOMX8Q8cQVzRn7dZY1Z/R31TTTb6I/2szvD9jIsXn/RW+lrfknxA87
bPoT5x173aaf4Ff3khbqQb5ltfA+iN7tLZl6XyXPFb2ft2S+D2VBfp8Qjz8U
5H1H/dThYMb9MEaD2q9J9P8V1PoVWJ98sJXnJ3441MrzQz/3p+QD4odLrfQ/
/Ba9rY3zA7sOtKlffwabH7dxfuBIuk31Ld4A/beE2F/8/ECI5wO2PwypfwbE
z7+GeD/Ez/PDGl+N+umCsL5feajv7gnze4B44pcwv/+IO9nt5Dzoz29nf7DZ
2c7zRH7khXb6A3FjXoeex06wZ0NHhh47LGyO/yv6Yx06r02ol3xvJh/rrbWd
vM8bMd/WTs4fnNjTSf+BnXeYfxbs+lHjI4vyMV+7i/M2Md9nunR+YbAx3KX7
T4I9PzA+BLav7eb9BKd3dXO+qO8+1s3vHfpb57r5HmM/0at7+D0X/Z4evo9Y
b77Zw/uD+pGzPTxfcPzKXvYvgN7aXu33JeKxr3r5voOTRp++BxdF7519fC/A
7mryNtSzHp+Jg53LfTwfsGtpP99TsOnr1/d6F/YTebSf33OZ91A/95Nv/g89
TQqN
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8083416, 0.7110806, 0.255976]], 
                    LineBox[CompressedData["
1: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
zU1mYprsf13Luh4=
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 46.343898255946385`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"EVI\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 8->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8935136, 0.6004149999999999, 0.2205464]], 
                    LineBox[CompressedData["
1:eJxVln1sU2UUxq/zA0UTK6KIItaYIBOD1UWFwcYFxck+b7uvbuu223107bp1
TZBoptOryYIfIEXxDxLAIoomJtiAU0T/aPADxUVrYpwoaif/GIdaRTQxIbo+
5zwml4Q0v7zvPe/znvOc8+7GnpFAf4lhGAdn/xd/i/8+XX967eyPObf1LnP2
13dWuWwj2L7hPnB+dAe4sFvYKN21osjej4XN6X+wbv0hbEciWHcWVWn8qZVF
Nj8UTu/cCU7+puvTo+VFTi+8H+zMfHF3kXP3CBtT+8BGQrn0JOKnTnO9F+vZ
qzdI/Kq9otcUtreV3Am9ceHs2Z9E7wsb9H5N4PyV1bp/HeJ5KqtdesxoNe8v
+p9TNgxw+j2yg/2+VTVgb+hy6LX7lcfjWE9tq+F+6Mu+I+wcnRD9p2qoR/LZ
U6v1KcP3mS21rvrl3xLO+1cgnme6VvPdBjYvrdP7XAHOPSXsPVCF+MabwtnJ
SdH/fR3ji/6L65lvyf8dwk7Fcey3vq1nfZAP58IGibd4/Srova2BfsJ6vq2B
9Zd8ft3A8ySfJRbzC3/kbrV4f8QzWi31236w73GL96lEPv+1WG9wodQv+w8v
roAfmvx639rV0P+oX+vzOu7jvObX+yyCHs/NAeZT/OwPaH2egL7kwwHdHxL9
rwRc98t9LuzMT2C/Xd+o3x/FeuqhRr3fGXD2pUbN15fQU5hsVH9skv77m/sP
iR82Nbnyl3+xyRXfc7yJ+cP35p9cL5H6726W8/Ylwb5jzawf4tu/N9M/4t/r
WugX8e/6Fs3/HPHDBy2sn+Tz1xZXv2auaXXNi/w68hKwZ7jVpS89Q5b+zF0V
ZD1EvxnU84+JfweDrvzZO4Lqh6jkc16b5muB5LOijf4R/QPK4zOif3ubzpdp
9FvmXe7fLPOhvF31nEC8ZF+7W/+z7eqHcnDucLv6YbnoP9XO+SX9Fe7gfBI/
PNPh6q/CRIfeZyn85M0Lp5PnsG7NDdGPWM8/GWJ8sOdQiP0DNr8LcT6Ln+d0
6v6wzOfbO+kvsC/TyX5G/9nf/L8fnLqgi/nD/uzyLvYT1gvBLt4P7Ex10Q/Y
nzmvW/1jYj2/rJvvgehv6VY/bpd+dLr1vGVgo9Rmf4ufG23OX5lnYzbrJX5+
VTk5BvYuCbvmo2WFXf3njIapD+dlXg6zf6T/PgvTbzLf6npYH/gn/WAP94Nz
e3t0Pu1BPxmT3D8G9v1FrpB+e6BXvy+AC3t6WR957z7hug9snellP4Od6/vY
rzjfs6uP9QKbH/Xp/nFwstDHfhf91/bTX9KP9/azftJv7/dTj+T3F91vZPF9
dkGE807eu7UR13zwDkW0Pw5Iv/0cYT7lvZs/wHqI/jUD9IPojw244iWfd7Mx
L8p5KH//rI6yX5EfOxJVfywsg/5UlP4BZ49ENR+XSX5XxjiPJb+9MfYDOLM1
5qpP/u0Y55O81z/GNN4WcNoedL0HuacHmQ+8V8YE1zeCfT8M6v1ukvflkjjf
O+m3zXHOb7yH3oNx+gfvoXUyTj+DnYuGON/AGd8Q5y/OM98Y4vxFvOQJ7q9a
A/3nD7veXyM4TL9hPfXVMPOJeFkjwXkELtySYD3kvW5OcF6L3scSnD+Inz+X
YL3AnqUjzDfYDChPHxG9j4wwX6J3/wj9WWn+ByJz+hE=
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8935136, 0.6004149999999999, 0.2205464]], 
                    LineBox[CompressedData["
1:eJwl0n9Q03Ucx/FBm8AoGWZI5Y2hkXZxB1mcCBfHdxBogIy0LwGDJgdnw4rx
O8RsCwK1GYtfTn45GBYIyhiEihSLBOcBd/NuDAzcIXqY7XtBCLud2K335+3u
drvH9/vHPs/v6+ufmftRtiuLxUqCL/mFj8mUy1A0b896zFGVgVzYAN+Snhxf
W6shDg6QMVSPehvLovyBWJIIrjob0vn5DSWxqhR87TL3XvwRBbFBC9aK80p9
fGTEK1PgpMFS57Otp4gFDvAXHLOyoq2cWLQjj6GaIndNcNeLieXxYNdDQplL
I1pXDH5El40dWxQTL2jAo4a0w+a3CiPBvAmwn5/8aoavjDhyHTxv77+1e7qI
WOaXz1B1ZW+KtZ+UEGsOgD/0zLIfzckjNhWAxS+VtwtdyolZreA0Xew+NUuE
/UYw51BX6nxPFfavgs1rRreE22rs317AUKspkx6DhzuxPwZ88C5Xai3swH4Z
OCReJxh6ghY0geczwlXU++ewfwy8q2U827r/IvYvg53fNrG/yWrB/lcLGcrq
z03ISGvH/ijw0+rMMNqO+/C+BMflbgTVcnC/SDW4ejbfvbWjkVg2Cm5ye31A
GNxGrGHAv/77LP1OOp7H5FPEUJJfpvoCNi7g/hT4n3cteUJpK/YfAzfTfyg0
ih+xvx7sW3V8bFhyAvtHwNu5/Q6/Ofw/w2Pwf8lKhaO9HvtfLmao2HOTN//u
er5/BNgSesY2tYrPU/QZmH96b8qIIxP7a8C23zY10rVKsoduGHxwfTExx36K
eGEJvKVbP5QapsL9vUvgeXgKNwe1oCPDwaMf8N3CfvoO988GR0zcbZ611eH+
1eAXad9Ly1vfwP7r4HrvV5Zn9uF5WQ/BM8LL1gTOz9i/+SuGqkl8rS9FfxX7
Q8F1ZxtW4nL7sT8T3BBojvW8gTYowS4HJpwCuxb7B8HX7d9HUTl4X3Af7K0N
nxIY8X0ReZYy1L0K6ddhj3uxPwQ8U5mqH855vv+n4KwH9OS29/B9WzhN7jum
TTd5eD7eAPh2b/lsVPEV3N8Kbv09WZ4k1+P+7scZKmjnycqBLT24/x5wfpmx
8uM/L2G/GCx6weNIBt2M/VXg6BW6xyKVY38fmAncFP2kGc8rmQNbuqL6+RLs
U3HKGOqMlyd7Ma0O+4PAsiJ/Xpy0FvtTwO+E1j8auhBNnr+gAhyzyB94WtJG
LLoCTtBVcM0uGmL5LLh7bskZ4NWB+7ueYCiP3RHuO/johUBw0tyDuDj6PO6f
DN7vvG9bSr+I+yvAbNVfumvsAty/G2zZy7b1vq3B/mnwSHAD4zTpDXfKvDsf
gmXRRrXX+JDhf6wQKMs=
                    "]], 
                    
                    LineBox[{{3.8238349407447767`*^9, -6854.060925022801}, {
                    3.8238912*^9, -3826.915497017809}, {
                    3.8239527169206085`*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.8240086165645*^9, -6854.060925022801}, {
                    3.824064*^9, -4667.663923963414}, {
                    3.8241504*^9, -6278.034029994283}, {
                    3.8242368*^9, -2424.384044061956}, {
                    3.8243232*^9, -1887.6620208890452`}, {
                    3.8244096*^9, -4476.914080813161}, {
                    3.824496*^9, -6106.826568285002}, {
                    3.8245383265025597`*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.8246144653583937`*^9, -6854.060925022801}, {
                    3.8246688*^9, -5535.613940357946}, {
                    3.8247552*^9, -5309.4812409918295`}, {
                    3.8248416*^9, -2422.0827205000633`}, {
                    3.824928*^9, -163.22685885646968`}, {
                    3.8250144*^9, -5018.072462285085}, {
                    3.8251008*^9, -3808.2942227574813`}, {
                    3.8251872*^9, -1703.872554901153}, {
                    3.8252736*^9, -1573.5484124378634`}, {3.82536*^9, 
                    807.9906477024202}, {3.825431732527494*^9, 
                    4158.276554403329}}], 
                    
                    LineBox[{{3.8257638006229057`*^9, 4158.276554403329}, {
                    3.825792*^9, 3504.3044105815443`}, {3.825824143073297*^9, 
                    4158.276554403329}}], 
                    
                    LineBox[{{3.8259019506366076`*^9, 4158.276554403329}, {
                    3.8259648*^9, 1212.3272216630671`}, {
                    3.8260512*^9, -2675.038404760214}, {
                    3.826132980211621*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.8264635749627557`*^9, -6854.060925022801}, {
                    3.8264832*^9, -5045.347389668511}, {
                    3.8265056994820304`*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.8266443885914345`*^9, -6854.060925022801}, {
                    3.826656*^9, -6056.523264928567}, {
                    3.8266820739748797`*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.826767848415067*^9, -6854.060925022801}, {
                    3.8268288*^9, -2434.5630320562477`}, {
                    3.8269152*^9, -1629.5594115289994`}, {
                    3.8270016*^9, -6031.0527790130645`}, {
                    3.8270289100645213`*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.8273556733383346`*^9, -6854.060925022801}, {
                    3.8274336*^9, -2551.690637651316}, {3.82752*^9, 
                    1134.741513962021}, {
                    3.827603568712875*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.8276179762508574`*^9, -6854.060925022801}, {
                    3.8276928*^9, -5104.6436203258845`}, {
                    3.8277792*^9, -1611.6901729996}, {
                    3.8278656*^9, -1366.0016847532108`}, {3.827952*^9, 
                    2693.6059919364275`}, {3.8279705102279835`*^9, 
                    4158.276554403329}}], 
                    
                    LineBox[{{3.82854434209361*^9, 4158.276554403329}, {
                    3.8285568*^9, 3241.5788798899043`}, {
                    3.8286432*^9, -2778.820959685425}, {
                    3.828695650217914*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.829067791005442*^9, -6854.060925022801}, {
                    3.8290752*^9, -5756.800244272574}, {
                    3.8290840423080034`*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.829247645961424*^9, -6854.060925022801}, {
                    3.829248*^9, -6814.461475459641}, {
                    3.8292488341931257`*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.829370843884913*^9, -6854.060925022801}, {
                    3.8294208*^9, -1286.2204511669722`}, {
                    3.8295072*^9, -140.91440869034057`}, {
                    3.829589716549921*^9, -6854.060925022801}}], 
                    
                    LineBox[{{3.829964454897575*^9, -6854.060925022801}, {
                    3.8300256*^9, -1584.240389789357}, {3.830112*^9, 
                    4109.963966072041}}]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 
                    3.830112*^9}, {-6854.060925022801, 4158.276554403329}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"INT\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 9->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8929546, 0.3896616, 0.1794008]], 
                    LineBox[CompressedData["
1:eJxVlVtsk2Ucxj/OiMY0METkYLkAmZhRRaOo028cZOzQfe3Wrdu68a3d2m7d
ul5INCj6aUJAQVcOBkkGVlDmhRkVnA7looocFKL1Qjl5+IB4AwhFQb3AA33+
z2vSJUvzy/89PP/nfd73mxXs9XaM1DRt783//G/+79jSS2U3fzIzDy3Ub/66
rgtbF799JM/m3U+BtRMhcG47ubi/NM/Oo8Jm+LCeZ+M3YefgkUV5tqYv4/jp
S/KsHxJ2BvZgfOIKec1FjE9NLQenEqvB2cXkZSPK8qzFy6nvA9STl4TN4X9Q
z9yxHKxPeBic05cXzHfGhO1dCcw33lDjT6BuT6qg3gOL8+x4ooL6jon+KHlw
XDn0bxI2+4LLoP/A/4zxrscqVb9gs0M4tW2b6O8TtopuB2f2V9LvUdg/d571
z6+DrWCVnNf18eD0hirqm4f59kdVnL8Y/TjOCusLNoP1W6u5/37x9xXFp5bC
3w+rOX4S2PUT64kW0T/eLfsffx/15ANunsdGsHHGrc4f/lhjapiv2ZXQO79G
7bccehtr6M8VcOJkjcofxqdGGtKPplVB732G8qsaehuEbc9J1F0vcXxxwAM/
/zWUHi/8LPbI/NJVqDvrPOp8a6D/BQ/zUob9rfc8zMdWN/y8x8v5XWDd46U+
HfMTz3nV+UFf6l2v8guc/cbLfOzE+qa7lv1cRv/JZxWXoJ7ZWct8z4SfueOs
l1aAnX8K26seRP7SK+t4H+eIv28VsuOrOqUfrF+rY7+fYT1tu4/6RqLuOuJT
/mF986pP5U/0Tqvn+fWhnllaz/nnUDe+qFfvi+Thcr3KFzh9Z4PqF/7Yixp4
nn9VQG9Pg8oXOHWxgfMXgLOT/ewvDNZ0v8q36O9SvBBsbvEX9J+b2Mj5u8XP
0saCuhFp5PlaYGtjY4Gf6U+F9bNNmK8/2qTeJ/iRaG/ie5NEPfV6E/NxEJwd
bmI+NmA97bzi29BPsq2Z/g8g35n1zXwPfPArN9RMv95E3Wk3qzyibkwIKEZe
7XUBdR8lz/sCyk/J848B3of14MS4FqUXnLq/kF3pFo6fZsDf0y3M42hwcnQr
6zHcj0xJq/Ib9Zyf9cG1uI/WiVb29xA4PWIF/XOC7XkrOH4K2FG/QvkH1i3F
N8Bascn5NthVa/I+y37mapN5XgdODpjKX3kf5rSp7wHYMBRfgn5rVRvXi4je
d1jXXKL36zbqCWB8ojqo8iJ+PhPk/ZkPf7JvB3nfd6CuHQ9yvxs4T9cfQeqb
jfUyT4fIa8TPHSHmfSrY+WWI65WAjd9DPO+Q6J/RTn8MsKO/nfqF9cPtKg+i
P9euvqfoL3VXB++7F5xd0kE9h8Tfgx3M20rx91fWi9zoLzMlzLxckzyXkXel
wc7usLqP4PSFMP07Le9FUYTr/yJ5fjLC++CXPHdG1H2U93lzRL2n6EebGGU/
s8Tfx6Nqf9wnMxxV75vcx2SUei6AM59EVV4x3ljYST9eBluhTubrKDj9Wie/
p6vB9sednD9Z9J9T48vl+2F20f8z+H5lX+2i/jhYG+piv8OS759ZD48V/2+J
MZ8D4NzaGM/Xxnzn3hj3/w5s/BDjeuvA1thu5q8fnHZ1q/cDrO/ppr9XwYlT
3ZwfrYP+UT0cPwas+XuovxWc/L6H78m+WvipxenfJnDu3jj9mIvxTl9c5dsH
vS9y/PAg6vbfcb4PEbBjbi/3HwLr3l7Wt4ITz/cWrJ/a3cvzmVGr/wdltxHk

                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8929546, 0.3896616, 0.1794008]], 
                    LineBox[CompressedData["
1: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
Odlf/+6Irx2s9SH/5GM0r9TFV/B/bQTs4w==
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 121.1359300775053}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"RCL\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 10->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    LineBox[CompressedData["
1:eJxVlVlsG1UUhodCKYQHTBrapkvqAG0TQMWQF7bAtFDSpFnGzmYnTjJ24mzO
4gcqUNiGhwooSwyUh0q0GMrSp2K1FMJSyQpLoUTgJ8JSYEKlPpACAyUgISGI
/3P/SDdSZH065977n/+cubc8Ph5KLDMM4+jif+G38Pf5jnPbFn/MotmV5uJv
YEHYmQ8WF9jeeA84t1BxRYG9A8LuRMmqAvs/FTarqlYX2PpjKV5aYGd9DXjx
b32BzY+F/UdOIj/1m3Bupn5NgTOlO+X86QVw/q6d3A/5xpiwOfcPOH1O2J6c
hp7cqlq1fw3YM2upT/Qma1mP6H1B2KiMIu6urJN42R6c77ujTsVPg81B4cz+
/Rug/7k66gNnPqjT6g3ctovnr4OfCWE3OLUW+id30X/4lXtXj3tnhO3+s2An
Xi/np06As0/Vs36sd9+uZz2ozzdXr/ljXtag+ZF/okE7z3hLxecmwIEfGnT9
lzSyfnD6pkbWi/qt7xqZ74fe5U3UA87e0ER/ke9GhDM1c9gv9XUT9yuDn8ss
6gPnr7c4n+XQ2664uugq6H3UUucfuwZ+/mexHrBXGRQ/psquxjy0BLkf1lsP
B5W/1Ruh/3BQ6V2O83xbQpxP1GMGQ6p/7VifeiCk/ClFfuY1Fa86j/z8lyHV
j+1gu7GZesDp+4X9e+bBuVea6Q/0eDPN3B9x/9/NnHf4k93dwn4j332pRdvf
d6pFzes+0f+nHjcOtCq/bwYHTgobs4ewv/17q9bf9Lo26kM8t6NN6U8ibn1E
nkfc+bWNfoveNe3cD36529t5H4je0XbOA+rJzAs7JVtlHq4Mq++jH3HDDHNe
wIHhMPsl+veF6Q/mzyuOaN+zvzrCeUK+NRBhvuh/NsLvVfS/H+G8gM1bO9T6
veBUX4eqZ0b0P9OhfQ/5KWF/dFL8P6OvT8c6VX9XyDw8qTh6OfzyjndSj8yD
20m/xP+iqNZf9/GoNj++Y1GeD33m91HeZ7i/Uiu6WB++z8yNXfQHHMh2sX/I
t7/t0tanL+qmPuTntnZzPeJeuJv9g//ObDf7hfzsBT2M4z5yr+vhPGG9r61H
u09MZykf/hmVNvsLDjTbWn/th2zt/PQbNv3A+f7NMdYDtqwY65H7eCKm3ffZ
V2OcP+S7X8TUvB6R+60hTj9xX2fui/N+kvfu5Ti/Z3nvZuJcj/s68FecfiM/
d2+vpsc72Es9YP9nvawXbJ3v5fxBj7OhT72Hh8G+F/s4L2Dzkz7tfUh5ffRb
5mFtgvmoP393Qnsf7A8T9Ffei18Smr7c6n6NvW397C/88Y/o8ezPOrslA1o9
vjsHeD7i5tAA68d8p54f4PuPfhvFg1p/A7cP8j7D+Xb/IM8Dp9ODXC/631ta
L/7eMqT55fQOMV/m4+kh3n9g950hfs+YR99PejxjD7O/eK/ye4eVn2fl/Ts+
rL1fgR8VT+9G3L40Sf1Y7z2WZL/l/Tua5H5g63RSzecJsHPxCPfD+5kNjHA/
sPnmCM/fBH+/YdzZDP0XjnI+tkBveJTzAE5/Narl54wx3u9g79ox1Y9y5Ptb
x+h3BfQ+ovKrT4Hdf8f4foB9FeN8z8BmaJz3OfZLPah46iA487rKP+RtMv8H
q9Dc8Q==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    LineBox[CompressedData["
1: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
H1jxJXmGsdL7+hpYHURO6WzO3hbMF/wLeMawGw==
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 16.361031402575}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"SABR\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 11->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    LineBox[CompressedData["
1:eJxVlVlsG1UUhodCWQIIq033NnVbaJMSiqEvbIFpoQ2kWcZ2FidxkrETO3ac
OJagAgUKw0MFlEKG7aESLYay9KlYhULYJKvsEFHzQlgKOFTigRQwS0BCQhD/
5/6RriVr9OncOfc/66yLjgZiCwzDODb3Lz/Lv093nNk298hX7b3YnHv6ZoW9
4fGLymyv3QnOHjgAe+mgsFkx5Smz9yNlr59eXGbr9518f3mZndX19L+kzOb7
81xZ5syvws6JWXB2xa3CM35w4WbhuR/8G2nhbKYO/twzwnY8jvP5pbfxPOwl
U9ipPIr3vSlh79F6nLeeEjanx8DFxQ30v7TMnhuFza1bEY+ZaKDeFdD/uHDR
P7ES+t9uYL5WIZ/X72K+cN6OCdsTVWB3fN6+DPrf2EW9uK90Wrg4Vgn/TrSR
/vF+bn+jpq/4WiP1iP5pYaeuAv7NC5uYf3DhoSbGA73Gq02sJ/z7vmtifmC3
z28W/4czYPfqZi1e65tm5n8t9C5sUfEe8kLvlS3UVwW9nS2sH85nvmxhvOuQ
zwWW6ofP10NvrbA9vv1S6O0Qzk/u3wC991sqH7fDnv/P4n0bkc8av/a+t9XP
+HGfda+f8UKvc8TPfMHu2RRg/aDH9AdUv7wDztwtnJ89IvpfCGjxFE4G1H27
4d9uDqp6bwG7dwWpD5x/Lsj7ka/SZFDlv7QG+v8Osp/Bud2tSv8/kt9nWllP
sOeTVvYL/Jt/tqr8TcJuHGzT6uP7sI3zvBp6f2tj/LjPXdVOhj2/Q/H4Cdit
99rZL7A7v7Sr/FSDc8s76B96its7OP9gz0gH/aE/sjMd7DfoKywJ0R/shhnS
7L6hkNaP9pMh5lfyuaiT+QB764SNqcNga7BTy5/zWCf7RfL9Vif9g83rupg/
zENmoIvzB3v20S76Axcmutgfov/0/Hnph0i31j/5h7vVfQ7spePd3B+iv9it
+bcqwtwn0g8Phhkv7vO8oux1+0T/t2HuP5zPnNej4rlG8n9VD+sF9uUU701J
P3/do+lzz+lVeiLSz1t6mf/10B/qZf9iHp0pxeGTmOfcWX2qHhtgL17ex/vB
nvY+9sdl0O/00d8m5LPGVvvlR8y/L2hz3nDe3mNznnCf+5Kt9JuyHzZGmC+c
t6yIpscZi3DewbnnI6y/6P1Mna8JgzNNUe5DxJ+9M6rsp8CFZ6OcF9TbmIyy
H5E/319R1kv64Y5+PZ+H+jkPsHs/Vly1UPbbH/2cV7CzZoD9Jvvt6QHqkf3w
wYDaD42wZ0oD7DfZbytj7A/Zb7fEGB/YfjfGfgK7P8dUv8xIPyyLa/pK2+K0
i/7hOONHfLmf4tyf4GLloHbec9Oglh8zOcj5QX0zTwwyX2BjUULLt++GhOqv
S0R/PKHtF9dN8D5w/s2EVh/r2qS2P5z+JL8nOJ97JMn9IfP4elKbH88PSe17
kLWHWB/0b2HfkNK/AGwcH+J8oz993w9p/WtfkGL9YC89kKI+zIf3WIr5qIb+
UylVrz1g59xh3g/O+Yb5PcL75svDnA/YM18N83tSA/1nj/D7CDZCI/yeg90v
Rtgv4LyRpl5waXOa+jZDb1ua+wVs3ZdmvWuRz3/T7G+wp3qU8wo2A6Pstyug
955R7m9w9sVR7pda83/6B/CR
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], 
                    LineBox[CompressedData["
1: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
d2fTgTh4Mfp/II8Oj4GPo//NihId/wMhS9Ne
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.794688*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"3-year Stock Forecast\"", TraditionalForm], 
                   PlotRange -> {{3.794688*^9, 3.830112*^9}, {
                    0, 23.61355876922594}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox["\"LIND\"", TraditionalForm], TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
               Dynamic[$CellContext`i34$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.816892030106531*^9, 3.8168921036254725`*^9, 3.816892939513445*^9, 
   3.816894094968052*^9, {3.8168949432003317`*^9, 3.816894965530792*^9}, 
   3.8169585522106404`*^9, 3.816962380713238*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"8b68f3cf-fce2-40a8-b64c-1b7f291ebb32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["stockgif"], "Input",
 CellChangeTimes->{{3.8168925190851035`*^9, 3.8168925214912577`*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"f2680635-3d06-4613-99d2-261dd86d4c77"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i33$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i33$$ = 1}, 
     "\"max\"" :> {$CellContext`i33$$ = 11}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i33$$], 1, ""}, 1, 11, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i33$$], {1, 11, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->1.5473856925964355`,
                 AnimationRunning->False,
                 AnimationTimeIndex->1.5473856925964355`,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], 
                    LineBox[CompressedData["
1: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
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"AGYS\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6323596714272409, 0.6413629541428832, 
                    0.6435265064235547], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9485395071408613`", ",", "0.9620444312143248`",
                     ",", "0.965289759635332`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9485395071408613, 0.9620444312143248, 
                    0.965289759635332], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 2->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], 
                    LineBox[CompressedData["
1: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
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"EXPE\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2624355592429922, 0.37767755315453977`, 
                    0.6052945919907555], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.3936533388644883`", ",", "0.5665163297318097`",
                     ",", "0.9079418879861332`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3936533388644883, 0.5665163297318097, 
                    0.9079418879861332], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 3->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], 
                    LineBox[CompressedData["
1:eJxVl3mMVFUWxh8gMrYaaxxGBFEfUbDZuh90s3T19qoXuumFfr2vQPW+0DSV
uCNqiSG4IDzF0ZAg85AZYJiEqQg9MDiaijOKC2IRjYiiFqCJEdRSBJdoFL5z
PpLqfyq/nPvu/e53lpue1LGipnukYRjjRxjGxd8Lf+GXZ5wJXPzN3bXQvvDr
y50Jjt40uewi273Cwf154NCTwubuMWDvRWFj6kRw7HP9/twX2C/YlSb7v3IO
7K4X9kq2gqP7hc22a/B94qRwfGUm2Lw6Xc9bC448nq56XgbHh9N1/XtgX1zY
ONop+lMsPX9Y9Gdaev6I8ots7LFU/y+IWx8L2yk/gINjZsn3p6uxPtpKPoK4
86GwnbERHL5stsTHDoneNPJh0dskfOFG2M/3sLB9ogXsjcjg9+DY9AzeR/Q2
ZOh994KtsPI2XwX07uL6U4gnUjP1fpvBZq1wcMPzYOf+TM3/ADi8Q9hc809w
5Ijy7oPY33bmqH+BSvi5co6eb4Fjh+eo/vVg46dkdu+eq/uXg6Nb5zLfYPP8
XOoBO+Y8qadDh3B+fItwsKcH7Htjnt5vleg7q+vPvQ4O3Tif9Yr9vJL56vfP
iFuvaXzNafEvofGMs2B3Qpb2w6vgaFGW6ivDfomhLF3/Ljgyzi/+bPpJ9Ab8
6k9M9A762S9Ybz/j5/mS77HZ6sdYyXd+ttZLWPLdn635Gyl6N2bTD8Tdl7LV
rzPSPzk5sl/19ZLvnhzdLyj5dnOYH8n3gRz9fh04/lmO+tcr/dOZSz3oX++J
3KT5ENuXq/5OEP0nlVP2SX9dladxv/T73jzV9wH2Mz/N4/2kv67IZ72VQm9G
PvNdAj9fyGc+iuHn8XzVu6MQei+3qacAei1b9S4JQG+LzXmEePCYrfl4C3F3
VEDn0zs28j8zwPuDE40Bvd+zOdC/OqD5H58NP40Cfp8BP6cV8PtM6K9n/Jo0
6H+wQP2vuAX6/1Gg9ZUxBX6mFqreE5PhZ00hv78V+lcVsn5uhv7thTr/7jSh
P6bxbaFJ8LeqSPU34rzwvUXUNx36txVxflvQ/3aR+rMsHfp/1HhuSir8vatY
89MGfTGvmPUNNt4qpj84zzpXzP6GvuDNC7genHhugfbfaNzPfP0Sww/nuwW8
z23QP7FE62n+NPj5Knk/1oe+KVE/94je8aU6L1LBscJSxsXvoVKtx1cQd8+U
cn4gHr1uofplgBO2sBd6Cfc1ly1UfQnR+5eF1IN4/E9lzCfivrwy7cc00d9X
pvr64H/oqTL2O9j7L9fvRr6s7HLuNwN+dpczH9jf3aDxUK7o/0859eN+iVNc
fxwc7qhg/cDfyLoK6sP38X9XaD9tQX58Jyo0P2twP/vKSq2vo1IPj1bSz6nw
d29l0nnWJ5VazxsQD/5hEesb93FnL2K94L7OR4s43+FHeHQV+3EW9KZX6Xv9
R6nfZnI16jf0QRXnB9Z7Ix2+t+DYDIf5BhuNDvdHP1sPOXyv58LP3xzexw8/
p1ZrPibNRz3UVWv+tqP/nQeq1X8b+4d3knU+3Faj+foV59nVNexHxEP31XA+
IO79vUb9qgLH3qlhP8yGn4tqVf84nOfeU0v/EI8+X6v9uQn+JA7Vcp7AP/OH
WuYH8ypyZx1Z/P1rHf0A+96s47wA29/XsR+wv/FcPf1B3DpYr/l4DPsHv62n
/1jv3tDA+kc8WnyJ8b3z/wb6gfXhrxu0f3aK3usb6S/uGy9opD8yz5Y3Jp3v
nW5Ufw7OhJ9/bqL/YMNuYj2BrQHyEem/p5tY7+DEtc1k9LeZ28z5hbjT28x+
BoefbOZ8BkdebFY9Jah/29+i/XcT9gt1XWLEvfUt3B8c29+ifq7EfsYp8s+I
u+2tqq9A/H28ledJPQy3ch4gbsZbqRfspLTRX6yPP9JG/xD37WlLyp/9cRvn
k/TjmMWcx2Bv1mLeB2xFFnO+It/BDxfreVGwe9kS3hfro2lL2G+IJ5oYj0i/
HV2i50+UeTFiKetT6nn6Uvaf1HODcslWrLfDS1nfqCdjalDvuxZs1QbVn6+x
Pnh/Mrs7gur3arA5pV3r702w47Rrff4o821lO/0VvX9rZ77A8cOM2/JeVHYw
v6hP7+6OpH6Ibe1gfYGNQx3cT+r5fAfvi/2id3Qy3+Lnls6k/jff6Ezy0znb
yf3F7xu79H0oBvs2dyX5a7/WpXr9iIcSXapnJPz0JnSzv8GxIuUTB2S+/a+b
8wrsftXNeS36x/Ww/kV/oEfn3XjRP9jD/cGRL8m3Sz2M7eX+oj+/N1l/f6/2
x7Do36jxTc1SH9f28f2SeZfTx3qReu7p43uHfLhuH+eR1POBvqR8OFn9Wn/T
pT46+3X/daL/iX72k+jf15/03vhO9ifVlxccYD3Ogb+PDbD/8N4YwwN83+X9
+3RA73dM/L9iGfVjfWItuQr7mS9ciuO9dI4v4zzB+vDlg7r/aKyPWIPJ79+/
BvV9PiXv37FB3hf7eaOWM3/zoLdpOesV7L6/XO/zibzXxhD7HZyYNsT5hPVm
/RD7Owt6HxzS8yrwvsd/HWI/gn2pK/T7Kfh/wK5ZwX7C/wOhVSs4n8DedsZX
++3fAeVxplc=
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"NCLH\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.05528705100939879, 0.5599079115090468, 
                    0.4066506762168943], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.08293057651409819`", ",", 
                    "0.8398618672635703`", ",", "0.6099760143253414`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.08293057651409819, 0.8398618672635703, 
                    0.6099760143253414], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 4->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], 
                    LineBox[CompressedData["
1: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
g/g9FVjbJut7Qfx+2tsm/dL+e+p/3kiaCw==
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"TZOO\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10934012618681774`, 0.2932704279505862, 
                    0.6525308999426905], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.1640101892802266`", ",", 
                    "0.43990564192587933`", ",", "0.9787963499140357`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1640101892802266, 0.43990564192587933`, 
                    0.9787963499140357], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 5->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], 
                    LineBox[CompressedData["
1:eJxVlXlsVFUUxh+bCGIcEUVQ8KEGWpb20QVKaenrRmlp6etCd8rrNl0pkyAC
VfCpQRQEBkENCeAACogGJyxSQMwEBERRx0QtIMsAkhhBHURwSYzid85pcvvP
5Ndz733f+e45546onVvY0FPTtCE9NO3/3zt/zsdjr6fe+fWtX5Rp3vl1JY8D
m5eGTv2fzUZiZ1A72LOGWK+KBvsOEdvul8DBqyrb9VF0Xv9SsHcVsc+TDA50
Euu7+oLDl4lDBQlg/d5ocOBUG9i/Ipr1loND+4jtzilgV4jYOfIt8jH7GxRf
/QLYE2ewni6wtof4zn+w3zhvKHrtvuMpHrmB9FYSO8nLwdbZ8cr3nd4xpHf4
MZzvjyIObQ2DQ2UxrH8I6X0xhvXVkp89Yml9x17ycwxx4NYOsFbCPPwq6XWI
zdh5WdC7M5bPPwAOR8SxviVgvSiO4+vB1uI4zicH7GyP4/OKwP6v46QesuGn
FU/7szaDPR3xfF8LwcEv4/m8nWDtL5W9CybIfYADmydwvAWs357A9bAdbOkT
KX7txjT4t2ki+2mAXSeJta50sHlzIuurAXuGJUi+YF9WgtQT2DiewPW9C2yH
E5R8vUMnST2S3oxJvP99cLh9Evt1E+wfnMjry8Ch1ES5f9Lblij3Q3rfSGQ/
jsDv4KDJzFvovlMmS30ibjSrbK8Vtqm/DjN3HUW96UlJEgdb7iT29wTY8Sax
v/dTfx3k9V1XqF5/SJJ6pf6pS5Z4BvxcmazMj+D+ZKWftcsSX4+4MWAK+5cL
Du+dwv06n/ReJNaXvkd6+6VIvqQ3NoX9PY3vu3an8H1fSoOf51J4/7VU6L3L
5PzWmNBrmKznTAr0Vph83wcRt8+YrH8Z2NsrlfvxG6wPjEvl9YmIh0tTub8u
TIb+F5jdI8F+LY3n3eF4+Dk6jfu3TwL0z0zj/AKIm8+lSb2Mg/53mTvWjYef
Eens/xOIG4XpnG9rJPQ/my5+Pw7923i9pj0J/cFujoC/+RkKO4uYI6vGQP/W
DLn/aOj/IoP9/Bp6XH9281j4+3SmfB96gr5Mmaejof/z7vgI6L+VKff3GPQ/
NpX9/VuHvxunSn7Qr386VfaPhP7futePgv5Hs2S+Ix/zWJbkh7jn1yzxH/p8
Q6ZJ/2F9MH0a9/MerNfaOd45HOu916fx/XiwPvBQtswPrA+b2Vw/WWC9NVvy
J79fzxa/EA89kMP1fwvnu6bkSP3CT7Mph7/nN6D/tRzun1O4D99HOXxf53Bf
xuTpogf77QbhKPjvXT2d62crvhc4MJ3f8/uwP3xluviN/U5trvhB9fBqrsxX
nBf6MJf9XIr8XJdy5X0k/+/J4/NXUz28kif+oX61vXkyX/E940KezAfSf/cM
/n4s1ntjZij+WN/PEL/hj9Mnn/stGfXpj84Xf6h+y/O5XjrAntP54if2+3pa
0s/g4FhL5g/1X6kl+2Og93lL3jP0b+Bfi9/rH9Hf4cgC9qP/RNRDcQHXw5tx
0L+kQPzA+c6OAqnnWPg5qlDiYLOgUO4H+z3PFPJ5gxH3vVMo9QV9wa8KZX7h
fHtGkcwvsHdhkfQH1ge2dDPyD59SWf+jSO4T/vnnF8t7gnjorWLRB3Z9Vizz
BGz+Xiz9hv3axply/2DjxExlvtk3hLdGQe8jJexvBOKBzG7G+dYnJaIP651f
Sjj/QWD/w6Vyf8g/lFaq5OOaUyrzF+t910olf3DwwTKpf7Bmlkn9gY2WMplP
pH+dyuGB5Xyeg37Sk8tZ/w6q58ZyqX+sd9aUK/3sP1Qu/mG/mVghfqEfPfUV
kh/ivlUVUn/YH+yskHwR165USH0h7q2plHmMfAIrKsV/+BPeV6nkr4cqZT/Y
6l+l+Bd6uUruH/m49lQp74V5vkrpb0/fWXJfYN/4WYofhn+W5Iv7ts/OkvqD
Pm/vauX+A1HVMr+pnsuqed7GU791VYtfiPt7zJZ+pnoeM5vX76N6LpmtvMem
M5u/vwz9o0Xa7HcOzYciW+6X+m+xLf5S/223Zb6D9ZE1XC9nwJZVo8wvp6OG
9cwnvW/XyLwjvV/WcL6bkL8nr1b00vu8oFbxP7i5lvNNA2unapX6MW7Xit/k
51N1yvnhTXVKXD9ZJ/dN9XCzTt4X6sdh9fz9ArBrQ73Mc9yvebxeqS9PuF7m
Ib13QxuUeRHMaJD1YPtog8wfmhc/N8j3kV9gsFvqk967VLfSH3qbW+YJ9dtP
buU9Cg1qlO9TPac0yvtN9dzcqOpfK+s7aV4MbFL0GElN8n5Cj+1uknmB99Pr
bZLz6b0+2CT5Yb01qZnXDwE7dc1K3L+yWeYHvdf7m+V+8H3X5Wbpb5oXdou8
d3hPgstb2P+DqC9tX4v0D9i42CL1SfOuXyvXU0/qt2WtfN9rqL53t7KfA9Af
1rlWeQ+pH+9q4/sxEPcbbVxv1dRvH7RxPlGIe860yXuG99DXaw6td28Da2Vz
pP7xPnu/m6O8rwGtndePxPrw6Ha5f6zXZ7ZLv06A3ufaeV7Nw3se+kc4FuyK
mCv5gs3CudLf2O95VuIFYN+2bo43/wOejbls
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"CCL\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 0.6256096143489769], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.45897548034004004`, 0.19528279018679057`, 
                    0.4170730762326513], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.68846322051006`", ",", "0.2929241852801858`", 
                    ",", "0.6256096143489769`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.68846322051006, 0.2929241852801858, 
                    0.6256096143489769]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.68846322051006, 0.2929241852801858, 0.6256096143489769],
                     Editable -> False, Selectable -> False]}], "]"}], "}"}], 
                    ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 6->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], 
                    LineBox[CompressedData["
1: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
8nu+doT34f0PXzOi/b0UOPrwiPZ3Y4b1L1CHqZ0=
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"CUK\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.1270793822706568, 0.6254587362925553, 
                    0.6554975153056559], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.19061907340598516`", ",", 
                    "0.9381881044388329`", ",", "0.9832462729584839`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19061907340598516`, 0.9381881044388329, 
                    0.9832462729584839], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 7->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], 
                    LineBox[CompressedData["
1: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
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"EVI\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5976282513926858, 0.3861982611807764, 
                    0.2806569783494295], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8964423770890286`", ",", "0.5792973917711646`",
                     ",", "0.42098546752414423`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8964423770890286, 0.5792973917711646, 
                    0.42098546752414423`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 8->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], 
                    LineBox[CompressedData["
1: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

                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"INT\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.15957404511420079`, 0.17612411245162257`, 
                    0.4052823185657042], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.23936106767130116`", ",", 
                    "0.26418616867743383`", ",", "0.6079234778485563`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23936106767130116`, 0.26418616867743383`, 
                    0.6079234778485563], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 9->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], 
                    LineBox[CompressedData["
1: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
HN44NGH+6P4hns+CWvP/b5/QJw==
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"RCL\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5415983663507061, 0.08139799234773785, 
                    0.3034802460602175], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8123975495260591`", ",", 
                    "0.12209698852160678`", ",", "0.45522036909032626`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8123975495260591, 0.12209698852160678`, 
                    0.45522036909032626`], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 10->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], 
                    LineBox[CompressedData["
1:eJxVlmlwFFUUhRsEkSg6YmQTcFDBsA+EEMgCnY1ASEgnIXuAzp6QEKZKUUSB
VgsXFhnXKqsER1HEpXSKRSKI1YUCgojjHxEEaXD5IS6tCC5VluK571D1+AF8
dW+/d9659903IxqWljb3NAxjcA/D+P/fy3+cD8b9mIX/uVPNy38HMseD3aOd
YLOVXAgOPylsJt8Fju4Vjj7/PDj+nbDdshVsN00AO5lrwZEnhINrOsBut4rv
3wX2z+nxYL+Jwm8/Co6tEzaON4K9XcLm2RWi3xN2h+eJ/oSQ4t6if4qwt8VP
+Z+NHYpLBiEeOi1sd68S/X0mKT1vit5aYSexC2ydnKTWC4OdXpPVestF74TJ
ut4qxUZQ9D48WfMn2iNZWz8+NlntPxZsVDA+QfQ6ycrvFtH7BvkR8TNpiqrX
DvGzTNhb8YzoXynsXtwm+l+botUj9rnKL/lT/LRStH4Jr0hR54+J3mMpWv2N
v1JUf5yQ+t87VauX+9JUzb/gpana+lYwVdXvgPi3OVXp6Rb/Dqdq/WdeSFV+
bxF9w6ZJPLxP/M2fpu0fOqiz7Qsbo+tE75Dp2vpu7nTVH8NT4W+XioeHgWMD
07R8LytNuz+BzjS13x7R+xzjb4l/iekqnib+zUxXfpiitz2d50H/2k+nq++P
giP70tlP4GBGhha3WoTNhEqpdyRD8z+2h/nrRf+3GawHvg83ZtJ/cHSDcLDu
BtG/O1P1T4roP5ep679uhtKXIP25c4ba7zqp/5kZmv9W35na906ycDT/LPYP
bJ/Jfp4CP09dyU+G3qtN1Y+jQtAbMlXcGA+9NSb9Hgs/T5hcfwz8vCqL8wPs
js9S9ykZ7FdmsX9GQv9DWaz3HfDTyFb6Em+Dn2OyuR7yA+XZPC/i5upsrheE
/tezeT/BRlKOnGfj/sHwszSH93849D+Qw/okQv/WHFWfjddDfzyH6yfA3+Jc
nqcf/L0vl9/3h/4tudxvIPR/msv6Yf/An7nUPwj+3pOn5tV5cDyax/XwvfFJ
nuq/4zdB/0Vh53wJ9rNvnaXOm3Qj/N00i/4NgL8fz6JerGf9diUOPc7QfNZ3
KPw8kK/ej0PID/+Sz/qI3sGzVb9eFL05s7me6O2arfz6Gxz5cTb9gB53wBy1
fj7YN+dQn+jtmMPziN5n59AvxL2bClQ/rMH+gRkFKn4KbLYVcJ4Mg/6nCqgP
HH2/QDtvKH0u978FfjbPpf9DoH/jXPoPv9z39Lj/zVzVT9+DnYZCzhtwbH2h
1n/eu4U8D84XOFuo+WNeW6T5EX+8SNvP2FnEfgSHvi7S9V8zj+cHRybP43lx
fuureczH/XB6F1MPODaxmP4i36su5v3GeuEvi7ke7k+0p0V94Pg4i/05Anor
Lfb/bdD7oMX3Fffd/dfiecD+6BK+F7ejH+aXcD18b60qUf5m3gr920o4H7Bf
4M5S9ifOY5aUcn7j+/D9pcqfwciPvqriyReQH/+sVNUjG2zPK6MecGR5Ge8r
2H25jP5Aj3+0jOsjHvyjjP0Of2LL5rPeyPdenK+tHzgyn/NZ9P+ux41N5crv
aeDQoXK+3zLPfi3X6hu5pYL6EHfzKpT+DsStj8jnEXd+rqDfondQJdeDX152
JeeB6F1SyX7AeaLnhS//3pJ+uLmK8xZxw6xiv4BDi6tYL9H/TBX9Qf/5/au1
+xzMrGY/Id9qrWa+6H+ymvdV9O+tZr+AzbQavvfgcFMN33vR/0SNdh/i3TV8
D8T/b/TvI/W1qr59pB/W1fJ9h1/+rlrqkX7waumX+J9Qp9XXe6xO65/Ajjru
D33m6TrOM8yvcJ8FPB/uZ3TSAvoDDsUWsH7It08u0L6P9FpIfch3Jyzk94j7
VQtZP/jvHF/IeiE/1mMR45hH3thF7Cd8H6hYpM0T07mSD/+M0TbrCw6V2Vp9
7ZW2tn/kNZt+YP/gqHqeB2xZ9TyPzOMV9dq8j71Sz/5DvnesXvXr2zLfihro
J+Z19N4Gzid5715q4H2W9+5oA7/HvA5daqDfyHfvbtT0+JsbqQccPNzI84Kt
C43sP+hxhjWp93AbOPBCE/sFbB5s0t6HsN9Ev6UfhjQzH+eP5zZr74P9YTP9
lffip2ZNnzuwRWM/q4X1hT/BTj0e+0FnL7FVO09gZiv3R9xsb+X50d/hp1v5
/qPeRv82rb6hjDbOM+xvt7RxP3Ak0sbvRf+eK9+Lv9PbNb+cxnbmS39saOf8
A3u723mf0Y+Bc3o8ai9mffFexdcuVn5+L+/frsXa+xU6o3j/MsTtvh3Uj+/9
RztYb3n/tndwPbB1qkP15z6wc3Un15Pfz6FOrgc23+nk/vj9HD7BuDMK+q9a
wv64E3qrlrAfwJEvlmj5rtHF+Q72x3SpeoxAfrC8i34nQe9qlZ95BOz908X3
AxxIWsr3DGyWLuU8x3rhBxR3bwZHt6r8Lf5I8z/MlYjE
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"SABR\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.41425371589752835`, 0.5817876604689936, 
                    0.380680425983596], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.6213805738462925`", ",", "0.8726814907034903`",
                     ",", "0.571020638975394`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6213805738462925, 0.8726814907034903, 
                    0.571020638975394], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 11->
               TemplateBox[{
                 GraphicsBox[{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], 
                    LineBox[CompressedData["
1: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
gq2aYdYb/r/i3jTM+Q2OPzPM+TLL+h/F7pn5
                    "]]}}}, {{}, {}}}, {
                  DisplayFunction -> Identity, DisplayFunction -> Identity, 
                   DisplayFunction -> Identity, AspectRatio -> 
                   NCache[GoldenRatio^(-1), 0.6180339887498948], 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {3.7815552*^9, 0}, DisplayFunction :> 
                   Identity, Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, 
                   FrameTicks -> {{Automatic, Automatic}, {
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}], 
                    Charting`DateTicksFunction[
                    Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> 
                    None]}}, GridLines -> {None, None}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], 
                   Method -> {
                    "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> 
                    True, "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, PlotLabel -> 
                   FormBox["\"Covid Era Stock Values\"", TraditionalForm], 
                   PlotRange -> {{3.7815552*^9, 3.8166336*^9}, {0, 140}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {0, 0}}, Ticks -> {{}, Automatic}}], 
                 FormBox[
                  FormBox[
                   
                   TemplateBox[{"\"LIND\""}, "LineLegend", 
                    DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.342030216440347, 0.040885647120172106`, 
                    0.43113861623544664`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5130453246605204`", ",", 
                    "0.06132847068025815`", ",", "0.6467079243531699`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5130453246605204, 0.06132847068025815, 
                    0.6467079243531699], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                    RowBox[{"{", #, "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", "True", "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                  TraditionalForm]},
                "Legended",
                DisplayFunction->(GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> Automatic, 
                  BaselinePosition -> {1, 1}]& ),
                Editable->True,
                InterpretationFunction->(RowBox[{"Legended", "[", 
                   RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, 
               Dynamic[$CellContext`i33$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8168925238360314`*^9, 3.8168940959646964`*^9, 
  3.8169585532048893`*^9, 3.8169623816579328`*^9},
 CellLabel->
  "Out[398]=",ExpressionUUID->"304bd9b0-0980-427b-8d01-f6da5c53907a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Comparing", " ", "the", " ", "two", " ", "GIFs", " ", "allow", " ", "us", 
   " ", "to", " ", "see", " ", "if", " ", "the", " ", "companies", " ", "can",
    " ", "recover", " ", "from", " ", "the", " ", "crash", " ", "after", " ", 
   "3", " ", "years"}], "*)"}]], "Input",
 CellChangeTimes->{{3.816893751761408*^9, 3.8168938197228975`*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"ed8e76a7-9cfa-4b12-b5c6-88b3ba2eea27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Here", " ", "I", " ", "begin", " ", "my", " ", "attempt", " ", "to", " ",
      "model", " ", "the", " ", "spread", " ", "of", " ", "Covid"}], "-", 
    RowBox[{"19", " ", "within", " ", "a", " ", "population"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "main", " ", "goal", " ", "here", " ", "is", " ", "to", " ", 
    "apply", " ", "the", " ", "model", " ", "to", " ", "an", " ", "imaginary",
     " ", "cruise", " ", "line", " ", "passenger", " ", "population", " ", 
    "and", " ", "observe", " ", "how", " ", "long", " ", "it", " ", "takes", 
    " ", "for", " ", "the", " ", "whole", " ", "population", " ", "to", " ", 
    "become", " ", 
    RowBox[{"infected", "/", "deceased"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "pretty", " ", "dark"}], ",", " ", 
    RowBox[{"so", " ", "emphasis", " ", "on", " ", "imaginary"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8161017969570785`*^9, 3.8161017972301655`*^9}, {
  3.8161019363616505`*^9, 3.816101957456232*^9}, {3.8161020074099283`*^9, 
  3.816102026006047*^9}, {3.8161047756930237`*^9, 3.816104934274227*^9}, {
  3.8161049721048183`*^9, 3.816104974155527*^9}, {3.816107121494252*^9, 
  3.816107123277007*^9}, {3.816895015967268*^9, 3.8168953363801823`*^9}, {
  3.816895369732604*^9, 3.816895434806264*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"9715e6b6-6f0c-40f3-a734-31a1afd79234"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"covidtracking", ".", "com"}], "/", "data"}], "/", 
     "download"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
      "/", "ref"}], "/", 
     RowBox[{"Drop", ".", "html"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "SetDirectory", "[", 
     "\"\<C:\\\\Users\\\\Austin Zhong\\\\Documents\\\\Wolfram \
Mathematica\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nat", "=", 
     RowBox[{"Reverse", "[", 
      RowBox[{"Import", "[", 
       RowBox[{"\"\<national-history.csv\>\"", ",", "\"\<Dataset\>\"", ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"natdat", "=", 
     RowBox[{"nat", "[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<date\>\"", ",", "\"\<death\>\"", ",", "\"\<positive\>\""}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"natdat1", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"natdat", ",", "34"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"natdat2", "=", 
    RowBox[{"Drop", "[", 
     RowBox[{"natdat1", ",", 
      RowBox[{"{", 
       RowBox[{"40", ",", 
        RowBox[{"Length", "[", "natdat1", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"For", " ", "my", " ", "use"}], ",", " ", 
     RowBox[{"dates", " ", 
      RowBox[{"weren", "'"}], "t", " ", "needed", " ", "so", " ", "I", " ", 
      "replaced", " ", "that", " ", "column", " ", "with", " ", "a", " ", 
      "day", " ", "column"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"days", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "natdat2", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"day", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Association", "[", 
        RowBox[{"\"\<day\>\"", "\[Rule]", 
         RowBox[{"days", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "days", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"daycol", "=", 
    RowBox[{"Dataset", "[", "day", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"daydat", "=", 
    RowBox[{"Join", "[", 
     RowBox[{"natdat2", ",", "daycol", ",", "2"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"findat", "=", 
    RowBox[{"daydat", "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<day\>\"", ",", "\"\<death\>\"", ",", "\"\<positive\>\""}],
        "}"}]}], "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellLabel->
  "In[401]:=",ExpressionUUID->"4954d531-942c-48d7-9d72-6b9f8799af3e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["date" -> "2020-02-25", "death" -> 0, "positive" -> 0], 
       Association["date" -> "2020-02-26", "death" -> 2, "positive" -> 0], 
       Association["date" -> "2020-02-27", "death" -> 2, "positive" -> 0], 
       Association["date" -> "2020-02-28", "death" -> 4, "positive" -> 0], 
       Association["date" -> "2020-02-29", "death" -> 5, "positive" -> 18], 
       Association["date" -> "2020-03-01", "death" -> 8, "positive" -> 50], 
       Association["date" -> "2020-03-02", "death" -> 11, "positive" -> 94], 
       Association["date" -> "2020-03-03", "death" -> 14, "positive" -> 145], 
       Association["date" -> "2020-03-04", "death" -> 16, "positive" -> 279], 
       Association["date" -> "2020-03-05", "death" -> 20, "positive" -> 367], 
       Association["date" -> "2020-03-06", "death" -> 26, "positive" -> 497], 
       Association["date" -> "2020-03-07", "death" -> 27, "positive" -> 631], 
       Association["date" -> "2020-03-08", "death" -> 31, "positive" -> 827], 
       Association["date" -> "2020-03-09", "death" -> 35, "positive" -> 1112], 
       Association["date" -> "2020-03-10", "death" -> 37, "positive" -> 1551], 
       Association["date" -> "2020-03-11", "death" -> 43, "positive" -> 2053], 
       Association["date" -> "2020-03-12", "death" -> 51, "positive" -> 2796], 
       Association["date" -> "2020-03-13", "death" -> 56, "positive" -> 3745], 
       Association["date" -> "2020-03-14", "death" -> 64, "positive" -> 4727], 
       Association["date" -> "2020-03-15", "death" -> 79, "positive" -> 5915], 
       Association[
       "date" -> "2020-03-16", "death" -> 100, "positive" -> 7772], 
       Association[
       "date" -> "2020-03-17", "death" -> 124, "positive" -> 10021], 
       Association[
       "date" -> "2020-03-18", "death" -> 155, "positive" -> 13385], 
       Association[
       "date" -> "2020-03-19", "death" -> 203, "positive" -> 18085], 
       Association[
       "date" -> "2020-03-20", "death" -> 273, "positive" -> 24197], 
       Association[
       "date" -> "2020-03-21", "death" -> 335, "positive" -> 31013], 
       Association[
       "date" -> "2020-03-22", "death" -> 481, "positive" -> 40167], 
       Association[
       "date" -> "2020-03-23", "death" -> 582, "positive" -> 51602], 
       Association[
       "date" -> "2020-03-24", "death" -> 820, "positive" -> 62351], 
       Association[
       "date" -> "2020-03-25", "death" -> 1058, "positive" -> 75242], 
       Association[
       "date" -> "2020-03-26", "death" -> 1374, "positive" -> 92976], 
       Association[
       "date" -> "2020-03-27", "death" -> 1782, "positive" -> 112220], 
       Association[
       "date" -> "2020-03-28", "death" -> 2333, "positive" -> 131826], 
       Association[
       "date" -> "2020-03-29", "death" -> 2837, "positive" -> 151270], 
       Association[
       "date" -> "2020-03-30", "death" -> 3425, "positive" -> 172740], 
       Association[
       "date" -> "2020-03-31", "death" -> 4332, "positive" -> 197924], 
       Association[
       "date" -> "2020-04-01", "death" -> 5336, "positive" -> 224040], 
       Association[
       "date" -> "2020-04-02", "death" -> 6514, "positive" -> 252085], 
       Association[
       "date" -> "2020-04-03", "death" -> 7799, "positive" -> 283923]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "date"} -> 1, {All, "death"} -> 1, {All, "positive"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "date" -> TypeSystem`PackageScope`AtomShape[96.00000000000001], 
            "death" -> TypeSystem`PackageScope`AtomShape[34], "positive" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"date", "death", "positive"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 39], "Meta" -> 
     Association["ID" -> 225022145982414], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "date"} -> 1, {All, "death"} -> 1, {All, "positive"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "date" -> TypeSystem`PackageScope`AtomShape[96.00000000000001], 
            "death" -> TypeSystem`PackageScope`AtomShape[34], "positive" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"date", "death", "positive"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 39], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     39, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "date"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["death", 
                  Style[
                  "death", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "death"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "death"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["positive", 
                  Style[
                  "positive", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "positive"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "positive"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2020-02-25", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-26", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-27", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-28", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-29", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-03", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["145"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-04", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-05", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["367"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-06", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-07", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["631"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-08", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["827"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-09", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-10", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1551"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-12", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2796"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3745"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4727"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-15", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5915"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{273., {335.5, 342.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{273., {335.5, 342.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8161020401906366`*^9, 3.8161048203911924`*^9, 
  3.8161049196442833`*^9, 3.81610497804467*^9, 3.816107006780218*^9, 
  3.8161071273361945`*^9, 3.8161071720560026`*^9, 3.816109437883172*^9, 
  3.81610954122478*^9, 3.81648494338632*^9, 3.8165276662922525`*^9, 
  3.8167985835964646`*^9, 3.8168012670798874`*^9, 3.8168013246867313`*^9, 
  3.8168879991530237`*^9, 3.8168887748741918`*^9, 3.816894096821422*^9, 
  3.8169585543208523`*^9, 3.8169623824515057`*^9},
 CellLabel->
  "Out[405]=",ExpressionUUID->"63d80b93-6b21-43fb-964f-91fd519fd674"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["day" -> 1], 
       Association["day" -> 2], 
       Association["day" -> 3], 
       Association["day" -> 4], 
       Association["day" -> 5], 
       Association["day" -> 6], 
       Association["day" -> 7], 
       Association["day" -> 8], 
       Association["day" -> 9], 
       Association["day" -> 10], 
       Association["day" -> 11], 
       Association["day" -> 12], 
       Association["day" -> 13], 
       Association["day" -> 14], 
       Association["day" -> 15], 
       Association["day" -> 16], 
       Association["day" -> 17], 
       Association["day" -> 18], 
       Association["day" -> 19], 
       Association["day" -> 20], 
       Association["day" -> 21], 
       Association["day" -> 22], 
       Association["day" -> 23], 
       Association["day" -> 24], 
       Association["day" -> 25], 
       Association["day" -> 26], 
       Association["day" -> 27], 
       Association["day" -> 28], 
       Association["day" -> 29], 
       Association["day" -> 30], 
       Association["day" -> 31], 
       Association["day" -> 32], 
       Association["day" -> 33], 
       Association["day" -> 34], 
       Association["day" -> 35], 
       Association["day" -> 36], 
       Association["day" -> 37], 
       Association["day" -> 38], 
       Association["day" -> 39]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "day"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association["day" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 1, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"day"}, {
         TypeSystem`Atom[Integer]}], 39], "Meta" -> 
     Association["ID" -> 225026440949710], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "day"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association["day" -> TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 1, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"day"}, {
         TypeSystem`Atom[Integer]}], 39], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     39, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["day", 
                  Style[
                  "day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "day"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "day"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{250., {335.5, 342.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{250., {335.5, 342.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8161020401906366`*^9, 3.8161048203911924`*^9, 
  3.8161049196442833`*^9, 3.81610497804467*^9, 3.816107006780218*^9, 
  3.8161071273361945`*^9, 3.8161071720560026`*^9, 3.816109437883172*^9, 
  3.81610954122478*^9, 3.81648494338632*^9, 3.8165276662922525`*^9, 
  3.8167985835964646`*^9, 3.8168012670798874`*^9, 3.8168013246867313`*^9, 
  3.8168879991530237`*^9, 3.8168887748741918`*^9, 3.816894096821422*^9, 
  3.8169585543208523`*^9, 3.816962382786332*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"40b3fc22-7449-4900-8c83-b8e6bacf3b66"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "date" -> "2020-02-25", "death" -> 0, "positive" -> 0, "day" -> 1], 
       Association[
       "date" -> "2020-02-26", "death" -> 2, "positive" -> 0, "day" -> 2], 
       Association[
       "date" -> "2020-02-27", "death" -> 2, "positive" -> 0, "day" -> 3], 
       Association[
       "date" -> "2020-02-28", "death" -> 4, "positive" -> 0, "day" -> 4], 
       Association[
       "date" -> "2020-02-29", "death" -> 5, "positive" -> 18, "day" -> 5], 
       Association[
       "date" -> "2020-03-01", "death" -> 8, "positive" -> 50, "day" -> 6], 
       Association[
       "date" -> "2020-03-02", "death" -> 11, "positive" -> 94, "day" -> 7], 
       Association[
       "date" -> "2020-03-03", "death" -> 14, "positive" -> 145, "day" -> 8], 
       Association[
       "date" -> "2020-03-04", "death" -> 16, "positive" -> 279, "day" -> 9], 
       Association[
       "date" -> "2020-03-05", "death" -> 20, "positive" -> 367, "day" -> 10], 
       Association[
       "date" -> "2020-03-06", "death" -> 26, "positive" -> 497, "day" -> 11], 
       Association[
       "date" -> "2020-03-07", "death" -> 27, "positive" -> 631, "day" -> 12], 
       Association[
       "date" -> "2020-03-08", "death" -> 31, "positive" -> 827, "day" -> 13], 
       Association[
       "date" -> "2020-03-09", "death" -> 35, "positive" -> 1112, "day" -> 
        14], 
       Association[
       "date" -> "2020-03-10", "death" -> 37, "positive" -> 1551, "day" -> 
        15], 
       Association[
       "date" -> "2020-03-11", "death" -> 43, "positive" -> 2053, "day" -> 
        16], 
       Association[
       "date" -> "2020-03-12", "death" -> 51, "positive" -> 2796, "day" -> 
        17], 
       Association[
       "date" -> "2020-03-13", "death" -> 56, "positive" -> 3745, "day" -> 
        18], 
       Association[
       "date" -> "2020-03-14", "death" -> 64, "positive" -> 4727, "day" -> 
        19], 
       Association[
       "date" -> "2020-03-15", "death" -> 79, "positive" -> 5915, "day" -> 
        20], 
       Association[
       "date" -> "2020-03-16", "death" -> 100, "positive" -> 7772, "day" -> 
        21], 
       Association[
       "date" -> "2020-03-17", "death" -> 124, "positive" -> 10021, "day" -> 
        22], 
       Association[
       "date" -> "2020-03-18", "death" -> 155, "positive" -> 13385, "day" -> 
        23], 
       Association[
       "date" -> "2020-03-19", "death" -> 203, "positive" -> 18085, "day" -> 
        24], 
       Association[
       "date" -> "2020-03-20", "death" -> 273, "positive" -> 24197, "day" -> 
        25], 
       Association[
       "date" -> "2020-03-21", "death" -> 335, "positive" -> 31013, "day" -> 
        26], 
       Association[
       "date" -> "2020-03-22", "death" -> 481, "positive" -> 40167, "day" -> 
        27], 
       Association[
       "date" -> "2020-03-23", "death" -> 582, "positive" -> 51602, "day" -> 
        28], 
       Association[
       "date" -> "2020-03-24", "death" -> 820, "positive" -> 62351, "day" -> 
        29], 
       Association[
       "date" -> "2020-03-25", "death" -> 1058, "positive" -> 75242, "day" -> 
        30], 
       Association[
       "date" -> "2020-03-26", "death" -> 1374, "positive" -> 92976, "day" -> 
        31], 
       Association[
       "date" -> "2020-03-27", "death" -> 1782, "positive" -> 112220, "day" -> 
        32], 
       Association[
       "date" -> "2020-03-28", "death" -> 2333, "positive" -> 131826, "day" -> 
        33], 
       Association[
       "date" -> "2020-03-29", "death" -> 2837, "positive" -> 151270, "day" -> 
        34], 
       Association[
       "date" -> "2020-03-30", "death" -> 3425, "positive" -> 172740, "day" -> 
        35], 
       Association[
       "date" -> "2020-03-31", "death" -> 4332, "positive" -> 197924, "day" -> 
        36], 
       Association[
       "date" -> "2020-04-01", "death" -> 5336, "positive" -> 224040, "day" -> 
        37], 
       Association[
       "date" -> "2020-04-02", "death" -> 6514, "positive" -> 252085, "day" -> 
        38], 
       Association[
       "date" -> "2020-04-03", "death" -> 7799, "positive" -> 283923, "day" -> 
        39]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "date"} -> 1, {All, "death"} -> 1, {All, "positive"} -> 
        1, {All, "day"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "date" -> TypeSystem`PackageScope`AtomShape[96.00000000000001], 
            "death" -> TypeSystem`PackageScope`AtomShape[34], "positive" -> 
            TypeSystem`PackageScope`AtomShape[34], "day" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"date", "death", "positive", "day"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 39], "Meta" -> 
     Association["ID" -> 225030735917006], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "date"} -> 1, {All, "death"} -> 1, {All, "positive"} -> 
        1, {All, "day"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "date" -> TypeSystem`PackageScope`AtomShape[96.00000000000001], 
            "death" -> TypeSystem`PackageScope`AtomShape[34], "positive" -> 
            TypeSystem`PackageScope`AtomShape[34], "day" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 4, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"date", "death", "positive", "day"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 39], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     39, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "date"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["death", 
                  Style[
                  "death", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "death"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "death"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["positive", 
                  Style[
                  "positive", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "positive"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "positive"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["day", 
                  Style[
                  "day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "day"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "day"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2020-02-25", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-26", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-27", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-28", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-02-29", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-03", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["145"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-04", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-05", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["367"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-06", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-07", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["631"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-08", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["827"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-09", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-10", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1551"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-12", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2796"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3745"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4727"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-03-15", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5915"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{317., {335.5, 342.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{317., {335.5, 342.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8161020401906366`*^9, 3.8161048203911924`*^9, 
  3.8161049196442833`*^9, 3.81610497804467*^9, 3.816107006780218*^9, 
  3.8161071273361945`*^9, 3.8161071720560026`*^9, 3.816109437883172*^9, 
  3.81610954122478*^9, 3.81648494338632*^9, 3.8165276662922525`*^9, 
  3.8167985835964646`*^9, 3.8168012670798874`*^9, 3.8168013246867313`*^9, 
  3.8168879991530237`*^9, 3.8168887748741918`*^9, 3.816894096821422*^9, 
  3.8169585543208523`*^9, 3.816962383049409*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"43423c45-7069-4b89-a79b-b1d46492d64d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association["day" -> 1, "death" -> 0, "positive" -> 0], 
       Association["day" -> 2, "death" -> 2, "positive" -> 0], 
       Association["day" -> 3, "death" -> 2, "positive" -> 0], 
       Association["day" -> 4, "death" -> 4, "positive" -> 0], 
       Association["day" -> 5, "death" -> 5, "positive" -> 18], 
       Association["day" -> 6, "death" -> 8, "positive" -> 50], 
       Association["day" -> 7, "death" -> 11, "positive" -> 94], 
       Association["day" -> 8, "death" -> 14, "positive" -> 145], 
       Association["day" -> 9, "death" -> 16, "positive" -> 279], 
       Association["day" -> 10, "death" -> 20, "positive" -> 367], 
       Association["day" -> 11, "death" -> 26, "positive" -> 497], 
       Association["day" -> 12, "death" -> 27, "positive" -> 631], 
       Association["day" -> 13, "death" -> 31, "positive" -> 827], 
       Association["day" -> 14, "death" -> 35, "positive" -> 1112], 
       Association["day" -> 15, "death" -> 37, "positive" -> 1551], 
       Association["day" -> 16, "death" -> 43, "positive" -> 2053], 
       Association["day" -> 17, "death" -> 51, "positive" -> 2796], 
       Association["day" -> 18, "death" -> 56, "positive" -> 3745], 
       Association["day" -> 19, "death" -> 64, "positive" -> 4727], 
       Association["day" -> 20, "death" -> 79, "positive" -> 5915], 
       Association["day" -> 21, "death" -> 100, "positive" -> 7772], 
       Association["day" -> 22, "death" -> 124, "positive" -> 10021], 
       Association["day" -> 23, "death" -> 155, "positive" -> 13385], 
       Association["day" -> 24, "death" -> 203, "positive" -> 18085], 
       Association["day" -> 25, "death" -> 273, "positive" -> 24197], 
       Association["day" -> 26, "death" -> 335, "positive" -> 31013], 
       Association["day" -> 27, "death" -> 481, "positive" -> 40167], 
       Association["day" -> 28, "death" -> 582, "positive" -> 51602], 
       Association["day" -> 29, "death" -> 820, "positive" -> 62351], 
       Association["day" -> 30, "death" -> 1058, "positive" -> 75242], 
       Association["day" -> 31, "death" -> 1374, "positive" -> 92976], 
       Association["day" -> 32, "death" -> 1782, "positive" -> 112220], 
       Association["day" -> 33, "death" -> 2333, "positive" -> 131826], 
       Association["day" -> 34, "death" -> 2837, "positive" -> 151270], 
       Association["day" -> 35, "death" -> 3425, "positive" -> 172740], 
       Association["day" -> 36, "death" -> 4332, "positive" -> 197924], 
       Association["day" -> 37, "death" -> 5336, "positive" -> 224040], 
       Association["day" -> 38, "death" -> 6514, "positive" -> 252085], 
       Association["day" -> 39, "death" -> 7799, "positive" -> 283923]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "day"} -> 1, {All, "death"} -> 1, {All, "positive"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "day" -> TypeSystem`PackageScope`AtomShape[34], "death" -> 
            TypeSystem`PackageScope`AtomShape[34], "positive" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"day", "death", "positive"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 39], "Meta" -> 
     Association["ID" -> 225035030884303], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "day"} -> 1, {All, "death"} -> 1, {All, "positive"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "day" -> TypeSystem`PackageScope`AtomShape[34], "death" -> 
            TypeSystem`PackageScope`AtomShape[34], "positive" -> 
            TypeSystem`PackageScope`AtomShape[34]]], 
          DirectedInfinity[1], 3, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"day", "death", "positive"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer]}], 39], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     39, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["day", 
                  Style[
                  "day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "day"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "day"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["death", 
                  Style[
                  "death", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "death"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "death"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["positive", 
                  Style[
                  "positive", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "positive"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "positive"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["145"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["367"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["631"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["827"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1551"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2053"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2796"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3745"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4727"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["death"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5915"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["positive"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    39, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{250., {335.5, 342.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{250., {335.5, 342.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8161020401906366`*^9, 3.8161048203911924`*^9, 
  3.8161049196442833`*^9, 3.81610497804467*^9, 3.816107006780218*^9, 
  3.8161071273361945`*^9, 3.8161071720560026`*^9, 3.816109437883172*^9, 
  3.81610954122478*^9, 3.81648494338632*^9, 3.8165276662922525`*^9, 
  3.8167985835964646`*^9, 3.8168012670798874`*^9, 3.8168013246867313`*^9, 
  3.8168879991530237`*^9, 3.8168887748741918`*^9, 3.816894096821422*^9, 
  3.8169585543208523`*^9, 3.8169623834427834`*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"c73010e6-9200-44fb-a2b3-3e7a72cd11ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Citation", ":", 
    RowBox[{
    "Wednesday", " ", "office", " ", "hour", " ", "with", " ", "Deborah"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xVal", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"findat", "[", 
       RowBox[{"All", ",", "\"\<day\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yVal", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"findat", "[", 
       RowBox[{"All", ",", "\"\<death\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y2Val", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"findat", "[", 
       RowBox[{"All", ",", "\"\<positive\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deathdat", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xVal", ",", "yVal"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"dplot", "=", 
    RowBox[{"ListPlot", "[", "deathdat", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8161050011345534`*^9, 3.8161050194825077`*^9}, {
  3.8161050510484858`*^9, 3.816105175560653*^9}, {3.816105312087867*^9, 
  3.8161053253099256`*^9}, {3.8161075397925663`*^9, 3.816107542826023*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"d335fce6-baa2-4e0f-9229-389b9044dae6"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0CuLAlEYgOFhk3GCwWBQERUR8X6/zCqGBYNoMikuBpPsImiSwaTNYrKI
wWDaYLGI+Cv8EQZ/givfW845MDy88zGXc7yDcXv4YRhG8P96K+tZNdRlqTq0
NjWdmi70oBsD2v0I+jCGfkxpzxUwhEUMY1V9r/1JR+ma+h27QcfpLzqBTUxi
S/2va4dOYxcz2MOs2P+mc/SIzovmD80+nxOafZpzuiTGFnRZ3K3oirhc05zL
bENb4n0r2nRhz5xzCx+Y07cj85r4+GNO30/M6+LvmTk9vVgvu6s4WA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 39.}, {0, 7799.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8161051802533555`*^9, 3.816105335174044*^9, 
  3.816107007320743*^9, 3.8161071348559704`*^9, 3.8161071736088076`*^9, 
  3.8161094393426323`*^9, 3.8161095426727443`*^9, 3.816484944977332*^9, 
  3.8165276679027634`*^9, 3.8167985850903835`*^9, 3.816801268523097*^9, 
  3.816801326081154*^9, 3.8168880007104053`*^9, 3.816888776326109*^9, 
  3.8168940982755795`*^9, 3.8169585558131557`*^9, 3.8169623838158016`*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"d9cc9f00-deac-4eba-9ec5-3c2b522c1390"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "This", " ", "model", " ", "gives", " ", "me", " ", "the", " ", "amount", 
   " ", "of", " ", "deaths", " ", "for", " ", "a", " ", "given", " ", 
   "period", " ", "of", " ", "days"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8161108318593254`*^9, 3.8161108663057847`*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"d81225f0-1043-4f55-8091-29ffbdd890bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"model", "=", 
  RowBox[{
   RowBox[{"a", "*", 
    RowBox[{"b", "^", 
     RowBox[{"(", "x", ")"}]}]}], "+", "d"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"deathdat", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "d"}], "}"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fn", "[", "x_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"model", "/.", "fit"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fn", "[", "30", "]"}]}], "Input",
 CellChangeTimes->{{3.8161060158535204`*^9, 3.8161060946679773`*^9}, {
   3.8161061288203497`*^9, 3.81610620173999*^9}, {3.816106243097855*^9, 
   3.816106274060502*^9}, {3.8161064958727355`*^9, 3.8161065052992563`*^9}, {
   3.8161066367126937`*^9, 3.8161066449207053`*^9}, {3.8161066787778225`*^9, 
   3.816106681417486*^9}, {3.816106805541031*^9, 3.816106821739977*^9}, 
   3.816107182394995*^9, {3.816107346679989*^9, 3.816107359389719*^9}, {
   3.816109463069334*^9, 3.816109489356671*^9}, {3.8161096032850943`*^9, 
   3.8161096368829207`*^9}, {3.816109741711299*^9, 3.81610974178901*^9}, {
   3.816109964601205*^9, 3.81610996807296*^9}, {3.816110006288802*^9, 
   3.8161100065125704`*^9}, {3.8165345443903713`*^9, 3.81653454739117*^9}, {
   3.8165375536063795`*^9, 3.816537553823131*^9}, {3.816538787823645*^9, 
   3.816538787991293*^9}, {3.8165388383511295`*^9, 3.8165388689220676`*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"bff8f2ae-486e-4a3b-8162-0bdb13a99539"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   SuperscriptBox["b", "x"]}], "+", "d"}]], "Output",
 CellChangeTimes->{
  3.816106683870195*^9, 3.8161068260400925`*^9, 3.8161070074564233`*^9, 
   3.8161071404551425`*^9, {3.816107173666828*^9, 3.8161071841333785`*^9}, 
   3.816107218134266*^9, {3.816107349782293*^9, 3.816107361509173*^9}, {
   3.816109439387886*^9, 3.816109491723154*^9}, 3.816109542726158*^9, 
   3.8161096395370045`*^9, 3.8161097439045863`*^9, 3.8161099709199657`*^9, 
   3.816110009794509*^9, 3.816484945029667*^9, 3.816527667942444*^9, 
   3.8165345528868456`*^9, 3.816537556865097*^9, 3.81653878986022*^9, {
   3.8165388405632877`*^9, 3.816538870582675*^9}, 3.8167985851132026`*^9, 
   3.816801268547869*^9, 3.816801326103447*^9, 3.8168880007322297`*^9, 
   3.8168887763587418`*^9, 3.816894098306756*^9, 3.816958555838179*^9, 
   3.816962383837157*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"313b2ce1-8ceb-49df-96e8-fcc8fdae9b84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "2.0181922245053827`"}], ",", 
   RowBox[{"b", "\[Rule]", "1.2368337535865384`"}], ",", 
   RowBox[{"d", "\[Rule]", 
    RowBox[{"-", "40.22205912362602`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.816106683870195*^9, 3.8161068260400925`*^9, 3.8161070074564233`*^9, 
   3.8161071404551425`*^9, {3.816107173666828*^9, 3.8161071841333785`*^9}, 
   3.816107218134266*^9, {3.816107349782293*^9, 3.816107361509173*^9}, {
   3.816109439387886*^9, 3.816109491723154*^9}, 3.816109542726158*^9, 
   3.8161096395370045`*^9, 3.8161097439045863`*^9, 3.8161099709199657`*^9, 
   3.816110009794509*^9, 3.816484945029667*^9, 3.816527667942444*^9, 
   3.8165345528868456`*^9, 3.816537556865097*^9, 3.81653878986022*^9, {
   3.8165388405632877`*^9, 3.816538870582675*^9}, 3.8167985851132026`*^9, 
   3.816801268547869*^9, 3.816801326103447*^9, 3.8168880007322297`*^9, 
   3.8168887763587418`*^9, 3.816894098306756*^9, 3.816958555838179*^9, 
   3.8169623838408165`*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"8876e749-3d53-4d1d-9acf-267d6e754666"],

Cell[BoxData["1146.3726068518808`"], "Output",
 CellChangeTimes->{
  3.816106683870195*^9, 3.8161068260400925`*^9, 3.8161070074564233`*^9, 
   3.8161071404551425`*^9, {3.816107173666828*^9, 3.8161071841333785`*^9}, 
   3.816107218134266*^9, {3.816107349782293*^9, 3.816107361509173*^9}, {
   3.816109439387886*^9, 3.816109491723154*^9}, 3.816109542726158*^9, 
   3.8161096395370045`*^9, 3.8161097439045863`*^9, 3.8161099709199657`*^9, 
   3.816110009794509*^9, 3.816484945029667*^9, 3.816527667942444*^9, 
   3.8165345528868456`*^9, 3.816537556865097*^9, 3.81653878986022*^9, {
   3.8165388405632877`*^9, 3.816538870582675*^9}, 3.8167985851132026`*^9, 
   3.816801268547869*^9, 3.816801326103447*^9, 3.8168880007322297`*^9, 
   3.8168887763587418`*^9, 3.816894098306756*^9, 3.816958555838179*^9, 
   3.816962383843296*^9},
 CellLabel->
  "Out[420]=",ExpressionUUID->"d4dc336c-3067-46f9-a18f-9c3c2337667f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "1146.37", " ", "deaths", " ", "is", " ", "a", " ", "resonable", " ", 
    "prediction", " ", "after", " ", "30", " ", "days"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "best", " ", "fit", " ", "line", " ", "with", " ", "points", 
    " ", "to", " ", "double", " ", "check", " ", "the", " ", "fit"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.816110877011877*^9, 3.8161109442014737`*^9}, {
  3.816534565237237*^9, 3.8165345750039663`*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"b1a27e93-c00d-47b4-a332-33c14f7d7b06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"model", "/.", "fit"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Min", "[", "xVal", "]"}], ",", 
     RowBox[{"Max", "[", "xVal", "]"}]}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{"Point", ",", "deathdat"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.816109246514103*^9, 3.8161092487058306`*^9}, {
   3.8161093087502365`*^9, 3.8161093113134947`*^9}, 3.816959752168546*^9, 
   3.816962695909623*^9},
 CellLabel->
  "In[453]:=",ExpressionUUID->"c3941a93-3777-4b4c-acf5-571f2b51b5ba"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwBUQOu/CFib1JlAgAAADQAAAACAAAAyqcs0AAA8D8Jm2r66dxCwF8+qnK9
L/A/ab+qGh/cQsD01CcVel/wP5kOGrpT20LAHgIjWvO+8D9Szj51u9lCwHJc
GeTlffE/G9ah04TWQsAaEQb4yvvyP9fsKej+z0LAa3rfH5X39T+QhTMgjsJC
wAxNkm8p7/s/J/JblwWmQsAMzUfopm8EQBSnVC3PX0LAby/tXvp5CkByD33K
aBJCwC6ATVL8MhBAl5ieNna5QcCWUoplOmkTQHTmDibCR0HA7YLaG5loFkD4
9BH0oMpAwDedkMI2qBlAztKioIMqQMDG7srQqdgcQDQs9wcC4D7AQp4Ygj3S
H0DIaK3rM0Y9wNgb5hEIhiFAvGUfziQ6O8CHl0m0gQcjQHQCPEvQ+DjA2C5v
CmaBJEBU8HgfsWE2wCK7x9hpGyZAQpWv3jQSM8Bk9qn4/ZknQC5fd55T3C7A
nya/kLE4KUAepAA/oIslwHxyltzPzypAKGkS7mpmFcBQbfd5fkssQEBMYQEN
UOM/Hl2Lj0znLUBEfslgJm4gQOP7qPaqZy9A0Osq1VOYMEDRx/xqFIQwQKZe
q53FUTtAgh+GtIhQMUBPzzUgaehDQK5O1CZFDzJAXZwFM2HGSkBX+DtVEd4y
QBSaVANmx1FAfHlorCWfM0AaQ3qKYZ5WQHIIdl1vXDRA2NyGgu4tXEDkEZ3K
yCk1QAqOh+vCpGFA0vKIYGrpNUCWLl8wvI1lQD1OjrIbuTZAKlwYSnSOakB5
t3ReAoU3QBTQ+BMCMXBAMPgfMzFDOEB/a7vOIGRzQGSz5MNvETlAs7rho4Z7
d0AURm599tE5QK+5CDcb/XtAlebYkLKOOkCBTB+J7JSAQJMBXWB+WztAxRFU
C2Djg0AM9KVYkho8QMhCqIwMhodAAmEIDbbpPEAh7+lZiiyMQHOlL+ohqz1A
hMsTpYymkEC29zchw2g+QLXrkGTVmJNAdcRZFHQ2P0AUh1wrGl2XQLBoQDBt
9j9AzUGhdm+Cm0C0QyAEO2NAQKlETndKaKBA+NkQHVrJQEAbAJBRaH+jQPrb
Y0qdKEFAdIBkPKzkpkA6m8NV6I9BQMiVWOhZPKtANWsj5xDBQUDKbuxXvqyt
QCUyeYU=
       "]]},
     Annotation[#, "Charting`Private`Tag$360969#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Epilog->{
    PointBox[{1, 0}], 
    PointBox[{2, 2}], 
    PointBox[{3, 2}], 
    PointBox[{4, 4}], 
    PointBox[{5, 5}], 
    PointBox[{6, 8}], 
    PointBox[{7, 11}], 
    PointBox[{8, 14}], 
    PointBox[{9, 16}], 
    PointBox[{10, 20}], 
    PointBox[{11, 26}], 
    PointBox[{12, 27}], 
    PointBox[{13, 31}], 
    PointBox[{14, 35}], 
    PointBox[{15, 37}], 
    PointBox[{16, 43}], 
    PointBox[{17, 51}], 
    PointBox[{18, 56}], 
    PointBox[{19, 64}], 
    PointBox[{20, 79}], 
    PointBox[{21, 100}], 
    PointBox[{22, 124}], 
    PointBox[{23, 155}], 
    PointBox[{24, 203}], 
    PointBox[{25, 273}], 
    PointBox[{26, 335}], 
    PointBox[{27, 481}], 
    PointBox[{28, 582}], 
    PointBox[{29, 820}], 
    PointBox[{30, 1058}], 
    PointBox[{31, 1374}], 
    PointBox[{32, 1782}], 
    PointBox[{33, 2333}], 
    PointBox[{34, 2837}], 
    PointBox[{35, 3425}], 
    PointBox[{36, 4332}], 
    PointBox[{37, 5336}], 
    PointBox[{38, 6514}], 
    PointBox[{39, 7799}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 39}, {-37.72589044766762, 3798.37176455357}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8169626965151405`*^9},
 CellLabel->
  "Out[453]=",ExpressionUUID->"e4103dfb-c595-46b0-8a47-1af58586e954"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"I", "'"}], "d", " ", "like", " ", "to", " ", "have", " ", "my", 
     " ", "model", " ", "read", " ", "a", " ", 
     RowBox[{"population", "/", "death"}], " ", "value", " ", "and", " ", 
     "then", " ", "give", " ", "me", " ", "a", " ", "day", " ", "value", " ", 
     "so", " ", "I", " ", "created", " ", "a", " ", "new", " ", "plot", " ", 
     "with", " ", "deaths", " ", "on", " ", "the", " ", "x"}], "-", 
    RowBox[{
    "axis", " ", "and", " ", "days", " ", "on", " ", "the", " ", "y"}], "-", 
    "axis"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"model2", "=", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "d"}], ")"}], "/", "a"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "2.0181922245053827`"}], ",", 
       RowBox[{"b", "\[Rule]", "1.2368337535865384`"}], ",", 
       RowBox[{"d", "\[Rule]", 
        RowBox[{"-", "40.22205912362602`"}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deathdat2", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"yVal", ",", "xVal"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"dplot2", "=", 
    RowBox[{"ListPlot", "[", "deathdat2", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deaths", "[", "x_", "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"model2", "/.", "fit"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"deaths", "[", "1146.3726068518808`", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8161076258725195`*^9, 3.816107682722138*^9}, {
   3.8161077944641156`*^9, 3.8161077953225517`*^9}, {3.816107830447031*^9, 
   3.8161080937158403`*^9}, {3.8161082421846685`*^9, 
   3.8161082541754985`*^9}, {3.8161082971611943`*^9, 3.816108320095991*^9}, {
   3.8161086295323443`*^9, 3.8161087155877542`*^9}, {3.8161090971690197`*^9, 
   3.8161091026136303`*^9}, {3.816109143357614*^9, 3.8161091471185493`*^9}, 
   3.816109202083972*^9, {3.8161097904342957`*^9, 3.816109867631195*^9}, {
   3.816109926110387*^9, 3.8161099471403933`*^9}, 3.8161109770856385`*^9, {
   3.8165376631474066`*^9, 3.81653768696531*^9}, {3.8165377797797413`*^9, 
   3.81653778129502*^9}, {3.8165383728911667`*^9, 3.8165383735563025`*^9}, {
   3.81689392194098*^9, 3.8168939523624496`*^9}, {3.816896950290067*^9, 
   3.8168969612379875`*^9}, {3.8169597409245386`*^9, 3.816959745922553*^9}, 
   3.8169598885979853`*^9, 3.816960406252709*^9, 
   3.816962716415697*^9},ExpressionUUID->"bdf4294c-b9fd-4b34-85c6-\
2cc93a33ae00"],

Cell[BoxData[
 RowBox[{"4.704671546683741`", " ", 
  RowBox[{"Log", "[", 
   RowBox[{"0.4954929405919594`", " ", 
    RowBox[{"(", 
     RowBox[{"40.22205912362602`", "\[VeryThinSpace]", "+", "x"}], ")"}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{
  3.816798585265483*^9, 3.8168012686376586`*^9, 3.816801326185467*^9, 
   3.8168880011128535`*^9, 3.8168887764544296`*^9, 3.8168939640377398`*^9, 
   3.8168940984168606`*^9, 3.816896963903957*^9, 3.816958556185341*^9, {
   3.8169597414921503`*^9, 3.816959746774831*^9}, 3.8169598892701797`*^9, 
   3.8169604197674227`*^9, 3.816962383905018*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"cf92f6bb-0f39-424f-a25f-96228ca681d1"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxt0L1qwlAYgOHg5JjBwaGDiqgEKf60VdPWpAYHwUF0crIoHZxEEewkwclu
Lk4uxcHBycHFRcSr8CIccgm1fO+Sg4Hw5OUL5+Qk2h00vwKapiVv97/+y7N4
sO8bRF0xpBjBMCbwAdPKexmM4RPG0VTWecUUWmiI7od/H7dCP9JV/75ujc5i
HXPYwLx4ainf2cZn7OCL+NmjC3SfLor6kC6J3pjm3PqU5tyZGf0m/v7Q7+J8
QZfF7yXNf7qsaFs016JLGxvm/Mfzljl93TGvsN6eOT06MHfEyZG5Y/8BMyI4
WA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7799.}, {0, 39.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.816798585265483*^9, 3.8168012686376586`*^9, 3.816801326185467*^9, 
   3.8168880011128535`*^9, 3.8168887764544296`*^9, 3.8168939640377398`*^9, 
   3.8168940984168606`*^9, 3.816896963903957*^9, 3.816958556185341*^9, {
   3.8169597414921503`*^9, 3.816959746774831*^9}, 3.8169598892701797`*^9, 
   3.8169604197674227`*^9, 3.8169623839323006`*^9},
 CellLabel->
  "Out[425]=",ExpressionUUID->"4e6f0a2e-a2e8-4ed3-9c58-e79676e4b8bd"],

Cell[BoxData["29.999999999999996`"], "Output",
 CellChangeTimes->{
  3.816798585265483*^9, 3.8168012686376586`*^9, 3.816801326185467*^9, 
   3.8168880011128535`*^9, 3.8168887764544296`*^9, 3.8168939640377398`*^9, 
   3.8168940984168606`*^9, 3.816896963903957*^9, 3.816958556185341*^9, {
   3.8169597414921503`*^9, 3.816959746774831*^9}, 3.8169598892701797`*^9, 
   3.8169604197674227`*^9, 3.816962383937261*^9},
 CellLabel->
  "Out[427]=",ExpressionUUID->"bea58b70-52e9-4ebf-876c-d0b6318738da"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dbestfit", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model2", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "2.0181922245053827`"}], ",", 
        RowBox[{"b", "\[Rule]", "1.2368337535865384`"}], ",", 
        RowBox[{"d", "\[Rule]", 
         RowBox[{"-", "40.22205912362602`"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "6000"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.816537814834022*^9, 3.8165378516619954`*^9}, {
   3.816538421175741*^9, 3.816538457340564*^9}, {3.8165387684171624`*^9, 
   3.8165387691904263`*^9}, {3.8168943192714415`*^9, 3.8168943348234563`*^9}, 
   3.8168943851906056`*^9, {3.816897012338543*^9, 3.816897013312366*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"07ab260d-887e-4216-b08f-6f4348d158b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dplot2", ",", " ", "dbestfit"}], "]"}]], "Input",
 CellChangeTimes->{{3.816894283087656*^9, 3.816894307441019*^9}, {
   3.816958869651306*^9, 3.8169588812795877`*^9}, 3.8169597312324743`*^9, 
   3.816960399295209*^9},
 CellLabel->
  "In[429]:=",ExpressionUUID->"82b8d7a1-552c-4da2-93db-65e4f2c2afd1"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxt0L1qwlAYgOHg5JjBwaGDiqgEKf60VdPWpAYHwUF0crIoHZxEEewkwclu
Lk4uxcHBycHFRcSr8CIccgm1fO+Sg4Hw5OUL5+Qk2h00vwKapiVv97/+y7N4
sO8bRF0xpBjBMCbwAdPKexmM4RPG0VTWecUUWmiI7od/H7dCP9JV/75ujc5i
HXPYwLx4ainf2cZn7OCL+NmjC3SfLor6kC6J3pjm3PqU5tyZGf0m/v7Q7+J8
QZfF7yXNf7qsaFs016JLGxvm/Mfzljl93TGvsN6eOT06MHfEyZG5Y/8BMyI4
WA==
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
GwkmkffN86xY4vXTkxO/BSROzOTpTEv8H8ef36U=
        "]]},
      Annotation[#, "Charting`Private`Tag$360463#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7799.}, {0, 39.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8169604228458223`*^9, 3.8169623839956694`*^9},
 CellLabel->
  "Out[429]=",ExpressionUUID->"8eb25c65-e80f-488e-ad38-b3f806bf50b0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"model2", " ", "looks", " ", "good"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8168943552393603`*^9, 3.816894370669692*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"4c691404-2664-4772-b067-8985d972fe62"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "do", " ", "the", " ", "same", " ", "for", " ", "positive", 
    " ", "cases"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8165388848129044`*^9, 3.816538908608984*^9}, 
   3.816958943223111*^9},
 CellLabel->
  "In[431]:=",ExpressionUUID->"ee87ec1b-6e54-4180-ad85-77f1dabe04d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xValue", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"findat", "[", 
       RowBox[{"All", ",", "\"\<day\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yValue", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"findat", "[", 
       RowBox[{"All", ",", "\"\<positive\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y2Value", "=", 
     RowBox[{"Normal", "[", 
      RowBox[{"findat", "[", 
       RowBox[{"All", ",", "\"\<positive\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"posdat", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xValue", ",", "yValue"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"pplot", "=", 
    RowBox[{"ListPlot", "[", "posdat", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.816958950390155*^9, 3.816959051008741*^9}, {
   3.8169591246667166`*^9, 3.816959128148133*^9}, {3.816959395885027*^9, 
   3.8169593997265673`*^9}, 3.8169597275351562`*^9, 3.816960397809761*^9},
 CellLabel->
  "In[432]:=",ExpressionUUID->"184d4599-4dc8-40b4-ba15-8391efa007b5"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdzz1IQlEAhuGDEEhBGEQFNdxC+iNE7deyvNcmoSmECEJCcC6XHLvQ1FZN
DQ06BDW01FBTBNHS1lRTBE4tIQ4uLeX53uV64PDy8HGGM1rc2yyFjDET/7dd
nUbGBI8bZLjDkQ734yQdojk6ovpb2FGdIh5T98s4qjYO8LgaOcST6sMRnlY/
jvGMunuKY2r6HMfV7ipO8P4y+I/sDZ5VK7d4Th2+x/PqziNesPXPnvGiHH3F
S7bu9RtOybV3vCznPvGK7ddFHae1J7/xqvbyD16zrRaaOKPetbBr+1T6lX35
ZNB42j3reCUk+7Iz0MWelafC7LK73cO+bn310ssub+T7vD/sF0YX
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 39.}, {0, 283923.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.816960452328449*^9, 3.816962384040901*^9},
 CellLabel->
  "Out[436]=",ExpressionUUID->"bce0416e-0e6f-4851-bd79-7130b6c8948d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{
    RowBox[{"a", "*", 
     RowBox[{"b", "^", 
      RowBox[{"(", "x", ")"}]}]}], "+", "d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posfit", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"posdat", ",", "model", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "d"}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fn", "[", "x_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"model", "/.", "posfit"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fn", "[", "30", "]"}]}], "Input",
 CellChangeTimes->{{3.8169593493921347`*^9, 3.8169593737364674`*^9}, {
  3.8169609162492156`*^9, 3.816960918542685*^9}},
 CellLabel->
  "In[437]:=",ExpressionUUID->"c7d7ba47-4e86-426b-b164-b42da21639d5"],

Cell[BoxData["75709.13763120372`"], "Output",
 CellChangeTimes->{{3.8169593760218596`*^9, 3.816959403965087*^9}, 
   3.816960920469589*^9, 3.8169623840572615`*^9},
 CellLabel->
  "Out[440]=",ExpressionUUID->"56a1725a-455b-450b-a173-e34b311458e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"invposdat", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"yValue", ",", "xValue"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"invpplot", "=", 
  RowBox[{"ListPlot", "[", "invposdat", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8169594480240374`*^9, 3.816959475971738*^9}, {
   3.8169598109632654`*^9, 3.8169598146216087`*^9}, 3.8169603166118574`*^9, {
   3.816960473237729*^9, 3.816960542118251*^9}},
 CellLabel->
  "In[441]:=",ExpressionUUID->"92af98cd-8c12-486b-aec7-d4b81d5259cc"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdzy9IA2EcxvGXgTAUZIKooOGU4T9E5vyv0922NDCJIIKIDJZ1xUUPlmxu
yWCYQdBg0aBJBLHYTJpEMFlkGCwW9fd8y+3g5cvnHg7e6y/srBYjzrmhv/Pf
8NNIN73ww4w2OYaTtJPmaY8arOM+1StgT90t4QG1sYfjamwfD6o3FTysvhzg
UXW7isfU1BEeV1vrOMH3p3hCzV6E/6t8iSfV3ms8pW7e4mlrULvHM3L8Ec9a
/fMnPCefPON5Of+KF6xvx+94UXvyA6e0lz7xkrW+9YWX1atvnLbeFX+wbz3s
dhljICfKEdllzF5XCzseibJndZ+NNnb57KGdPWdeWetgz/m/0YZGFw==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 283923.}, {0, 39.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.81696009827352*^9, 3.8169604787344627`*^9, {3.8169605353949194`*^9, 
   3.8169605425672016`*^9}, 3.816962384103393*^9},
 CellLabel->
  "Out[442]=",ExpressionUUID->"f4ae4337-581c-4e51-8074-d024fea1a663"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"model3", "=", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"b", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "d"}], ")"}], "/", "a"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "1072.1330583014733`"}], ",", 
      RowBox[{"b", "\[Rule]", "1.1558848810752995`"}], ",", 
      RowBox[{"d", "\[Rule]", 
       RowBox[{"-", "7025.274203379352`"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positive", "[", "x_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"model3", "/.", "posfit"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"positive", "[", "75709.13763120372`", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Cross", " ", "refrence", " ", "previous", " ", "x", " ", "y", " ", 
    "values", " ", "to", " ", "double", " ", "check", " ", "models"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.816959225742177*^9, 3.8169592764798284`*^9}, {
   3.816959430797067*^9, 3.8169594351600547`*^9}, {3.8169594834478188`*^9, 
   3.8169594946786413`*^9}, {3.816959537228104*^9, 3.816959539717102*^9}, {
   3.8169596676064625`*^9, 3.816959667755885*^9}, 3.816959957826414*^9, 
   3.8169599991858616`*^9, 3.816960085110039*^9, {3.816960138776864*^9, 
   3.816960139293912*^9}, {3.8169602963353972`*^9, 3.8169603707193794`*^9}, {
   3.81696073835067*^9, 3.8169607693617673`*^9}, {3.8169608286620483`*^9, 
   3.816960842167706*^9}, 3.816960905797154*^9},
 CellLabel->
  "In[443]:=",ExpressionUUID->"77b12ec3-5995-4784-8ed7-f8300d42369d"],

Cell[BoxData["30.000000000000004`"], "Output",
 CellChangeTimes->{
  3.8169595423944764`*^9, 3.8169596696872225`*^9, {3.8169598176736965`*^9, 
   3.816959822769683*^9}, 3.816959959473551*^9, {3.8169600878069696`*^9, 
   3.8169601022595606`*^9}, 3.816960141425135*^9, {3.8169603094412193`*^9, 
   3.816960320776758*^9}, 3.81696037414882*^9, 3.8169609065492563`*^9, 
   3.8169623841192656`*^9},
 CellLabel->
  "Out[445]=",ExpressionUUID->"5b0af566-fea0-438b-9100-7316f8ca1cab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pbestfit", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model3", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "\[Rule]", "1072.1330583014733`"}], ",", 
        RowBox[{"b", "\[Rule]", "1.1558848810752995`"}], ",", 
        RowBox[{"d", "\[Rule]", 
         RowBox[{"-", "7025.274203379352`"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "250000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"invpplot", ",", "pbestfit"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8169605940199556`*^9, 3.816960647545292*^9}},
 CellLabel->
  "In[446]:=",ExpressionUUID->"cb6f09c9-5271-4b85-8943-ec98eed270c4"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdzy9IA2EcxvGXgTAUZIKooOGU4T9E5vyv0922NDCJIIKIDJZ1xUUPlmxu
yWCYQdBg0aBJBLHYTJpEMFlkGCwW9fd8y+3g5cvnHg7e6y/srBYjzrmhv/Pf
8NNIN73ww4w2OYaTtJPmaY8arOM+1StgT90t4QG1sYfjamwfD6o3FTysvhzg
UXW7isfU1BEeV1vrOMH3p3hCzV6E/6t8iSfV3ms8pW7e4mlrULvHM3L8Ec9a
/fMnPCefPON5Of+KF6xvx+94UXvyA6e0lz7xkrW+9YWX1atvnLbeFX+wbz3s
dhljICfKEdllzF5XCzseibJndZ+NNnb57KGdPWdeWetgz/m/0YZGFw==
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
HS3x/wBBqEi2
        "]]},
      Annotation[#, "Charting`Private`Tag$360593#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 283923.}, {0, 39.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8169606486867375`*^9, 3.816962384143078*^9},
 CellLabel->
  "Out[447]=",ExpressionUUID->"eacb5c78-d9ca-449e-9f44-a93024d833da"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Now", " ", "with", " ", "my", " ", "deaths", " ", "and", " ", "positive", 
    " ", "functions"}], ",", " ", 
   RowBox[{
   "I", " ", "can", " ", "estimate", " ", "the", " ", "value", " ", "of", " ",
     "deaths", " ", "and", " ", "poisitve", " ", "cases", " ", "for", " ", 
    "any", " ", "given", " ", "population"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8169609751986847`*^9, 3.8169610236601725`*^9}},
 CellLabel->
  "In[448]:=",ExpressionUUID->"140fe4b1-803c-4c11-a68f-002026740d73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "businessinsider", ".", "com"}], "/", "royal"}], 
     "-", "caribbean", "-", "debuts", "-", "worlds", "-", "largest", "-", 
     "cruise", "-", "ship", "-", "photos", "-", "2018", "-", "4"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "Symphony", " ", "of", " ", "the", " ", "Seas", " ", "is", 
     " ", "the", " ", "largest", " ", "passenger", " ", "capacity", " ", 
     "cruise", " ", "ship"}], ",", " ", 
    RowBox[{
    "holding", " ", "up", " ", "to", " ", "6680", " ", "passengers"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Let", "'"}], "s", " ", "see", " ", "what", " ", "happens", 
        " ", "when", " ", "Covid"}], "-", 
       RowBox[{
       "19", " ", "is", " ", "added", " ", "to", " ", "the", " ", "mix"}]}], 
      " ", ">"}], ":"}], ")"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"positive", "[", "6680", "]"}]}]], "Input",
 CellChangeTimes->{{3.8169612151812963`*^9, 3.816961309928524*^9}, {
   3.8169613422975335`*^9, 3.8169614322160788`*^9}, 
   3.8169627817191496`*^9},ExpressionUUID->"c33638bb-bf26-419f-9028-\
a11b0e565ec6"],

Cell[BoxData["17.589547368189404`"], "Output",
 CellChangeTimes->{3.816961433141367*^9, 3.8169623841653934`*^9},
 CellLabel->
  "Out[449]=",ExpressionUUID->"f4be1bef-514f-413c-96ac-d08730e133eb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"In", " ", "roughly", " ", "17", " ", "days"}], ",", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "Symphony", " ", "of", " ", "Seas", " ", "will", " ", 
     "become", " ", "the", " ", "Symphony", " ", "of", " ", "Positive", " ", 
     "Covid"}], "-", 
    RowBox[{"19", " ", "Cases"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.816961439370348*^9, 3.816961513248768*^9}, {
  3.816961603114033*^9, 3.816961603273024*^9}},
 CellLabel->
  "In[450]:=",ExpressionUUID->"67410d03-c751-4bd6-bdae-8a0f0ff71cac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deaths", "[", "6680", "]"}]], "Input",
 CellChangeTimes->{{3.8169615726019416`*^9, 3.816961584847003*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"0ca86b7e-fb19-4cf6-88d5-9aa0c853f285"],

Cell[BoxData["38.15805862776715`"], "Output",
 CellChangeTimes->{3.8169615859078226`*^9, 3.8169623842105017`*^9},
 CellLabel->
  "Out[451]=",ExpressionUUID->"cdf517b6-d498-492b-a0af-37e60cf1b7a3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"In", " ", "roughly", " ", "38", " ", "days"}], ",", " ", 
   RowBox[{
   "the", " ", "Symphony", " ", "of", " ", "Seas", " ", "will", " ", "become",
     " ", "the", " ", 
    RowBox[{"world", "'"}], "s", " ", "largest", " ", "floating", " ", 
    "graveyard"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8169615921954646`*^9, 3.8169616967369003`*^9}, 
   3.8169627922141523`*^9},ExpressionUUID->"29bdeea2-fa92-4ccf-b4c5-\
e37474831e4b"],

Cell["The End", "Text",
 CellChangeTimes->{{3.8169617148595123`*^9, 
  3.816961717685898*^9}},ExpressionUUID->"4baeba37-7ea9-4114-b990-\
c1c8dcfded5e"],

Cell["\<\
Epilogue:
I would\[CloseCurlyQuote]ve liked to dive deeper into my deaths and positive \
predictions using imported datasets of cruise ship passengers, but I feel I \
have done sufficient work accounting for the whole of my project. Working on \
the project and getting a chunk of code right granted me one of the most \
rewarding feelings, the type of feeling that makes you get up and dance. I \
learned a lot about the capabilities of Mathematica from this project alone, \
and I am incredibly proud of what I have accomplished.  Thank you Professor \
Davis and Deborah for facilitating my learning. It was a pleasure attending \
the class.\
\>", "Text",
 CellChangeTimes->{{3.816961759125925*^9, 3.8169619191916847`*^9}, {
   3.8169619760524173`*^9, 3.816961978172923*^9}, {3.8169620189078045`*^9, 
   3.8169620564548593`*^9}, {3.8169621102632136`*^9, 3.8169621655983095`*^9}, 
   3.816962198962325*^9, {3.816962939893074*^9, 
   3.816963182359583*^9}},ExpressionUUID->"fc02bd3b-2bfd-46d2-be48-\
197c5a9e71e0"]
}, Open  ]]
},
WindowSize->{1908, 989},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"eed4322e-08e8-4f0a-b5a1-1f57886676f7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 121, "Title",ExpressionUUID->"e4c27b7a-0fe9-4c4c-bc40-4653be60ccf8"],
Cell[754, 27, 249, 8, 99, "Text",ExpressionUUID->"d39b64a5-9f06-4e24-8fcd-23d50fbcb809"],
Cell[1006, 37, 1662, 24, 127, "Text",ExpressionUUID->"67e5898a-23d1-4267-b122-79ad00887edf"],
Cell[2671, 63, 421, 12, 35, "Input",ExpressionUUID->"cef2e524-2b46-4053-b6be-c4fa660c69ec"],
Cell[3095, 77, 965, 18, 60, "Input",ExpressionUUID->"827cdd42-20c8-4d86-a259-6902c5fe67de"],
Cell[4063, 97, 2902, 65, 74, "Input",ExpressionUUID->"5ca91c5b-9a1f-4ae0-994d-d871bfd233a9"],
Cell[6968, 164, 228, 4, 35, "Input",ExpressionUUID->"aa082176-ff94-4a92-adc9-d94f976928ad"],
Cell[CellGroupData[{
Cell[7221, 172, 540, 12, 49, "Input",ExpressionUUID->"3c03fec5-e39c-4e42-b296-79a33c287e21"],
Cell[7764, 186, 11997, 242, 314, "Output",ExpressionUUID->"96baf215-7690-414f-afa1-507044969e5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19798, 433, 463, 11, 49, "Input",ExpressionUUID->"ff05fdb2-d976-4a53-9cdd-e26ee6a9ccc3"],
Cell[20264, 446, 11810, 239, 314, "Output",ExpressionUUID->"90b77918-f012-4063-8144-9a6ec67bbe1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32111, 690, 508, 12, 49, "Input",ExpressionUUID->"50e4ac53-e52b-405e-b8fa-9d5a040ecfe2"],
Cell[32622, 704, 11710, 237, 314, "Output",ExpressionUUID->"dbef971c-e2fd-49ce-bcbd-aca223e05717"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44369, 946, 513, 10, 35, "Input",ExpressionUUID->"688063de-20ea-4d7a-852e-506611233b3d"],
Cell[44885, 958, 30889, 607, 331, "Output",ExpressionUUID->"f1460ff5-db17-4304-9dbd-4f4c39f47df9"]
}, Open  ]],
Cell[75789, 1568, 529, 13, 35, "Input",ExpressionUUID->"13232d0a-cfd9-4c22-bbaf-3a4d88375d5a"],
Cell[76321, 1583, 1454, 25, 60, "Input",ExpressionUUID->"5584c2a5-9260-4457-8688-6d961fc0e66d"],
Cell[77778, 1610, 1484, 25, 60, "Input",ExpressionUUID->"fc24549f-9559-4e47-a564-912d0c1be197"],
Cell[CellGroupData[{
Cell[79287, 1639, 2375, 53, 210, "Input",ExpressionUUID->"558a2770-1304-490b-ae76-83570b1506bc"],
Cell[81665, 1694, 1065, 21, 51, "Output",ExpressionUUID->"ccbb1dd7-f853-49e4-81b9-bcd1f6502a10"],
Cell[82733, 1717, 1064, 21, 51, "Output",ExpressionUUID->"5146e284-e76f-412a-9e79-927136539ece"],
Cell[83800, 1740, 629, 9, 40, "Output",ExpressionUUID->"75d4e9dc-42f3-4e96-8f4b-4dfafe34cd44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84466, 1754, 2396, 54, 210, "Input",ExpressionUUID->"11a5a5fc-8a3e-42a7-bee7-c2bd3b4f4e8c"],
Cell[86865, 1810, 1056, 21, 51, "Output",ExpressionUUID->"af0c5a88-c623-469a-8e5e-258f2e42660f"],
Cell[87924, 1833, 1053, 21, 51, "Output",ExpressionUUID->"303baa8c-0cb5-4c76-aab7-b963b0a6549c"],
Cell[88980, 1856, 625, 9, 40, "Output",ExpressionUUID->"036f988a-7ce2-4804-92b8-280531e3f4dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89642, 1870, 2378, 53, 210, "Input",ExpressionUUID->"5cc1f81c-115d-4971-8866-4007462f4cd8"],
Cell[92023, 1925, 1016, 21, 51, "Output",ExpressionUUID->"2d682ed9-69b2-4449-ad81-ff8a396b6f37"],
Cell[93042, 1948, 1017, 21, 51, "Output",ExpressionUUID->"376d8124-3d07-434b-9c13-e3c4fc7008ff"],
Cell[94062, 1971, 589, 9, 40, "Output",ExpressionUUID->"c0139c9b-5b1a-44ad-b899-59b016269323"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94688, 1985, 2091, 49, 84, "Input",ExpressionUUID->"35c72554-54f3-41c3-8a9f-21566ca7306e"],
Cell[96782, 2036, 20004, 429, 309, "Output",ExpressionUUID->"04ec1c71-a727-47e1-8b94-5691227d5bec"]
}, Open  ]],
Cell[116801, 2468, 204, 4, 35, "Input",ExpressionUUID->"510cc2de-5ff4-44f7-85d8-e89ea92ecce7"],
Cell[117008, 2474, 1511, 32, 108, "Input",ExpressionUUID->"3451ac5c-99c3-4dc8-80e8-04a3742fbca3"],
Cell[CellGroupData[{
Cell[118544, 2510, 179, 3, 35, "Input",ExpressionUUID->"e1e8b6dd-d072-4e29-b522-e0839089474e"],
Cell[118726, 2515, 11683, 237, 314, "Output",ExpressionUUID->"2eca0e7d-f60f-4e8b-896b-983c55b17a87"]
}, Open  ]],
Cell[130424, 2755, 485, 10, 35, "Input",ExpressionUUID->"55a7c0ed-3a4e-4b0b-8a9b-6f999d84f914"],
Cell[130912, 2767, 2416, 53, 48, "Input",ExpressionUUID->"52d97e01-8258-41d3-b07a-051a8c6ef246"],
Cell[CellGroupData[{
Cell[133353, 2824, 452, 10, 40, "Input",ExpressionUUID->"4dca9ca3-5073-4ca2-90ad-ad41fea446c7"],
Cell[133808, 2836, 10732, 222, 314, "Output",ExpressionUUID->"569690f7-8172-4248-889d-4f7097d89543"]
}, Open  ]],
Cell[144555, 3061, 909, 20, 60, "Input",ExpressionUUID->"4c235150-695b-42af-bd41-ae01913f6f08"],
Cell[CellGroupData[{
Cell[145489, 3085, 2955, 66, 123, "Input",ExpressionUUID->"64b14518-f2db-433f-b68a-47ac5af8cd59"],
Cell[148447, 3153, 17954, 404, 308, "Output",ExpressionUUID->"698e5c3c-d095-4380-bc90-0df1e85b6a22"]
}, Open  ]],
Cell[166416, 3560, 742, 13, 60, "Input",ExpressionUUID->"c10e2739-d196-4c4d-a13b-d87fc7623cb3"],
Cell[CellGroupData[{
Cell[167183, 3577, 2559, 55, 49, "Input",ExpressionUUID->"006e27e6-f1c5-4f29-816a-7cae5ffb62db"],
Cell[169745, 3634, 1291, 28, 54, "Output",ExpressionUUID->"5108aef0-0061-45ce-80d9-8b73be6fe23d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171073, 3667, 4236, 92, 218, "Input",ExpressionUUID->"be86035d-0914-4fd2-a421-234d1cbc3bc7"],
Cell[175312, 3761, 67131, 1297, 84, "Output",ExpressionUUID->"bb2f215a-bb3e-4bf1-9fa7-8c649b4b1b3a"],
Cell[242446, 5060, 37560, 728, 310, "Output",ExpressionUUID->"e871ed86-a250-422d-96bd-b34051ba909c"]
}, Open  ]],
Cell[280021, 5791, 1129, 27, 108, "Input",ExpressionUUID->"96bf23af-d131-4836-a190-b45b4eed2669"],
Cell[CellGroupData[{
Cell[281175, 5822, 2985, 65, 147, "Input",ExpressionUUID->"c1474e0b-df9c-45f3-998c-a19dcec186cb"],
Cell[284163, 5889, 22225, 433, 84, "Output",ExpressionUUID->"9311f4a5-6ab1-4674-9594-4c2e2a606a17"],
Cell[306391, 6324, 15898, 354, 313, "Output",ExpressionUUID->"7ed08f39-f0a5-4f8c-b670-c9bb2f498a5f"]
}, Open  ]],
Cell[322304, 6681, 203, 4, 35, "Input",ExpressionUUID->"aeb8da13-f258-4e4b-89d6-ab12110293ee"],
Cell[322510, 6687, 1009, 22, 84, "Input",ExpressionUUID->"895e296c-b59e-4d65-a90b-0c7602a1db72"],
Cell[CellGroupData[{
Cell[323544, 6713, 286, 7, 35, "Input",ExpressionUUID->"6a7f8932-54b0-48db-b155-0b9960bf1d53"],
Cell[323833, 6722, 625, 16, 40, "Output",ExpressionUUID->"87991990-294a-4e29-b8ad-db121aa9b40e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324495, 6743, 286, 7, 35, "Input",ExpressionUUID->"f528ec51-f730-4cee-857d-81555b184798"],
Cell[324784, 6752, 633, 16, 40, "Output",ExpressionUUID->"2e388f30-dd47-4490-b2d9-11fcef4049e5"]
}, Open  ]],
Cell[325432, 6771, 348, 7, 35, "Input",ExpressionUUID->"c821d28b-0cfe-4b14-b2cd-3811a4bfa660"],
Cell[CellGroupData[{
Cell[325805, 6782, 270, 7, 35, "Input",ExpressionUUID->"d2c3a0de-7531-4f71-b916-63ceefd9046a"],
Cell[326078, 6791, 1489, 37, 65, "Output",ExpressionUUID->"e7d0d736-615d-4a2c-be15-a64a6e89f3b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327604, 6833, 414, 11, 35, "Input",ExpressionUUID->"c14d926e-8e06-4944-b9f9-495a0dafd918"],
Cell[328021, 6846, 556, 10, 40, "Output",ExpressionUUID->"0b2b9275-0be2-41a3-931d-fcf27067172b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328614, 6861, 690, 17, 84, "Input",ExpressionUUID->"ad7a9064-4863-4624-ab6f-4e8b756618a7"],
Cell[329307, 6880, 13423, 275, 194, "Output",ExpressionUUID->"29407194-45a4-48e8-8975-958246b00895"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342767, 7160, 2005, 44, 119, "Input",ExpressionUUID->"45dacb11-6e3e-4da0-9cce-aa478316ed1c"],
Cell[344775, 7206, 5508, 109, 99, "Output",ExpressionUUID->"dd0e7391-ebc8-45b8-ac51-68bf9c96425f"],
Cell[350286, 7317, 5613, 111, 99, "Output",ExpressionUUID->"4c3484bc-432d-49a7-8084-cdd45c40dc47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355936, 7433, 1093, 25, 84, "Input",ExpressionUUID->"ed522dcf-c8b1-4a94-8356-78b56299b3f4"],
Cell[357032, 7460, 2484, 61, 54, "Output",ExpressionUUID->"07c52da5-af24-428f-9161-1bf6bb8a1a5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359553, 7526, 3183, 68, 172, "Input",ExpressionUUID->"69bacd5d-81bd-4c88-93d3-c7f15d1cff77"],
Cell[362739, 7596, 85634, 1676, 458, "Output",ExpressionUUID->"253f7406-498f-4ff5-9d30-38220141eeac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448410, 9277, 2852, 66, 216, "Input",ExpressionUUID->"fb223e19-235f-4338-b812-23f8ee183f43"],
Cell[451265, 9345, 655, 13, 40, "Output",ExpressionUUID->"dfac2a98-03d3-4a22-bca7-9ab7307044d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451957, 9363, 1312, 28, 60, "Input",ExpressionUUID->"bcf4290d-92dc-4155-93b0-9570ae212a41"],
Cell[453272, 9393, 62038, 1338, 355, "Output",ExpressionUUID->"e6870c97-da38-4091-9a46-86dceb8766d6"]
}, Open  ]],
Cell[515325, 10734, 879, 17, 60, "Input",ExpressionUUID->"1b0e0939-4914-4b33-9487-0a55160fe67d"],
Cell[CellGroupData[{
Cell[516229, 10755, 434, 9, 60, "Input",ExpressionUUID->"6defd18a-02c6-4d84-89a0-d5ee8ca17eb2"],
Cell[516666, 10766, 100761, 1961, 434, "Output",ExpressionUUID->"5e11a71b-a72c-4347-ae0f-e116ac8e7ed0"]
}, Open  ]],
Cell[617442, 12730, 326, 7, 35, "Input",ExpressionUUID->"dc33e222-4832-40fe-a7c2-53e9e16ac877"],
Cell[CellGroupData[{
Cell[617793, 12741, 566, 13, 60, "Input",ExpressionUUID->"991603d1-168b-41be-8927-d099e57c9242"],
Cell[618362, 12756, 136986, 2631, 426, "Output",ExpressionUUID->"b2e9f413-a95a-46f6-8ec0-1d456d188dad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755385, 15392, 3806, 87, 243, "Input",ExpressionUUID->"c7f77d4a-9914-40d5-9bc9-dee1cc874ced"],
Cell[759194, 15481, 122540, 2332, 309, "Output",ExpressionUUID->"cc1f019e-03fb-48ad-b1a4-566b3b02057f"]
}, Open  ]],
Cell[881749, 17816, 769, 13, 35, "Input",ExpressionUUID->"7362c33f-5356-4e1b-a82f-463607b53956"],
Cell[882521, 17831, 804, 17, 35, "Input",ExpressionUUID->"c1e4fedb-dada-43ed-818f-207e44373005"],
Cell[883328, 17850, 2391, 53, 147, "Input",ExpressionUUID->"00ec5ca1-b8a6-4542-99fb-377420b74117"],
Cell[885722, 17905, 1341, 30, 180, "Input",ExpressionUUID->"82bdc71f-cb56-4327-8a55-6b8604a86049"],
Cell[887066, 17937, 1654, 40, 84, "Input",ExpressionUUID->"15faea6a-b989-45ad-83bc-b5cef74cbf50"],
Cell[CellGroupData[{
Cell[888745, 17981, 148, 3, 35, "Input",ExpressionUUID->"a9d98bff-c3c8-4c56-b961-b5e7d9533c11"],
Cell[888896, 17986, 55387, 1003, 332, "Output",ExpressionUUID->"b1e8b192-87f5-4654-bed9-34a6c0c64fe5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944320, 18994, 506, 12, 60, "Input",ExpressionUUID->"260bc130-90ce-4d57-9b78-689e5a67ecd2"],
Cell[944829, 19008, 91922, 1699, 428, "Output",ExpressionUUID->"8b68f3cf-fce2-40a8-b64c-1b7f291ebb32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036788, 20712, 187, 3, 35, "Input",ExpressionUUID->"f2680635-3d06-4613-99d2-261dd86d4c77"],
Cell[1036978, 20717, 136913, 2630, 426, "Output",ExpressionUUID->"304bd9b0-0980-427b-8d01-f6da5c53907a"]
}, Open  ]],
Cell[1173906, 23350, 469, 9, 35, "Input",ExpressionUUID->"ed8e76a7-9cfa-4b12-b5c6-88b3ba2eea27"],
Cell[1174378, 23361, 1549, 30, 108, "Input",ExpressionUUID->"9715e6b6-6f0c-40f3-a734-31a1afd79234"],
Cell[CellGroupData[{
Cell[1175952, 23395, 3162, 90, 348, "Input",ExpressionUUID->"4954d531-942c-48d7-9d72-6b9f8799af3e"],
Cell[1179117, 23487, 74635, 1441, 701, "Output",ExpressionUUID->"63d80b93-6b21-43fb-964f-91fd519fd674"],
Cell[1253755, 24930, 48825, 936, 701, "Output",ExpressionUUID->"40b3fc22-7449-4900-8c83-b8e6bacf3b66"],
Cell[1302583, 25868, 87346, 1740, 701, "Output",ExpressionUUID->"43423c45-7069-4b89-a79b-b1d46492d64d"],
Cell[1389932, 27610, 74059, 1443, 701, "Output",ExpressionUUID->"c73010e6-9200-44fb-a2b3-3e7a72cd11ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1464028, 29058, 1367, 38, 156, "Input",ExpressionUUID->"d335fce6-baa2-4e0f-9229-389b9044dae6"],
Cell[1465398, 29098, 1948, 47, 300, "Output",ExpressionUUID->"d9cc9f00-deac-4eba-9ec5-3c2b522c1390"]
}, Open  ]],
Cell[1467361, 29148, 398, 8, 35, "Input",ExpressionUUID->"d81225f0-1043-4f55-8091-29ffbdd890bb"],
Cell[CellGroupData[{
Cell[1467784, 29160, 1540, 30, 108, "Input",ExpressionUUID->"bff8f2ae-486e-4a3b-8162-0bdb13a99539"],
Cell[1469327, 29192, 957, 17, 40, "Output",ExpressionUUID->"313b2ce1-8ceb-49df-96e8-fcc8fdae9b84"],
Cell[1470287, 29211, 1107, 20, 40, "Output",ExpressionUUID->"8876e749-3d53-4d1d-9acf-267d6e754666"],
Cell[1471397, 29233, 905, 14, 40, "Output",ExpressionUUID->"d4dc336c-3067-46f9-a18f-9c3c2337667f"]
}, Open  ]],
Cell[1472317, 29250, 622, 15, 60, "Input",ExpressionUUID->"b1a27e93-c00d-47b4-a332-33c14f7d7b06"],
Cell[CellGroupData[{
Cell[1472964, 29269, 646, 16, 35, "Input",ExpressionUUID->"c3941a93-3777-4b4c-acf5-571f2b51b5ba"],
Cell[1473613, 29287, 3932, 108, 296, "Output",ExpressionUUID->"e4103dfb-c595-46b0-8a47-1af58586e954"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1477582, 29400, 2674, 56, 180, "Input",ExpressionUUID->"bdf4294c-b9fd-4b34-85c6-2cc93a33ae00"],
Cell[1480259, 29458, 679, 14, 40, "Output",ExpressionUUID->"cf92f6bb-0f39-424f-a25f-96228ca681d1"],
Cell[1480941, 29474, 1893, 48, 309, "Output",ExpressionUUID->"4e6f0a2e-a2e8-4ed3-9c58-e79676e4b8bd"],
Cell[1482837, 29524, 494, 8, 40, "Output",ExpressionUUID->"bea58b70-52e9-4ebf-876c-d0b6318738da"]
}, Open  ]],
Cell[1483346, 29535, 856, 19, 35, "Input",ExpressionUUID->"07ab260d-887e-4216-b08f-6f4348d158b4"],
Cell[CellGroupData[{
Cell[1484227, 29558, 348, 7, 35, "Input",ExpressionUUID->"82b8d7a1-552c-4da2-93db-65e4f2c2afd1"],
Cell[1484578, 29567, 4727, 96, 309, "Output",ExpressionUUID->"8eb25c65-e80f-488e-ad38-b3f806bf50b0"]
}, Open  ]],
Cell[1489320, 29666, 247, 5, 35, "Input",ExpressionUUID->"4c691404-2664-4772-b067-8985d972fe62"],
Cell[1489570, 29673, 368, 9, 60, "Input",ExpressionUUID->"ee87ec1b-6e54-4180-ad85-77f1dabe04d1"],
Cell[CellGroupData[{
Cell[1489963, 29686, 1222, 33, 156, "Input",ExpressionUUID->"184d4599-4dc8-40b4-ba15-8391efa007b5"],
Cell[1491188, 29721, 1640, 43, 290, "Output",ExpressionUUID->"bce0416e-0e6f-4851-bd79-7130b6c8948d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1492865, 29769, 814, 22, 108, "Input",ExpressionUUID->"c7d7ba47-4e86-426b-b164-b42da21639d5"],
Cell[1493682, 29793, 246, 4, 40, "Output",ExpressionUUID->"56a1725a-455b-450b-a173-e34b311458e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493965, 29802, 557, 13, 60, "Input",ExpressionUUID->"92af98cd-8c12-486b-aec7-d4b81d5259cc"],
Cell[1494525, 29817, 1724, 45, 309, "Output",ExpressionUUID->"f4ae4337-581c-4e51-8074-d024fea1a663"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1496286, 29867, 1588, 36, 108, "Input",ExpressionUUID->"77b12ec3-5995-4784-8ed7-f8300d42369d"],
Cell[1497877, 29905, 475, 8, 40, "Output",ExpressionUUID->"5b0af566-fea0-438b-9100-7316f8ca1cab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1498389, 29918, 730, 19, 60, "Input",ExpressionUUID->"cb6f09c9-5271-4b85-8943-ec98eed270c4"],
Cell[1499122, 29939, 4324, 89, 309, "Output",ExpressionUUID->"eacb5c78-d9ca-449e-9f44-a93024d833da"]
}, Open  ]],
Cell[1503461, 30031, 552, 12, 35, "Input",ExpressionUUID->"140fe4b1-803c-4c11-a68f-002026740d73"],
Cell[CellGroupData[{
Cell[1504038, 30047, 1351, 35, 108, "Input",ExpressionUUID->"c33638bb-bf26-419f-9028-a11b0e565ec6"],
Cell[1505392, 30084, 195, 3, 40, "Output",ExpressionUUID->"f4be1bef-514f-413c-96ac-d08730e133eb"]
}, Open  ]],
Cell[1505602, 30090, 560, 13, 35, "Input",ExpressionUUID->"67410d03-c751-4bd6-bdae-8a0f0ff71cac"],
Cell[CellGroupData[{
Cell[1506187, 30107, 213, 4, 35, "Input",ExpressionUUID->"0ca86b7e-fb19-4cf6-88d5-9aa0c853f285"],
Cell[1506403, 30113, 196, 3, 40, "Output",ExpressionUUID->"cdf517b6-d498-492b-a0af-37e60cf1b7a3"]
}, Open  ]],
Cell[1506614, 30119, 490, 11, 35, "Input",ExpressionUUID->"29bdeea2-fa92-4ccf-b4c5-e37474831e4b"],
Cell[1507107, 30132, 151, 3, 43, "Text",ExpressionUUID->"4baeba37-7ea9-4114-b990-c1c8dcfded5e"],
Cell[1507261, 30137, 1024, 17, 127, "Text",ExpressionUUID->"fc02bd3b-2bfd-46d2-be48-197c5a9e71e0"]
}, Open  ]]
}
]
*)

